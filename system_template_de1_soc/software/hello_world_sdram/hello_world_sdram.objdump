
hello_world_sdram.elf:     file format elf32-littlenios2
hello_world_sdram.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800238

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00011410 memsz 0x00011410 flags r-x
    LOAD off    0x00012430 vaddr 0x00811430 paddr 0x00813008 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00014be0 vaddr 0x00814be0 paddr 0x00814be0 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010b7c  00800238  00800238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000067c  00810db4  00810db4  00011db4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00811430  00813008  00012430  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00814be0  00814be0  00014be0  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00814d38  00814d38  00014008  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00014008  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001120  00000000  00000000  00014038  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002ec7a  00000000  00000000  00015158  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000bc1f  00000000  00000000  00043dd2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0001824e  00000000  00000000  0004f9f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002610  00000000  00000000  00067c40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000411e  00000000  00000000  0006a250  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00020462  00000000  00000000  0006e36e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000030  00000000  00000000  0008e7d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002858  00000000  00000000  0008e800  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  0009451e  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00094521  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00094524  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00094525  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00094526  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0009452a  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0009452e  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00094532  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0009453b  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00094544  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0009454d  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002b  00000000  00000000  0009455f  2**0
                  CONTENTS, READONLY
 29 .jdi          00005099  00000000  00000000  0009458a  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003b0ff  00000000  00000000  00099623  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800238 l    d  .text	00000000 .text
00810db4 l    d  .rodata	00000000 .rodata
00811430 l    d  .rwdata	00000000 .rwdata
00814be0 l    d  .bss	00000000 .bss
00814d38 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../hello_world_sdram_bsp//obj/HAL/src/crt0.o
00800280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00803544 l     F .text	000000c0 __sbprintf
00810f38 l     O .rodata	00000010 blanks.1
00810f28 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00803768 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
008053dc l     F .text	00000008 __fp_lock
008053f0 l     F .text	00000008 __fp_unlock
008053f8 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00811430 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810fec l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
008088c8 l     F .text	000000f4 __sprint_r.part.0
00809d34 l     F .text	000000c0 __sbprintf
00811120 l     O .rodata	00000010 blanks.1
00811110 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00809fec l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080e3e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080e4f8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080e55c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0080e674 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0080e760 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080e8c8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080e9b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080eb94 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00812ff8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080ee00 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080eeb4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080eff4 l     F .text	00000034 alt_dev_reg
00811f70 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080f2ec l     F .text	0000020c altera_avalon_jtag_uart_irq
0080f4f8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080fb3c l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080fdbc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00810234 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00810384 l     F .text	0000003c alt_get_errno
008103c0 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00814c0c g     O .bss	00000004 alt_instruction_exception_handler
00808080 g     F .text	00000070 _mprec_log10
0080816c g     F .text	00000060 __any_on
0080a444 g     F .text	00000058 _isatty_r
00810ff8 g     O .rodata	00000028 __mprec_tinytens
0080ead0 g     F .text	0000007c alt_main
008012b0 g     F .text	000000cc _puts_r
00814c38 g     O .bss	00000100 alt_irq
0080a590 g     F .text	00000064 _lseek_r
00813008 g       *ABS*	00000000 __flash_rwdata_start
0080cf14 g     F .text	00000080 .hidden __eqdf2
00814d38 g       *ABS*	00000000 __alt_heap_start
0080aef8 g     F .text	00000060 _kill_r
00801278 g     F .text	00000038 printf
0080a8c4 g     F .text	0000006c _wcrtomb_r
0080aa68 g     F .text	00000098 _signal_r
00808864 g     F .text	0000005c __sseek
00805740 g     F .text	00000010 __sinit
0080a764 g     F .text	00000148 __swbuf_r
0080a49c g     F .text	00000074 _setlocale_r
00805560 g     F .text	00000078 __sfmoreglue
0080eb70 g     F .text	00000024 __malloc_unlock
00800968 g     F .text	000003f4 .hidden __divsf3
00806dc0 g     F .text	0000012c memmove
0080572c g     F .text	00000014 _cleanup
00806fdc g     F .text	000000a4 _Balloc
0080115c g     F .text	00000070 .hidden __fixsfsi
0080cf94 g     F .text	000000e8 .hidden __gtdf2
008107a8 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0080ee3c g     F .text	00000078 times
008061a8 g     F .text	00000008 __localeconv_l
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080a3e4 g     F .text	00000060 _fstat_r
00814bec g     O .bss	00000004 errno
008087dc g     F .text	00000008 __seofread
00814bf8 g     O .bss	00000004 alt_argv
0081afd0 g       *ABS*	00000000 _gp
0080e654 g     F .text	00000020 getpid
00811df0 g     O .rwdata	00000180 alt_fd_list
008107cc g     F .text	00000090 alt_find_dev
00806cc0 g     F .text	00000100 memcpy
008053e4 g     F .text	0000000c _cleanup_r
0080e298 g     F .text	000000b8 .hidden __floatsidf
00810308 g     F .text	0000007c alt_io_redirect
0080d07c g     F .text	000000e8 .hidden __ltdf2
00810db4 g       *ABS*	00000000 __DTOR_END__
0080137c g     F .text	00000010 puts
00810aac g     F .text	00000098 alt_exception_cause_generated_bad_addr
00807fdc g     F .text	000000a4 __ratio
00809d18 g     F .text	0000001c __vfiprintf_internal
0080f6f4 g     F .text	00000220 altera_avalon_jtag_uart_read
00801248 g     F .text	00000030 _printf_r
0080bc34 g     F .text	00000064 .hidden __udivsi3
0080e6b0 g     F .text	000000b0 isatty
0080ab00 g     F .text	000000c4 _raise_r
00809eb0 g     F .text	00000064 __assert_func
00811048 g     O .rodata	000000c8 __mprec_tens
00810a1c g     F .text	00000090 alt_icache_flush
00814be8 g     O .bss	00000004 __malloc_top_pad
0080af58 g     F .text	00000004 _getpid_r
008061b0 g     F .text	0000000c _localeconv_r
0080744c g     F .text	000000b0 __i2b
00805ba0 g     F .text	000004c8 __sfvwrite_r
0080abc4 g     F .text	000000bc __sigtramp_r
00808730 g     F .text	00000058 _sbrk_r
0080a644 g     F .text	00000064 _read_r
00812ff0 g     O .rwdata	00000004 alt_max_fd
0080a0ac g     F .text	00000070 _fclose_r
00805358 g     F .text	00000084 fflush
00814be4 g     O .bss	00000004 __malloc_max_sbrked_mem
0080bcf4 g     F .text	000008f0 .hidden __adddf3
00807d70 g     F .text	00000108 __b2d
0080b57c g     F .text	000005c4 .hidden __umoddi3
0080e9f0 g     F .text	000000e0 lseek
00812fd0 g     O .rwdata	00000004 _global_impure_ptr
008081cc g     F .text	00000564 _realloc_r
00814d38 g       *ABS*	00000000 __bss_end
0081014c g     F .text	000000e8 alt_iic_isr_register
008106a0 g     F .text	00000108 alt_tick
0080af5c g     F .text	00000620 .hidden __udivdi3
0080a348 g     F .text	00000024 _fputwc_r
00811020 g     O .rodata	00000028 __mprec_bigtens
00807200 g     F .text	00000138 __s2b
0080a9f4 g     F .text	00000018 abort
0080e350 g     F .text	00000090 .hidden __floatunsidf
00807a90 g     F .text	00000058 __mcmp
00805760 g     F .text	00000014 __fp_lock_all
00810100 g     F .text	0000004c alt_ic_irq_enabled
008105fc g     F .text	000000a4 alt_alarm_stop
00814c00 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000c8 alt_irq_handler
00811dc8 g     O .rwdata	00000028 alt_dev_null
0080fd70 g     F .text	0000004c alt_dcache_flush_all
00807338 g     F .text	00000064 __hi0bits
0080e218 g     F .text	00000080 .hidden __fixdfsi
00813008 g       *ABS*	00000000 __ram_rwdata_end
00812fe8 g     O .rwdata	00000008 alt_dev_list
0080eef0 g     F .text	00000104 write
00811430 g       *ABS*	00000000 __ram_rodata_end
0080e598 g     F .text	000000bc fstat
0080e79c g     F .text	0000012c kill
0080d07c g     F .text	000000e8 .hidden __ledf2
008077c0 g     F .text	00000148 __pow5mult
008089d4 g     F .text	00001344 ___vfiprintf_internal_r
0080bc98 g     F .text	0000005c .hidden __umodsi3
00814d38 g       *ABS*	00000000 end
0080f22c g     F .text	000000c0 altera_avalon_jtag_uart_init
008001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
00810db4 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080fbb8 g     F .text	00000084 alt_avalon_timer_sc_init
008011cc g     F .text	00000054 .hidden __clzsi2
0080f914 g     F .text	00000228 altera_avalon_jtag_uart_write
00805750 g     F .text	00000004 __sfp_lock_acquire
00806bf0 g     F .text	000000d0 memchr
00801424 g     F .text	00002104 ___vfprintf_internal_r
008058a4 g     F .text	000002fc _free_r
00811284 g     O .rodata	00000180 _ctype_b
0080a510 g     F .text	0000000c __locale_mb_cur_max
00810c94 g     F .text	00000120 __call_exitprocs
00812fd8 g     O .rwdata	00000004 __malloc_sbrk_base
00800238 g     F .text	0000004c _start
00814c04 g     O .bss	00000004 _alt_tick_rate
00807908 g     F .text	00000188 __lshift
00814c08 g     O .bss	00000004 _alt_nticks
0080ad3c g     F .text	000000a0 signal
0080ebd0 g     F .text	00000108 read
0080f064 g     F .text	00000064 alt_sys_init
00810c04 g     F .text	00000090 __register_exitproc
008074fc g     F .text	000002c4 __multiply
0080f598 g     F .text	00000068 altera_avalon_jtag_uart_close
00801220 g     F .text	00000028 .hidden __mulsi3
00811430 g       *ABS*	00000000 __ram_rwdata_start
00810db4 g       *ABS*	00000000 __ram_rodata_start
00814c10 g     O .bss	00000028 __malloc_current_mallinfo
00807e78 g     F .text	00000164 __d2b
0080f0c8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00810964 g     F .text	000000b8 alt_get_fd
00809e58 g     F .text	00000058 _close_r
00800284 g     F .text	000000ac generateVector
00810b8c g     F .text	00000078 memcmp
0080f188 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00814d38 g       *ABS*	00000000 __alt_stack_base
0080f1d8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00803604 g     F .text	00000164 __swsetup_r
0080c5e4 g     F .text	00000930 .hidden __divdf3
008055d8 g     F .text	00000154 __sfp
008080f0 g     F .text	0000007c __copybits
00811854 g     O .rwdata	00000408 __malloc_av_
0080575c g     F .text	00000004 __sinit_lock_release
0080d164 g     F .text	000007ac .hidden __muldf3
00808788 g     F .text	00000054 __sread
0081085c g     F .text	00000108 alt_find_file
0080fdf8 g     F .text	000000a8 alt_dev_llist_insert
0080eb4c g     F .text	00000024 __malloc_lock
0080ed48 g     F .text	000000b8 sbrk
008052f8 g     F .text	00000060 _fflush_r
00809f28 g     F .text	000000c4 _calloc_r
00814be0 g       *ABS*	00000000 __bss_start
00806eec g     F .text	000000f0 memset
00800408 g     F .text	000000f4 main
00814bfc g     O .bss	00000004 alt_envp
00814be0 g     O .bss	00000004 __malloc_max_total_mem
0080f128 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080a8ac g     F .text	00000018 __swbuf
008088c0 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080a11c g     F .text	00000070 fclose
00803988 g     F .text	00001748 _dtoa_r
00806410 g     F .text	000007e0 _malloc_r
0080a9c4 g     F .text	00000030 __ascii_wctomb
00812ff4 g     O .rwdata	00000004 alt_errno
0080a18c g     F .text	00000020 _fiprintf_r
0080addc g     F .text	00000060 _init_signal
00806068 g     F .text	00000098 _fwalk
0080a5f4 g     F .text	0000000c _mbtowc_r
0080bb40 g     F .text	00000080 .hidden __divsi3
00805788 g     F .text	0000011c _malloc_trim_r
00810db4 g       *ABS*	00000000 __CTOR_END__
00800d5c g     F .text	00000400 .hidden __mulsf3
0080a6a8 g     F .text	000000b8 strcmp
00810db4 g       *ABS*	00000000 __flash_rodata_start
00810db4 g       *ABS*	00000000 __DTOR_LIST__
0080cf14 g     F .text	00000080 .hidden __nedf2
0080f028 g     F .text	0000003c alt_irq_init
0080ecd8 g     F .text	00000070 alt_release_fd
00810de0 g     O .rodata	00000100 .hidden __clz_tab
00814bf0 g     O .bss	00000004 _PathLocale
00810b44 g     F .text	00000014 atexit
00800330 g     F .text	000000d8 sumVector
00809df4 g     F .text	00000064 _write_r
0080a51c g     F .text	00000074 setlocale
00812fd4 g     O .rwdata	00000004 _impure_ptr
00814bf4 g     O .bss	00000004 alt_argc
008050d0 g     F .text	00000228 __sflush_r
0080ff04 g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
0080a600 g     F .text	00000044 __ascii_mbtowc
00807d14 g     F .text	0000005c __ulp
00805774 g     F .text	00000014 __fp_unlock_all
00812fe0 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
008061bc g     F .text	0000000c localeconv
00806378 g     F .text	00000098 __swhatbuf_r
0080ff9c g     F .text	00000050 alt_ic_isr_register
00813008 g       *ABS*	00000000 _edata
00814d38 g       *ABS*	00000000 _end
0080a1e4 g     F .text	00000164 __fputwc
00800238 g       *ABS*	00000000 __ram_exceptions_end
0080f600 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00810074 g     F .text	0000008c alt_ic_irq_disable
008087e4 g     F .text	00000080 __swrite
00812fdc g     O .rwdata	00000004 __malloc_trim_threshold
00810b58 g     F .text	00000034 exit
0080a1ac g     F .text	00000038 fiprintf
0080a760 g     F .text	00000004 _vfiprintf_r
00806100 g     F .text	000000a8 _fwalk_reent
00807ae8 g     F .text	0000022c __mdiff
0080bbc0 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00805754 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00811180 g     O .rodata	00000101 _ctype_
0080e1c4 g     F .text	00000054 .hidden __unorddf2
0080e524 g     F .text	00000038 _exit
0080fc3c g     F .text	00000134 alt_alarm_start
008061c8 g     F .text	000001b0 __smakebuf_r
0080138c g     F .text	00000098 strlen
0080aa0c g     F .text	0000005c _init_signal_r
0081049c g     F .text	00000160 open
0080cf94 g     F .text	000000e8 .hidden __gedf2
00809f14 g     F .text	00000014 __assert
008089bc g     F .text	00000018 __sprint_r
0080ff68 g     F .text	00000034 alt_icache_flush_all
00812ffc g     O .rwdata	00000004 alt_priority_mask
0080ffec g     F .text	00000088 alt_ic_irq_enable
00803528 g     F .text	0000001c __vfprintf_internal
0080a9b8 g     F .text	0000000c _wctomb_r
0080d910 g     F .text	000008b4 .hidden __subdf3
0080739c g     F .text	000000b0 __lo0bits
00813000 g     O .rwdata	00000008 alt_alarm_list
0080fea0 g     F .text	00000064 _do_ctors
0080ae3c g     F .text	000000bc __sigtramp
0080a930 g     F .text	00000088 wcrtomb
0080e41c g     F .text	000000dc close
008004fc g     F .text	0000046c .hidden __addsf3
00811c5c g     O .rwdata	0000016c __global_locale
0080e930 g     F .text	00000084 alt_load
0080a36c g     F .text	00000078 fputwc
0080ac80 g     F .text	000000bc raise
00805758 g     F .text	00000004 __sinit_lock_acquire
008070a4 g     F .text	0000015c __multadd
00807080 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08408e14 	ori	at,at,568
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001c40 	call	8001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0ffff17 	ldw	r3,-4(fp)
  800130:	e0bffe17 	ldw	r2,-8(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001126 	beq	r2,zero,800180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	e0bffd17 	ldw	r2,-12(fp)
  800140:	100690fa 	slli	r3,r2,3
  800144:	00802074 	movhi	r2,129
  800148:	1885883a 	add	r2,r3,r2
  80014c:	10d30e17 	ldw	r3,19512(r2)
  800150:	e0bffd17 	ldw	r2,-12(fp)
  800154:	100890fa 	slli	r4,r2,3
  800158:	00802074 	movhi	r2,129
  80015c:	2085883a 	add	r2,r4,r2
  800160:	10930f17 	ldw	r2,19516(r2)
  800164:	1009883a 	mov	r4,r2
  800168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  80016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  800170:	0005313a 	rdctl	r2,ipending
  800174:	e0bffb15 	stw	r2,-20(fp)
  return active;
  800178:	e0bffb17 	ldw	r2,-20(fp)
  80017c:	00000706 	br	80019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
  800180:	e0bffe17 	ldw	r2,-8(fp)
  800184:	1085883a 	add	r2,r2,r2
  800188:	e0bffe15 	stw	r2,-8(fp)
      i++;
  80018c:	e0bffd17 	ldw	r2,-12(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  800198:	003fe406 	br	80012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  80019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  8001a0:	e0bfff17 	ldw	r2,-4(fp)
  8001a4:	103fde1e 	bne	r2,zero,800120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a8:	0001883a 	nop
}
  8001ac:	0001883a 	nop
  8001b0:	e037883a 	mov	sp,fp
  8001b4:	dfc00117 	ldw	ra,4(sp)
  8001b8:	df000017 	ldw	fp,0(sp)
  8001bc:	dec00204 	addi	sp,sp,8
  8001c0:	f800283a 	ret

008001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001c4:	defffb04 	addi	sp,sp,-20
  8001c8:	dfc00415 	stw	ra,16(sp)
  8001cc:	df000315 	stw	fp,12(sp)
  8001d0:	df000304 	addi	fp,sp,12
  8001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001d8:	000531fa 	rdctl	r2,exception
  8001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001e0:	e0bfff17 	ldw	r2,-4(fp)
  8001e4:	1004d0ba 	srli	r2,r2,2
  8001e8:	108007cc 	andi	r2,r2,31
  8001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001f0:	0005333a 	rdctl	r2,badaddr
  8001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001f8:	d0a70f17 	ldw	r2,-25540(gp)
  8001fc:	10000726 	beq	r2,zero,80021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800200:	d0a70f17 	ldw	r2,-25540(gp)
  800204:	e0ffff17 	ldw	r3,-4(fp)
  800208:	e1bffe17 	ldw	r6,-8(fp)
  80020c:	e17ffd17 	ldw	r5,-12(fp)
  800210:	1809883a 	mov	r4,r3
  800214:	103ee83a 	callr	r2
  800218:	00000206 	br	800224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  80021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800220:	0005883a 	mov	r2,zero
}
  800224:	e037883a 	mov	sp,fp
  800228:	dfc00117 	ldw	ra,4(sp)
  80022c:	df000017 	ldw	fp,0(sp)
  800230:	dec00204 	addi	sp,sp,8
  800234:	f800283a 	ret

Disassembly of section .text:

00800238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  80023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800244:	00bffd16 	blt	zero,r2,80023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800248:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  80024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800250:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800254:	d6abf414 	ori	gp,gp,45008
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800258:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  80025c:	1092f814 	ori	r2,r2,19424

    movhi r3, %hi(__bss_end)
  800260:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800264:	18d34e14 	ori	r3,r3,19768

    beq r2, r3, 1f
  800268:	10c00326 	beq	r2,r3,800278 <_start+0x40>

0:
    stw zero, (r2)
  80026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800274:	10fffd36 	bltu	r2,r3,80026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800278:	080e9300 	call	80e930 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  80027c:	080ead00 	call	80ead0 <alt_main>

00800280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800280:	003fff06 	br	800280 <alt_after_alt_main>

00800284 <generateVector>:
#define step 1/1024.0
#define N 261121


// Generates the vector x and stores it in the memory
void generateVector(float x[N]){
  800284:	defffb04 	addi	sp,sp,-20
  800288:	dfc00415 	stw	ra,16(sp)
  80028c:	df000315 	stw	fp,12(sp)
  800290:	dc000215 	stw	r16,8(sp)
  800294:	df000304 	addi	fp,sp,12
  800298:	e13ffd15 	stw	r4,-12(fp)
	int i;
	x[0] = 0;
  80029c:	e0bffd17 	ldw	r2,-12(fp)
  8002a0:	10000015 	stw	zero,0(r2)
	for(i=1;i<N;i++){
  8002a4:	00800044 	movi	r2,1
  8002a8:	e0bffe15 	stw	r2,-8(fp)
  8002ac:	00001406 	br	800300 <generateVector+0x7c>
		x[i] = x[i-1] + step;
  8002b0:	e0fffe17 	ldw	r3,-8(fp)
  8002b4:	00900034 	movhi	r2,16384
  8002b8:	10bfffc4 	addi	r2,r2,-1
  8002bc:	1885883a 	add	r2,r3,r2
  8002c0:	100490ba 	slli	r2,r2,2
  8002c4:	e0fffd17 	ldw	r3,-12(fp)
  8002c8:	1885883a 	add	r2,r3,r2
  8002cc:	11000017 	ldw	r4,0(r2)
  8002d0:	e0bffe17 	ldw	r2,-8(fp)
  8002d4:	100490ba 	slli	r2,r2,2
  8002d8:	e0fffd17 	ldw	r3,-12(fp)
  8002dc:	18a1883a 	add	r16,r3,r2
  8002e0:	014ea034 	movhi	r5,14976
  8002e4:	08004fc0 	call	8004fc <__addsf3>
  8002e8:	1007883a 	mov	r3,r2
  8002ec:	1805883a 	mov	r2,r3
  8002f0:	80800015 	stw	r2,0(r16)
	for(i=1;i<N;i++){
  8002f4:	e0bffe17 	ldw	r2,-8(fp)
  8002f8:	10800044 	addi	r2,r2,1
  8002fc:	e0bffe15 	stw	r2,-8(fp)
  800300:	e0fffe17 	ldw	r3,-8(fp)
  800304:	00800134 	movhi	r2,4
  800308:	10bf0004 	addi	r2,r2,-1024
  80030c:	10ffe80e 	bge	r2,r3,8002b0 <generateVector+0x2c>
	}
}
  800310:	0001883a 	nop
  800314:	0001883a 	nop
  800318:	e6ffff04 	addi	sp,fp,-4
  80031c:	dfc00217 	ldw	ra,8(sp)
  800320:	df000117 	ldw	fp,4(sp)
  800324:	dc000017 	ldw	r16,0(sp)
  800328:	dec00304 	addi	sp,sp,12
  80032c:	f800283a 	ret

00800330 <sumVector>:
float sumVector(float x[], int M){
  800330:	defff904 	addi	sp,sp,-28
  800334:	dfc00615 	stw	ra,24(sp)
  800338:	df000515 	stw	fp,20(sp)
  80033c:	dc000415 	stw	r16,16(sp)
  800340:	df000504 	addi	fp,sp,20
  800344:	e13ffc15 	stw	r4,-16(fp)
  800348:	e17ffb15 	stw	r5,-20(fp)
	//YOUR CODE GOES HERE
	float y=0;
  80034c:	e03ffe15 	stw	zero,-8(fp)
	for(int i=0;i<M;i++){
  800350:	e03ffd15 	stw	zero,-12(fp)
  800354:	00002006 	br	8003d8 <sumVector+0xa8>
		y += x[i]+ x[i]*x[i];
  800358:	e0bffd17 	ldw	r2,-12(fp)
  80035c:	100490ba 	slli	r2,r2,2
  800360:	e0fffc17 	ldw	r3,-16(fp)
  800364:	1885883a 	add	r2,r3,r2
  800368:	14000017 	ldw	r16,0(r2)
  80036c:	e0bffd17 	ldw	r2,-12(fp)
  800370:	100490ba 	slli	r2,r2,2
  800374:	e0fffc17 	ldw	r3,-16(fp)
  800378:	1885883a 	add	r2,r3,r2
  80037c:	11000017 	ldw	r4,0(r2)
  800380:	e0bffd17 	ldw	r2,-12(fp)
  800384:	100490ba 	slli	r2,r2,2
  800388:	e0fffc17 	ldw	r3,-16(fp)
  80038c:	1885883a 	add	r2,r3,r2
  800390:	10c00017 	ldw	r3,0(r2)
  800394:	180b883a 	mov	r5,r3
  800398:	0800d5c0 	call	800d5c <__mulsf3>
  80039c:	1007883a 	mov	r3,r2
  8003a0:	1805883a 	mov	r2,r3
  8003a4:	100b883a 	mov	r5,r2
  8003a8:	8009883a 	mov	r4,r16
  8003ac:	08004fc0 	call	8004fc <__addsf3>
  8003b0:	1007883a 	mov	r3,r2
  8003b4:	1805883a 	mov	r2,r3
  8003b8:	100b883a 	mov	r5,r2
  8003bc:	e13ffe17 	ldw	r4,-8(fp)
  8003c0:	08004fc0 	call	8004fc <__addsf3>
  8003c4:	1007883a 	mov	r3,r2
  8003c8:	e0fffe15 	stw	r3,-8(fp)
	for(int i=0;i<M;i++){
  8003cc:	e0bffd17 	ldw	r2,-12(fp)
  8003d0:	10800044 	addi	r2,r2,1
  8003d4:	e0bffd15 	stw	r2,-12(fp)
  8003d8:	e0fffd17 	ldw	r3,-12(fp)
  8003dc:	e0bffb17 	ldw	r2,-20(fp)
  8003e0:	18bfdd16 	blt	r3,r2,800358 <sumVector+0x28>
	}
	return y;
  8003e4:	e0bffe17 	ldw	r2,-8(fp)
  8003e8:	1007883a 	mov	r3,r2
}
  8003ec:	1805883a 	mov	r2,r3
  8003f0:	e6ffff04 	addi	sp,fp,-4
  8003f4:	dfc00217 	ldw	ra,8(sp)
  8003f8:	df000117 	ldw	fp,4(sp)
  8003fc:	dc000017 	ldw	r16,0(sp)
  800400:	dec00304 	addi	sp,sp,12
  800404:	f800283a 	ret

00800408 <main>:
int main()
{
  800408:	defffe04 	addi	sp,sp,-8
  80040c:	dfc00115 	stw	ra,4(sp)
  800410:	df000015 	stw	fp,0(sp)
  800414:	d839883a 	mov	fp,sp
  800418:	023ffc34 	movhi	r8,65520
  80041c:	4203f104 	addi	r8,r8,4036
  800420:	da37883a 	add	sp,sp,r8
	printf("Task2 - Time\n");
  800424:	01002074 	movhi	r4,129
  800428:	21036d04 	addi	r4,r4,3508
  80042c:	080137c0 	call	80137c <puts>
	float x[N];

	//Returned result
	float y;

	generateVector(x);
  800430:	00bffc34 	movhi	r2,65520
  800434:	1083fb04 	addi	r2,r2,4076
  800438:	e085883a 	add	r2,fp,r2
  80043c:	1009883a 	mov	r4,r2
  800440:	08002840 	call	800284 <generateVector>

	//The following is used for timing
	char buf[40];
	clock_t exec_t1,exec_t2;

	exec_t1 = times(NULL); // get system time before starting the process
  800444:	0009883a 	mov	r4,zero
  800448:	080ee3c0 	call	80ee3c <times>
  80044c:	e0bffd15 	stw	r2,-12(fp)
	// The code that you want to time goes here
	y = sumVector(x,N);
  800450:	00bffc34 	movhi	r2,65520
  800454:	1083fb04 	addi	r2,r2,4076
  800458:	e085883a 	add	r2,fp,r2
  80045c:	01400134 	movhi	r5,4
  800460:	297f0044 	addi	r5,r5,-1023
  800464:	1009883a 	mov	r4,r2
  800468:	08003300 	call	800330 <sumVector>
  80046c:	e0bfff15 	stw	r2,-4(fp)

	// till here
	exec_t2 = times(NULL); // get system time after finishing the process
  800470:	0009883a 	mov	r4,zero
  800474:	080ee3c0 	call	80ee3c <times>
  800478:	e0bffc15 	stw	r2,-16(fp)

	int i;
	for (i=0;i<10;i++){
  80047c:	e03ffe15 	stw	zero,-8(fp)
  800480:	00000806 	br	8004a4 <main+0x9c>
		y =y/2.0;
  800484:	01500034 	movhi	r5,16384
  800488:	e13fff17 	ldw	r4,-4(fp)
  80048c:	08009680 	call	800968 <__divsf3>
  800490:	1007883a 	mov	r3,r2
  800494:	e0ffff15 	stw	r3,-4(fp)
	for (i=0;i<10;i++){
  800498:	e0bffe17 	ldw	r2,-8(fp)
  80049c:	10800044 	addi	r2,r2,1
  8004a0:	e0bffe15 	stw	r2,-8(fp)
  8004a4:	e0bffe17 	ldw	r2,-8(fp)
  8004a8:	10800290 	cmplti	r2,r2,10
  8004ac:	103ff51e 	bne	r2,zero,800484 <main+0x7c>
	}

	printf("Result: %d\n",(int) y);
  8004b0:	e13fff17 	ldw	r4,-4(fp)
  8004b4:	080115c0 	call	80115c <__fixsfsi>
  8004b8:	100b883a 	mov	r5,r2
  8004bc:	01002074 	movhi	r4,129
  8004c0:	21037104 	addi	r4,r4,3524
  8004c4:	08012780 	call	801278 <printf>
	printf("Time taken: %d\n", exec_t2-exec_t1);
  8004c8:	e0fffc17 	ldw	r3,-16(fp)
  8004cc:	e0bffd17 	ldw	r2,-12(fp)
  8004d0:	1885c83a 	sub	r2,r3,r2
  8004d4:	100b883a 	mov	r5,r2
  8004d8:	01002074 	movhi	r4,129
  8004dc:	21037404 	addi	r4,r4,3536
  8004e0:	08012780 	call	801278 <printf>
	return 0;
  8004e4:	0005883a 	mov	r2,zero
}
  8004e8:	e037883a 	mov	sp,fp
  8004ec:	dfc00117 	ldw	ra,4(sp)
  8004f0:	df000017 	ldw	fp,0(sp)
  8004f4:	dec00204 	addi	sp,sp,8
  8004f8:	f800283a 	ret

008004fc <__addsf3>:
  8004fc:	defffc04 	addi	sp,sp,-16
  800500:	2806d5fa 	srli	r3,r5,23
  800504:	dc000015 	stw	r16,0(sp)
  800508:	2020d5fa 	srli	r16,r4,23
  80050c:	200cd7fa 	srli	r6,r4,31
  800510:	00802034 	movhi	r2,128
  800514:	2812d7fa 	srli	r9,r5,31
  800518:	10bfffc4 	addi	r2,r2,-1
  80051c:	1114703a 	and	r10,r2,r4
  800520:	1b003fcc 	andi	r12,r3,255
  800524:	dc400115 	stw	r17,4(sp)
  800528:	84003fcc 	andi	r16,r16,255
  80052c:	115a703a 	and	r13,r2,r5
  800530:	dfc00315 	stw	ra,12(sp)
  800534:	dc800215 	stw	r18,8(sp)
  800538:	500e90fa 	slli	r7,r10,3
  80053c:	681090fa 	slli	r8,r13,3
  800540:	5007883a 	mov	r3,r10
  800544:	3023883a 	mov	r17,r6
  800548:	8317c83a 	sub	r11,r16,r12
  80054c:	32403926 	beq	r6,r9,800634 <__addsf3+0x138>
  800550:	02c02e0e 	bge	zero,r11,80060c <__addsf3+0x110>
  800554:	60004c26 	beq	r12,zero,800688 <__addsf3+0x18c>
  800558:	80803fe0 	cmpeqi	r2,r16,255
  80055c:	1000801e 	bne	r2,zero,800760 <__addsf3+0x264>
  800560:	42010034 	orhi	r8,r8,1024
  800564:	58800710 	cmplti	r2,r11,28
  800568:	10009e1e 	bne	r2,zero,8007e4 <__addsf3+0x2e8>
  80056c:	01000044 	movi	r4,1
  800570:	3909c83a 	sub	r4,r7,r4
  800574:	2081002c 	andhi	r2,r4,1024
  800578:	10006826 	beq	r2,zero,80071c <__addsf3+0x220>
  80057c:	04810034 	movhi	r18,1024
  800580:	94bfffc4 	addi	r18,r18,-1
  800584:	24a4703a 	and	r18,r4,r18
  800588:	9009883a 	mov	r4,r18
  80058c:	08011cc0 	call	8011cc <__clzsi2>
  800590:	10bffec4 	addi	r2,r2,-5
  800594:	9088983a 	sll	r4,r18,r2
  800598:	1400880e 	bge	r2,r16,8007bc <__addsf3+0x2c0>
  80059c:	00ff0034 	movhi	r3,64512
  8005a0:	18ffffc4 	addi	r3,r3,-1
  8005a4:	80a1c83a 	sub	r16,r16,r2
  8005a8:	20c8703a 	and	r4,r4,r3
  8005ac:	208001cc 	andi	r2,r4,7
  8005b0:	10000426 	beq	r2,zero,8005c4 <__addsf3+0xc8>
  8005b4:	208003cc 	andi	r2,r4,15
  8005b8:	10800120 	cmpeqi	r2,r2,4
  8005bc:	1000011e 	bne	r2,zero,8005c4 <__addsf3+0xc8>
  8005c0:	21000104 	addi	r4,r4,4
  8005c4:	2081002c 	andhi	r2,r4,1024
  8005c8:	10005626 	beq	r2,zero,800724 <__addsf3+0x228>
  8005cc:	84000044 	addi	r16,r16,1
  8005d0:	80803fe0 	cmpeqi	r2,r16,255
  8005d4:	1000461e 	bne	r2,zero,8006f0 <__addsf3+0x1f4>
  8005d8:	200491ba 	slli	r2,r4,6
  8005dc:	1006d27a 	srli	r3,r2,9
  8005e0:	84003fcc 	andi	r16,r16,255
  8005e4:	800495fa 	slli	r2,r16,23
  8005e8:	882297fa 	slli	r17,r17,31
  8005ec:	10c4b03a 	or	r2,r2,r3
  8005f0:	1444b03a 	or	r2,r2,r17
  8005f4:	dfc00317 	ldw	ra,12(sp)
  8005f8:	dc800217 	ldw	r18,8(sp)
  8005fc:	dc400117 	ldw	r17,4(sp)
  800600:	dc000017 	ldw	r16,0(sp)
  800604:	dec00404 	addi	sp,sp,16
  800608:	f800283a 	ret
  80060c:	58002526 	beq	r11,zero,8006a4 <__addsf3+0x1a8>
  800610:	6417c83a 	sub	r11,r12,r16
  800614:	8000821e 	bne	r16,zero,800820 <__addsf3+0x324>
  800618:	38006426 	beq	r7,zero,8007ac <__addsf3+0x2b0>
  80061c:	58bfffc4 	addi	r2,r11,-1
  800620:	1000c226 	beq	r2,zero,80092c <__addsf3+0x430>
  800624:	5ac03fe0 	cmpeqi	r11,r11,255
  800628:	58004b1e 	bne	r11,zero,800758 <__addsf3+0x25c>
  80062c:	1017883a 	mov	r11,r2
  800630:	00007e06 	br	80082c <__addsf3+0x330>
  800634:	02c0510e 	bge	zero,r11,80077c <__addsf3+0x280>
  800638:	60002626 	beq	r12,zero,8006d4 <__addsf3+0x1d8>
  80063c:	80803fe0 	cmpeqi	r2,r16,255
  800640:	1000471e 	bne	r2,zero,800760 <__addsf3+0x264>
  800644:	42010034 	orhi	r8,r8,1024
  800648:	58800710 	cmplti	r2,r11,28
  80064c:	10007e1e 	bne	r2,zero,800848 <__addsf3+0x34c>
  800650:	01000044 	movi	r4,1
  800654:	21c9883a 	add	r4,r4,r7
  800658:	2081002c 	andhi	r2,r4,1024
  80065c:	10002f26 	beq	r2,zero,80071c <__addsf3+0x220>
  800660:	84000044 	addi	r16,r16,1
  800664:	80803fe0 	cmpeqi	r2,r16,255
  800668:	1000211e 	bne	r2,zero,8006f0 <__addsf3+0x1f4>
  80066c:	2004d07a 	srli	r2,r4,1
  800670:	00df8034 	movhi	r3,32256
  800674:	18ffffc4 	addi	r3,r3,-1
  800678:	2100004c 	andi	r4,r4,1
  80067c:	10c4703a 	and	r2,r2,r3
  800680:	1108b03a 	or	r4,r2,r4
  800684:	003fc906 	br	8005ac <__addsf3+0xb0>
  800688:	40004a26 	beq	r8,zero,8007b4 <__addsf3+0x2b8>
  80068c:	58bfffc4 	addi	r2,r11,-1
  800690:	10009326 	beq	r2,zero,8008e0 <__addsf3+0x3e4>
  800694:	59003fe0 	cmpeqi	r4,r11,255
  800698:	2000311e 	bne	r4,zero,800760 <__addsf3+0x264>
  80069c:	1017883a 	mov	r11,r2
  8006a0:	003fb006 	br	800564 <__addsf3+0x68>
  8006a4:	81800044 	addi	r6,r16,1
  8006a8:	31803f8c 	andi	r6,r6,254
  8006ac:	3000541e 	bne	r6,zero,800800 <__addsf3+0x304>
  8006b0:	80007e1e 	bne	r16,zero,8008ac <__addsf3+0x3b0>
  8006b4:	3800a326 	beq	r7,zero,800944 <__addsf3+0x448>
  8006b8:	40009326 	beq	r8,zero,800908 <__addsf3+0x40c>
  8006bc:	3a09c83a 	sub	r4,r7,r8
  8006c0:	2081002c 	andhi	r2,r4,1024
  8006c4:	1000a626 	beq	r2,zero,800960 <__addsf3+0x464>
  8006c8:	41c9c83a 	sub	r4,r8,r7
  8006cc:	4823883a 	mov	r17,r9
  8006d0:	003fb606 	br	8005ac <__addsf3+0xb0>
  8006d4:	40003726 	beq	r8,zero,8007b4 <__addsf3+0x2b8>
  8006d8:	58bfffc4 	addi	r2,r11,-1
  8006dc:	10007b26 	beq	r2,zero,8008cc <__addsf3+0x3d0>
  8006e0:	5ac03fe0 	cmpeqi	r11,r11,255
  8006e4:	58001e1e 	bne	r11,zero,800760 <__addsf3+0x264>
  8006e8:	1017883a 	mov	r11,r2
  8006ec:	003fd606 	br	800648 <__addsf3+0x14c>
  8006f0:	043fffc4 	movi	r16,-1
  8006f4:	0007883a 	mov	r3,zero
  8006f8:	003fb906 	br	8005e0 <__addsf3+0xe4>
  8006fc:	80800044 	addi	r2,r16,1
  800700:	11803f8c 	andi	r6,r2,254
  800704:	30005726 	beq	r6,zero,800864 <__addsf3+0x368>
  800708:	10c03fe0 	cmpeqi	r3,r2,255
  80070c:	183ff81e 	bne	r3,zero,8006f0 <__addsf3+0x1f4>
  800710:	3a09883a 	add	r4,r7,r8
  800714:	2008d07a 	srli	r4,r4,1
  800718:	1021883a 	mov	r16,r2
  80071c:	208001cc 	andi	r2,r4,7
  800720:	103fa41e 	bne	r2,zero,8005b4 <__addsf3+0xb8>
  800724:	2014d0fa 	srli	r10,r4,3
  800728:	80803fe0 	cmpeqi	r2,r16,255
  80072c:	10000c1e 	bne	r2,zero,800760 <__addsf3+0x264>
  800730:	00802034 	movhi	r2,128
  800734:	10bfffc4 	addi	r2,r2,-1
  800738:	5086703a 	and	r3,r10,r2
  80073c:	003fa806 	br	8005e0 <__addsf3+0xe4>
  800740:	38000626 	beq	r7,zero,80075c <__addsf3+0x260>
  800744:	40000626 	beq	r8,zero,800760 <__addsf3+0x264>
  800748:	2080102c 	andhi	r2,r4,64
  80074c:	10000426 	beq	r2,zero,800760 <__addsf3+0x264>
  800750:	2940102c 	andhi	r5,r5,64
  800754:	2800021e 	bne	r5,zero,800760 <__addsf3+0x264>
  800758:	4823883a 	mov	r17,r9
  80075c:	6815883a 	mov	r10,r13
  800760:	503fe326 	beq	r10,zero,8006f0 <__addsf3+0x1f4>
  800764:	00802034 	movhi	r2,128
  800768:	50c01034 	orhi	r3,r10,64
  80076c:	10bfffc4 	addi	r2,r2,-1
  800770:	1886703a 	and	r3,r3,r2
  800774:	043fffc4 	movi	r16,-1
  800778:	003f9906 	br	8005e0 <__addsf3+0xe4>
  80077c:	583fdf26 	beq	r11,zero,8006fc <__addsf3+0x200>
  800780:	6417c83a 	sub	r11,r12,r16
  800784:	80004226 	beq	r16,zero,800890 <__addsf3+0x394>
  800788:	60803fe0 	cmpeqi	r2,r12,255
  80078c:	103ff31e 	bne	r2,zero,80075c <__addsf3+0x260>
  800790:	39c10034 	orhi	r7,r7,1024
  800794:	58800710 	cmplti	r2,r11,28
  800798:	10005d1e 	bne	r2,zero,800910 <__addsf3+0x414>
  80079c:	01000044 	movi	r4,1
  8007a0:	2209883a 	add	r4,r4,r8
  8007a4:	6021883a 	mov	r16,r12
  8007a8:	003fab06 	br	800658 <__addsf3+0x15c>
  8007ac:	4823883a 	mov	r17,r9
  8007b0:	6815883a 	mov	r10,r13
  8007b4:	5821883a 	mov	r16,r11
  8007b8:	003fdb06 	br	800728 <__addsf3+0x22c>
  8007bc:	1405c83a 	sub	r2,r2,r16
  8007c0:	14800044 	addi	r18,r2,1
  8007c4:	00800804 	movi	r2,32
  8007c8:	1485c83a 	sub	r2,r2,r18
  8007cc:	2084983a 	sll	r2,r4,r2
  8007d0:	2488d83a 	srl	r4,r4,r18
  8007d4:	0021883a 	mov	r16,zero
  8007d8:	1004c03a 	cmpne	r2,r2,zero
  8007dc:	1108b03a 	or	r4,r2,r4
  8007e0:	003f7206 	br	8005ac <__addsf3+0xb0>
  8007e4:	01000804 	movi	r4,32
  8007e8:	22c9c83a 	sub	r4,r4,r11
  8007ec:	4108983a 	sll	r4,r8,r4
  8007f0:	42d0d83a 	srl	r8,r8,r11
  8007f4:	2008c03a 	cmpne	r4,r4,zero
  8007f8:	2208b03a 	or	r4,r4,r8
  8007fc:	003f5c06 	br	800570 <__addsf3+0x74>
  800800:	3a25c83a 	sub	r18,r7,r8
  800804:	9081002c 	andhi	r2,r18,1024
  800808:	10002d1e 	bne	r2,zero,8008c0 <__addsf3+0x3c4>
  80080c:	903f5e1e 	bne	r18,zero,800588 <__addsf3+0x8c>
  800810:	0023883a 	mov	r17,zero
  800814:	0021883a 	mov	r16,zero
  800818:	0007883a 	mov	r3,zero
  80081c:	003f7006 	br	8005e0 <__addsf3+0xe4>
  800820:	60803fe0 	cmpeqi	r2,r12,255
  800824:	103fcc1e 	bne	r2,zero,800758 <__addsf3+0x25c>
  800828:	39c10034 	orhi	r7,r7,1024
  80082c:	58800710 	cmplti	r2,r11,28
  800830:	10002e1e 	bne	r2,zero,8008ec <__addsf3+0x3f0>
  800834:	01000044 	movi	r4,1
  800838:	4109c83a 	sub	r4,r8,r4
  80083c:	4823883a 	mov	r17,r9
  800840:	6021883a 	mov	r16,r12
  800844:	003f4b06 	br	800574 <__addsf3+0x78>
  800848:	01000804 	movi	r4,32
  80084c:	22c9c83a 	sub	r4,r4,r11
  800850:	4108983a 	sll	r4,r8,r4
  800854:	42d0d83a 	srl	r8,r8,r11
  800858:	2008c03a 	cmpne	r4,r4,zero
  80085c:	2208b03a 	or	r4,r4,r8
  800860:	003f7c06 	br	800654 <__addsf3+0x158>
  800864:	803fb61e 	bne	r16,zero,800740 <__addsf3+0x244>
  800868:	38003a26 	beq	r7,zero,800954 <__addsf3+0x458>
  80086c:	40002626 	beq	r8,zero,800908 <__addsf3+0x40c>
  800870:	3a09883a 	add	r4,r7,r8
  800874:	2081002c 	andhi	r2,r4,1024
  800878:	103fa826 	beq	r2,zero,80071c <__addsf3+0x220>
  80087c:	00bf0034 	movhi	r2,64512
  800880:	10bfffc4 	addi	r2,r2,-1
  800884:	2088703a 	and	r4,r4,r2
  800888:	04000044 	movi	r16,1
  80088c:	003fa306 	br	80071c <__addsf3+0x220>
  800890:	383fc726 	beq	r7,zero,8007b0 <__addsf3+0x2b4>
  800894:	58bfffc4 	addi	r2,r11,-1
  800898:	10000c26 	beq	r2,zero,8008cc <__addsf3+0x3d0>
  80089c:	5ac03fe0 	cmpeqi	r11,r11,255
  8008a0:	583fae1e 	bne	r11,zero,80075c <__addsf3+0x260>
  8008a4:	1017883a 	mov	r11,r2
  8008a8:	003fba06 	br	800794 <__addsf3+0x298>
  8008ac:	383fa51e 	bne	r7,zero,800744 <__addsf3+0x248>
  8008b0:	403fa91e 	bne	r8,zero,800758 <__addsf3+0x25c>
  8008b4:	0023883a 	mov	r17,zero
  8008b8:	1007883a 	mov	r3,r2
  8008bc:	003fad06 	br	800774 <__addsf3+0x278>
  8008c0:	41e5c83a 	sub	r18,r8,r7
  8008c4:	4823883a 	mov	r17,r9
  8008c8:	003f2f06 	br	800588 <__addsf3+0x8c>
  8008cc:	3a09883a 	add	r4,r7,r8
  8008d0:	2081002c 	andhi	r2,r4,1024
  8008d4:	10001926 	beq	r2,zero,80093c <__addsf3+0x440>
  8008d8:	04000084 	movi	r16,2
  8008dc:	003f6306 	br	80066c <__addsf3+0x170>
  8008e0:	3a09c83a 	sub	r4,r7,r8
  8008e4:	04000044 	movi	r16,1
  8008e8:	003f2206 	br	800574 <__addsf3+0x78>
  8008ec:	00800804 	movi	r2,32
  8008f0:	12c5c83a 	sub	r2,r2,r11
  8008f4:	3884983a 	sll	r2,r7,r2
  8008f8:	3aced83a 	srl	r7,r7,r11
  8008fc:	1008c03a 	cmpne	r4,r2,zero
  800900:	21c8b03a 	or	r4,r4,r7
  800904:	003fcc06 	br	800838 <__addsf3+0x33c>
  800908:	0021883a 	mov	r16,zero
  80090c:	003f3406 	br	8005e0 <__addsf3+0xe4>
  800910:	01000804 	movi	r4,32
  800914:	22c9c83a 	sub	r4,r4,r11
  800918:	3908983a 	sll	r4,r7,r4
  80091c:	3aced83a 	srl	r7,r7,r11
  800920:	2008c03a 	cmpne	r4,r4,zero
  800924:	21c8b03a 	or	r4,r4,r7
  800928:	003f9d06 	br	8007a0 <__addsf3+0x2a4>
  80092c:	41c9c83a 	sub	r4,r8,r7
  800930:	4823883a 	mov	r17,r9
  800934:	04000044 	movi	r16,1
  800938:	003f0e06 	br	800574 <__addsf3+0x78>
  80093c:	04000044 	movi	r16,1
  800940:	003f7606 	br	80071c <__addsf3+0x220>
  800944:	403fb226 	beq	r8,zero,800810 <__addsf3+0x314>
  800948:	4823883a 	mov	r17,r9
  80094c:	6807883a 	mov	r3,r13
  800950:	003f2306 	br	8005e0 <__addsf3+0xe4>
  800954:	6807883a 	mov	r3,r13
  800958:	0021883a 	mov	r16,zero
  80095c:	003f2006 	br	8005e0 <__addsf3+0xe4>
  800960:	203fab26 	beq	r4,zero,800810 <__addsf3+0x314>
  800964:	003f6d06 	br	80071c <__addsf3+0x220>

00800968 <__divsf3>:
  800968:	defff604 	addi	sp,sp,-40
  80096c:	2006d5fa 	srli	r3,r4,23
  800970:	dd400615 	stw	r21,24(sp)
  800974:	202ad7fa 	srli	r21,r4,31
  800978:	00802034 	movhi	r2,128
  80097c:	dc800315 	stw	r18,12(sp)
  800980:	dc000115 	stw	r16,4(sp)
  800984:	10bfffc4 	addi	r2,r2,-1
  800988:	dfc00915 	stw	ra,36(sp)
  80098c:	ddc00815 	stw	r23,32(sp)
  800990:	dd800715 	stw	r22,28(sp)
  800994:	dd000515 	stw	r20,20(sp)
  800998:	dcc00415 	stw	r19,16(sp)
  80099c:	dc400215 	stw	r17,8(sp)
  8009a0:	18c03fcc 	andi	r3,r3,255
  8009a4:	1120703a 	and	r16,r2,r4
  8009a8:	a825883a 	mov	r18,r21
  8009ac:	18007b26 	beq	r3,zero,800b9c <__divsf3+0x234>
  8009b0:	18803fe0 	cmpeqi	r2,r3,255
  8009b4:	10007e1e 	bne	r2,zero,800bb0 <__divsf3+0x248>
  8009b8:	800490fa 	slli	r2,r16,3
  8009bc:	1d3fe044 	addi	r20,r3,-127
  8009c0:	0023883a 	mov	r17,zero
  8009c4:	14010034 	orhi	r16,r2,1024
  8009c8:	002d883a 	mov	r22,zero
  8009cc:	2806d5fa 	srli	r3,r5,23
  8009d0:	01002034 	movhi	r4,128
  8009d4:	213fffc4 	addi	r4,r4,-1
  8009d8:	18c03fcc 	andi	r3,r3,255
  8009dc:	282ed7fa 	srli	r23,r5,31
  8009e0:	2166703a 	and	r19,r4,r5
  8009e4:	18005326 	beq	r3,zero,800b34 <__divsf3+0x1cc>
  8009e8:	18803fe0 	cmpeqi	r2,r3,255
  8009ec:	10004d1e 	bne	r2,zero,800b24 <__divsf3+0x1bc>
  8009f0:	980a90fa 	slli	r5,r19,3
  8009f4:	18ffe044 	addi	r3,r3,-127
  8009f8:	a0e9c83a 	sub	r20,r20,r3
  8009fc:	2cc10034 	orhi	r19,r5,1024
  800a00:	0007883a 	mov	r3,zero
  800a04:	1c62b03a 	or	r17,r3,r17
  800a08:	882290ba 	slli	r17,r17,2
  800a0c:	00802034 	movhi	r2,128
  800a10:	bd6af03a 	xor	r21,r23,r21
  800a14:	8885883a 	add	r2,r17,r2
  800a18:	10828917 	ldw	r2,2596(r2)
  800a1c:	a809883a 	mov	r4,r21
  800a20:	1000683a 	jmp	r2
  800a24:	00800ce8 	cmpgeui	r2,zero,51
  800a28:	00800c28 	cmpgeui	r2,zero,48
  800a2c:	00800ad8 	cmpnei	r2,zero,43
  800a30:	00800a68 	cmpgeui	r2,zero,41
  800a34:	00800ad8 	cmpnei	r2,zero,43
  800a38:	00800c94 	movui	r2,50
  800a3c:	00800ad8 	cmpnei	r2,zero,43
  800a40:	00800a68 	cmpgeui	r2,zero,41
  800a44:	00800c28 	cmpgeui	r2,zero,48
  800a48:	00800c28 	cmpgeui	r2,zero,48
  800a4c:	00800c94 	movui	r2,50
  800a50:	00800a68 	cmpgeui	r2,zero,41
  800a54:	00800a74 	movhi	r2,41
  800a58:	00800a74 	movhi	r2,41
  800a5c:	00800a74 	movhi	r2,41
  800a60:	00800cac 	andhi	r2,zero,50
  800a64:	0027883a 	mov	r19,zero
  800a68:	b825883a 	mov	r18,r23
  800a6c:	9821883a 	mov	r16,r19
  800a70:	182d883a 	mov	r22,r3
  800a74:	b08000a0 	cmpeqi	r2,r22,2
  800a78:	1000831e 	bne	r2,zero,800c88 <__divsf3+0x320>
  800a7c:	b08000e0 	cmpeqi	r2,r22,3
  800a80:	1000941e 	bne	r2,zero,800cd4 <__divsf3+0x36c>
  800a84:	b5800060 	cmpeqi	r22,r22,1
  800a88:	b000141e 	bne	r22,zero,800adc <__divsf3+0x174>
  800a8c:	a0801fc4 	addi	r2,r20,127
  800a90:	0080690e 	bge	zero,r2,800c38 <__divsf3+0x2d0>
  800a94:	80c001cc 	andi	r3,r16,7
  800a98:	18000426 	beq	r3,zero,800aac <__divsf3+0x144>
  800a9c:	80c003cc 	andi	r3,r16,15
  800aa0:	18c00120 	cmpeqi	r3,r3,4
  800aa4:	1800011e 	bne	r3,zero,800aac <__divsf3+0x144>
  800aa8:	84000104 	addi	r16,r16,4
  800aac:	80c2002c 	andhi	r3,r16,2048
  800ab0:	18000426 	beq	r3,zero,800ac4 <__divsf3+0x15c>
  800ab4:	00be0034 	movhi	r2,63488
  800ab8:	10bfffc4 	addi	r2,r2,-1
  800abc:	80a0703a 	and	r16,r16,r2
  800ac0:	a0802004 	addi	r2,r20,128
  800ac4:	10c03fc8 	cmpgei	r3,r2,255
  800ac8:	18006f1e 	bne	r3,zero,800c88 <__divsf3+0x320>
  800acc:	802091ba 	slli	r16,r16,6
  800ad0:	8020d27a 	srli	r16,r16,9
  800ad4:	00000306 	br	800ae4 <__divsf3+0x17c>
  800ad8:	a825883a 	mov	r18,r21
  800adc:	0005883a 	mov	r2,zero
  800ae0:	0021883a 	mov	r16,zero
  800ae4:	10803fcc 	andi	r2,r2,255
  800ae8:	100495fa 	slli	r2,r2,23
  800aec:	902497fa 	slli	r18,r18,31
  800af0:	1404b03a 	or	r2,r2,r16
  800af4:	1484b03a 	or	r2,r2,r18
  800af8:	dfc00917 	ldw	ra,36(sp)
  800afc:	ddc00817 	ldw	r23,32(sp)
  800b00:	dd800717 	ldw	r22,28(sp)
  800b04:	dd400617 	ldw	r21,24(sp)
  800b08:	dd000517 	ldw	r20,20(sp)
  800b0c:	dcc00417 	ldw	r19,16(sp)
  800b10:	dc800317 	ldw	r18,12(sp)
  800b14:	dc400217 	ldw	r17,8(sp)
  800b18:	dc000117 	ldw	r16,4(sp)
  800b1c:	dec00a04 	addi	sp,sp,40
  800b20:	f800283a 	ret
  800b24:	a53fc044 	addi	r20,r20,-255
  800b28:	98003d1e 	bne	r19,zero,800c20 <__divsf3+0x2b8>
  800b2c:	00c00084 	movi	r3,2
  800b30:	00000206 	br	800b3c <__divsf3+0x1d4>
  800b34:	9800321e 	bne	r19,zero,800c00 <__divsf3+0x298>
  800b38:	00c00044 	movi	r3,1
  800b3c:	1c62b03a 	or	r17,r3,r17
  800b40:	882290ba 	slli	r17,r17,2
  800b44:	00802034 	movhi	r2,128
  800b48:	bd6af03a 	xor	r21,r23,r21
  800b4c:	8885883a 	add	r2,r17,r2
  800b50:	1082d717 	ldw	r2,2908(r2)
  800b54:	a809883a 	mov	r4,r21
  800b58:	1000683a 	jmp	r2
  800b5c:	00800c28 	cmpgeui	r2,zero,48
  800b60:	00800c28 	cmpgeui	r2,zero,48
  800b64:	00800ad8 	cmpnei	r2,zero,43
  800b68:	00800a64 	muli	r2,zero,41
  800b6c:	00800ad8 	cmpnei	r2,zero,43
  800b70:	00800c94 	movui	r2,50
  800b74:	00800ad8 	cmpnei	r2,zero,43
  800b78:	00800a64 	muli	r2,zero,41
  800b7c:	00800c28 	cmpgeui	r2,zero,48
  800b80:	00800c28 	cmpgeui	r2,zero,48
  800b84:	00800c94 	movui	r2,50
  800b88:	00800a64 	muli	r2,zero,41
  800b8c:	00800a74 	movhi	r2,41
  800b90:	00800a74 	movhi	r2,41
  800b94:	00800a74 	movhi	r2,41
  800b98:	00800ca8 	cmpgeui	r2,zero,50
  800b9c:	80000d1e 	bne	r16,zero,800bd4 <__divsf3+0x26c>
  800ba0:	04400104 	movi	r17,4
  800ba4:	0029883a 	mov	r20,zero
  800ba8:	05800044 	movi	r22,1
  800bac:	003f8706 	br	8009cc <__divsf3+0x64>
  800bb0:	8000041e 	bne	r16,zero,800bc4 <__divsf3+0x25c>
  800bb4:	04400204 	movi	r17,8
  800bb8:	05003fc4 	movi	r20,255
  800bbc:	05800084 	movi	r22,2
  800bc0:	003f8206 	br	8009cc <__divsf3+0x64>
  800bc4:	04400304 	movi	r17,12
  800bc8:	05003fc4 	movi	r20,255
  800bcc:	058000c4 	movi	r22,3
  800bd0:	003f7e06 	br	8009cc <__divsf3+0x64>
  800bd4:	8009883a 	mov	r4,r16
  800bd8:	d9400015 	stw	r5,0(sp)
  800bdc:	08011cc0 	call	8011cc <__clzsi2>
  800be0:	10fffec4 	addi	r3,r2,-5
  800be4:	80e0983a 	sll	r16,r16,r3
  800be8:	00ffe284 	movi	r3,-118
  800bec:	d9400017 	ldw	r5,0(sp)
  800bf0:	18a9c83a 	sub	r20,r3,r2
  800bf4:	0023883a 	mov	r17,zero
  800bf8:	002d883a 	mov	r22,zero
  800bfc:	003f7306 	br	8009cc <__divsf3+0x64>
  800c00:	9809883a 	mov	r4,r19
  800c04:	08011cc0 	call	8011cc <__clzsi2>
  800c08:	a087883a 	add	r3,r20,r2
  800c0c:	113ffec4 	addi	r4,r2,-5
  800c10:	1d001d84 	addi	r20,r3,118
  800c14:	9926983a 	sll	r19,r19,r4
  800c18:	0007883a 	mov	r3,zero
  800c1c:	003f7906 	br	800a04 <__divsf3+0x9c>
  800c20:	00c000c4 	movi	r3,3
  800c24:	003f7706 	br	800a04 <__divsf3+0x9c>
  800c28:	2025883a 	mov	r18,r4
  800c2c:	00bfffc4 	movi	r2,-1
  800c30:	0021883a 	mov	r16,zero
  800c34:	003fab06 	br	800ae4 <__divsf3+0x17c>
  800c38:	00c00044 	movi	r3,1
  800c3c:	1885c83a 	sub	r2,r3,r2
  800c40:	10c00708 	cmpgei	r3,r2,28
  800c44:	183fa51e 	bne	r3,zero,800adc <__divsf3+0x174>
  800c48:	a0c02784 	addi	r3,r20,158
  800c4c:	80c6983a 	sll	r3,r16,r3
  800c50:	8084d83a 	srl	r2,r16,r2
  800c54:	1820c03a 	cmpne	r16,r3,zero
  800c58:	1404b03a 	or	r2,r2,r16
  800c5c:	10c001cc 	andi	r3,r2,7
  800c60:	18000426 	beq	r3,zero,800c74 <__divsf3+0x30c>
  800c64:	10c003cc 	andi	r3,r2,15
  800c68:	18c00120 	cmpeqi	r3,r3,4
  800c6c:	1800011e 	bne	r3,zero,800c74 <__divsf3+0x30c>
  800c70:	10800104 	addi	r2,r2,4
  800c74:	10c1002c 	andhi	r3,r2,1024
  800c78:	18003426 	beq	r3,zero,800d4c <__divsf3+0x3e4>
  800c7c:	00800044 	movi	r2,1
  800c80:	0021883a 	mov	r16,zero
  800c84:	003f9706 	br	800ae4 <__divsf3+0x17c>
  800c88:	00bfffc4 	movi	r2,-1
  800c8c:	0021883a 	mov	r16,zero
  800c90:	003f9406 	br	800ae4 <__divsf3+0x17c>
  800c94:	04002034 	movhi	r16,128
  800c98:	0025883a 	mov	r18,zero
  800c9c:	843fffc4 	addi	r16,r16,-1
  800ca0:	00bfffc4 	movi	r2,-1
  800ca4:	003f8f06 	br	800ae4 <__divsf3+0x17c>
  800ca8:	0027883a 	mov	r19,zero
  800cac:	8080102c 	andhi	r2,r16,64
  800cb0:	10000826 	beq	r2,zero,800cd4 <__divsf3+0x36c>
  800cb4:	9880102c 	andhi	r2,r19,64
  800cb8:	1000061e 	bne	r2,zero,800cd4 <__divsf3+0x36c>
  800cbc:	00802034 	movhi	r2,128
  800cc0:	9c001034 	orhi	r16,r19,64
  800cc4:	10bfffc4 	addi	r2,r2,-1
  800cc8:	80a0703a 	and	r16,r16,r2
  800ccc:	b825883a 	mov	r18,r23
  800cd0:	003ff306 	br	800ca0 <__divsf3+0x338>
  800cd4:	00802034 	movhi	r2,128
  800cd8:	84001034 	orhi	r16,r16,64
  800cdc:	10bfffc4 	addi	r2,r2,-1
  800ce0:	80a0703a 	and	r16,r16,r2
  800ce4:	003fee06 	br	800ca0 <__divsf3+0x338>
  800ce8:	8004917a 	slli	r2,r16,5
  800cec:	980a917a 	slli	r5,r19,5
  800cf0:	1140122e 	bgeu	r2,r5,800d3c <__divsf3+0x3d4>
  800cf4:	a53fffc4 	addi	r20,r20,-1
  800cf8:	010006c4 	movi	r4,27
  800cfc:	0021883a 	mov	r16,zero
  800d00:	1007883a 	mov	r3,r2
  800d04:	213fffc4 	addi	r4,r4,-1
  800d08:	1085883a 	add	r2,r2,r2
  800d0c:	8421883a 	add	r16,r16,r16
  800d10:	18000116 	blt	r3,zero,800d18 <__divsf3+0x3b0>
  800d14:	11400236 	bltu	r2,r5,800d20 <__divsf3+0x3b8>
  800d18:	1145c83a 	sub	r2,r2,r5
  800d1c:	84000054 	ori	r16,r16,1
  800d20:	203ff71e 	bne	r4,zero,800d00 <__divsf3+0x398>
  800d24:	1004c03a 	cmpne	r2,r2,zero
  800d28:	1420b03a 	or	r16,r2,r16
  800d2c:	a0801fc4 	addi	r2,r20,127
  800d30:	a825883a 	mov	r18,r21
  800d34:	00bf5716 	blt	zero,r2,800a94 <__divsf3+0x12c>
  800d38:	003fbf06 	br	800c38 <__divsf3+0x2d0>
  800d3c:	1145c83a 	sub	r2,r2,r5
  800d40:	01000684 	movi	r4,26
  800d44:	04000044 	movi	r16,1
  800d48:	003fed06 	br	800d00 <__divsf3+0x398>
  800d4c:	102091ba 	slli	r16,r2,6
  800d50:	0005883a 	mov	r2,zero
  800d54:	8020d27a 	srli	r16,r16,9
  800d58:	003f6206 	br	800ae4 <__divsf3+0x17c>

00800d5c <__mulsf3>:
  800d5c:	defff504 	addi	sp,sp,-44
  800d60:	dc400215 	stw	r17,8(sp)
  800d64:	2022d5fa 	srli	r17,r4,23
  800d68:	dc000115 	stw	r16,4(sp)
  800d6c:	04002034 	movhi	r16,128
  800d70:	dd800715 	stw	r22,28(sp)
  800d74:	843fffc4 	addi	r16,r16,-1
  800d78:	dfc00a15 	stw	ra,40(sp)
  800d7c:	df000915 	stw	fp,36(sp)
  800d80:	ddc00815 	stw	r23,32(sp)
  800d84:	dd400615 	stw	r21,24(sp)
  800d88:	dd000515 	stw	r20,20(sp)
  800d8c:	dcc00415 	stw	r19,16(sp)
  800d90:	dc800315 	stw	r18,12(sp)
  800d94:	8c403fcc 	andi	r17,r17,255
  800d98:	202cd7fa 	srli	r22,r4,31
  800d9c:	8120703a 	and	r16,r16,r4
  800da0:	88008d26 	beq	r17,zero,800fd8 <__mulsf3+0x27c>
  800da4:	88803fe0 	cmpeqi	r2,r17,255
  800da8:	1000901e 	bne	r2,zero,800fec <__mulsf3+0x290>
  800dac:	802090fa 	slli	r16,r16,3
  800db0:	8c7fe044 	addi	r17,r17,-127
  800db4:	0025883a 	mov	r18,zero
  800db8:	84010034 	orhi	r16,r16,1024
  800dbc:	0029883a 	mov	r20,zero
  800dc0:	2804d5fa 	srli	r2,r5,23
  800dc4:	01002034 	movhi	r4,128
  800dc8:	213fffc4 	addi	r4,r4,-1
  800dcc:	10803fcc 	andi	r2,r2,255
  800dd0:	282ed7fa 	srli	r23,r5,31
  800dd4:	2166703a 	and	r19,r4,r5
  800dd8:	10007b26 	beq	r2,zero,800fc8 <__mulsf3+0x26c>
  800ddc:	10c03fe0 	cmpeqi	r3,r2,255
  800de0:	1800871e 	bne	r3,zero,801000 <__mulsf3+0x2a4>
  800de4:	980890fa 	slli	r4,r19,3
  800de8:	10bfe044 	addi	r2,r2,-127
  800dec:	88a3883a 	add	r17,r17,r2
  800df0:	24c10034 	orhi	r19,r4,1024
  800df4:	0007883a 	mov	r3,zero
  800df8:	90800428 	cmpgeui	r2,r18,16
  800dfc:	b5eaf03a 	xor	r21,r22,r23
  800e00:	8f000044 	addi	fp,r17,1
  800e04:	1000341e 	bne	r2,zero,800ed8 <__mulsf3+0x17c>
  800e08:	902490ba 	slli	r18,r18,2
  800e0c:	00802034 	movhi	r2,128
  800e10:	9085883a 	add	r2,r18,r2
  800e14:	10838717 	ldw	r2,3612(r2)
  800e18:	1000683a 	jmp	r2
  800e1c:	00800ed8 	cmpnei	r2,zero,59
  800e20:	00800e60 	cmpeqi	r2,zero,57
  800e24:	00800e60 	cmpeqi	r2,zero,57
  800e28:	00800e5c 	xori	r2,zero,57
  800e2c:	00800e68 	cmpgeui	r2,zero,57
  800e30:	00800e68 	cmpgeui	r2,zero,57
  800e34:	0080108c 	andi	r2,zero,66
  800e38:	00800e5c 	xori	r2,zero,57
  800e3c:	00800e68 	cmpgeui	r2,zero,57
  800e40:	0080108c 	andi	r2,zero,66
  800e44:	00800e68 	cmpgeui	r2,zero,57
  800e48:	00800e5c 	xori	r2,zero,57
  800e4c:	00801014 	movui	r2,64
  800e50:	00801014 	movui	r2,64
  800e54:	00801014 	movui	r2,64
  800e58:	008010f0 	cmpltui	r2,zero,67
  800e5c:	b82b883a 	mov	r21,r23
  800e60:	9821883a 	mov	r16,r19
  800e64:	1829883a 	mov	r20,r3
  800e68:	a08000a0 	cmpeqi	r2,r20,2
  800e6c:	1000171e 	bne	r2,zero,800ecc <__mulsf3+0x170>
  800e70:	a08000e0 	cmpeqi	r2,r20,3
  800e74:	1000b41e 	bne	r2,zero,801148 <__mulsf3+0x3ec>
  800e78:	a0800060 	cmpeqi	r2,r20,1
  800e7c:	10003f26 	beq	r2,zero,800f7c <__mulsf3+0x220>
  800e80:	0007883a 	mov	r3,zero
  800e84:	0009883a 	mov	r4,zero
  800e88:	1c003fcc 	andi	r16,r3,255
  800e8c:	802095fa 	slli	r16,r16,23
  800e90:	a80497fa 	slli	r2,r21,31
  800e94:	8120b03a 	or	r16,r16,r4
  800e98:	8084b03a 	or	r2,r16,r2
  800e9c:	dfc00a17 	ldw	ra,40(sp)
  800ea0:	df000917 	ldw	fp,36(sp)
  800ea4:	ddc00817 	ldw	r23,32(sp)
  800ea8:	dd800717 	ldw	r22,28(sp)
  800eac:	dd400617 	ldw	r21,24(sp)
  800eb0:	dd000517 	ldw	r20,20(sp)
  800eb4:	dcc00417 	ldw	r19,16(sp)
  800eb8:	dc800317 	ldw	r18,12(sp)
  800ebc:	dc400217 	ldw	r17,8(sp)
  800ec0:	dc000117 	ldw	r16,4(sp)
  800ec4:	dec00b04 	addi	sp,sp,44
  800ec8:	f800283a 	ret
  800ecc:	00ffffc4 	movi	r3,-1
  800ed0:	0009883a 	mov	r4,zero
  800ed4:	003fec06 	br	800e88 <__mulsf3+0x12c>
  800ed8:	8028d43a 	srli	r20,r16,16
  800edc:	9cbfffcc 	andi	r18,r19,65535
  800ee0:	843fffcc 	andi	r16,r16,65535
  800ee4:	900b883a 	mov	r5,r18
  800ee8:	8009883a 	mov	r4,r16
  800eec:	08012200 	call	801220 <__mulsi3>
  800ef0:	9826d43a 	srli	r19,r19,16
  800ef4:	900b883a 	mov	r5,r18
  800ef8:	a009883a 	mov	r4,r20
  800efc:	1025883a 	mov	r18,r2
  800f00:	08012200 	call	801220 <__mulsi3>
  800f04:	980b883a 	mov	r5,r19
  800f08:	a009883a 	mov	r4,r20
  800f0c:	1029883a 	mov	r20,r2
  800f10:	08012200 	call	801220 <__mulsi3>
  800f14:	9809883a 	mov	r4,r19
  800f18:	800b883a 	mov	r5,r16
  800f1c:	1027883a 	mov	r19,r2
  800f20:	08012200 	call	801220 <__mulsi3>
  800f24:	9006d43a 	srli	r3,r18,16
  800f28:	1505883a 	add	r2,r2,r20
  800f2c:	1887883a 	add	r3,r3,r2
  800f30:	1d00022e 	bgeu	r3,r20,800f3c <__mulsf3+0x1e0>
  800f34:	00800074 	movhi	r2,1
  800f38:	98a7883a 	add	r19,r19,r2
  800f3c:	1808943a 	slli	r4,r3,16
  800f40:	1820d43a 	srli	r16,r3,16
  800f44:	94bfffcc 	andi	r18,r18,65535
  800f48:	2489883a 	add	r4,r4,r18
  800f4c:	200a91ba 	slli	r5,r4,6
  800f50:	84e1883a 	add	r16,r16,r19
  800f54:	802091ba 	slli	r16,r16,6
  800f58:	2008d6ba 	srli	r4,r4,26
  800f5c:	2804c03a 	cmpne	r2,r5,zero
  800f60:	80c2002c 	andhi	r3,r16,2048
  800f64:	1108b03a 	or	r4,r2,r4
  800f68:	8120b03a 	or	r16,r16,r4
  800f6c:	18007026 	beq	r3,zero,801130 <__mulsf3+0x3d4>
  800f70:	8004d07a 	srli	r2,r16,1
  800f74:	8400004c 	andi	r16,r16,1
  800f78:	1420b03a 	or	r16,r2,r16
  800f7c:	e0c01fc4 	addi	r3,fp,127
  800f80:	00c0470e 	bge	zero,r3,8010a0 <__mulsf3+0x344>
  800f84:	808001cc 	andi	r2,r16,7
  800f88:	10000426 	beq	r2,zero,800f9c <__mulsf3+0x240>
  800f8c:	808003cc 	andi	r2,r16,15
  800f90:	10800120 	cmpeqi	r2,r2,4
  800f94:	1000011e 	bne	r2,zero,800f9c <__mulsf3+0x240>
  800f98:	84000104 	addi	r16,r16,4
  800f9c:	8082002c 	andhi	r2,r16,2048
  800fa0:	10000426 	beq	r2,zero,800fb4 <__mulsf3+0x258>
  800fa4:	00be0034 	movhi	r2,63488
  800fa8:	10bfffc4 	addi	r2,r2,-1
  800fac:	80a0703a 	and	r16,r16,r2
  800fb0:	e0c02004 	addi	r3,fp,128
  800fb4:	18803fc8 	cmpgei	r2,r3,255
  800fb8:	103fc41e 	bne	r2,zero,800ecc <__mulsf3+0x170>
  800fbc:	802091ba 	slli	r16,r16,6
  800fc0:	8008d27a 	srli	r4,r16,9
  800fc4:	003fb006 	br	800e88 <__mulsf3+0x12c>
  800fc8:	9800281e 	bne	r19,zero,80106c <__mulsf3+0x310>
  800fcc:	94800054 	ori	r18,r18,1
  800fd0:	00c00044 	movi	r3,1
  800fd4:	003f8806 	br	800df8 <__mulsf3+0x9c>
  800fd8:	8000191e 	bne	r16,zero,801040 <__mulsf3+0x2e4>
  800fdc:	04800104 	movi	r18,4
  800fe0:	0023883a 	mov	r17,zero
  800fe4:	05000044 	movi	r20,1
  800fe8:	003f7506 	br	800dc0 <__mulsf3+0x64>
  800fec:	8000101e 	bne	r16,zero,801030 <__mulsf3+0x2d4>
  800ff0:	04800204 	movi	r18,8
  800ff4:	04403fc4 	movi	r17,255
  800ff8:	05000084 	movi	r20,2
  800ffc:	003f7006 	br	800dc0 <__mulsf3+0x64>
  801000:	8c403fc4 	addi	r17,r17,255
  801004:	9800071e 	bne	r19,zero,801024 <__mulsf3+0x2c8>
  801008:	94800094 	ori	r18,r18,2
  80100c:	00c00084 	movi	r3,2
  801010:	003f7906 	br	800df8 <__mulsf3+0x9c>
  801014:	a08000a0 	cmpeqi	r2,r20,2
  801018:	b02b883a 	mov	r21,r22
  80101c:	103f9426 	beq	r2,zero,800e70 <__mulsf3+0x114>
  801020:	003faa06 	br	800ecc <__mulsf3+0x170>
  801024:	948000d4 	ori	r18,r18,3
  801028:	00c000c4 	movi	r3,3
  80102c:	003f7206 	br	800df8 <__mulsf3+0x9c>
  801030:	04800304 	movi	r18,12
  801034:	04403fc4 	movi	r17,255
  801038:	050000c4 	movi	r20,3
  80103c:	003f6006 	br	800dc0 <__mulsf3+0x64>
  801040:	8009883a 	mov	r4,r16
  801044:	d9400015 	stw	r5,0(sp)
  801048:	08011cc0 	call	8011cc <__clzsi2>
  80104c:	10fffec4 	addi	r3,r2,-5
  801050:	047fe284 	movi	r17,-118
  801054:	80e0983a 	sll	r16,r16,r3
  801058:	d9400017 	ldw	r5,0(sp)
  80105c:	88a3c83a 	sub	r17,r17,r2
  801060:	0025883a 	mov	r18,zero
  801064:	0029883a 	mov	r20,zero
  801068:	003f5506 	br	800dc0 <__mulsf3+0x64>
  80106c:	9809883a 	mov	r4,r19
  801070:	08011cc0 	call	8011cc <__clzsi2>
  801074:	10fffec4 	addi	r3,r2,-5
  801078:	88a3c83a 	sub	r17,r17,r2
  80107c:	98e6983a 	sll	r19,r19,r3
  801080:	8c7fe284 	addi	r17,r17,-118
  801084:	0007883a 	mov	r3,zero
  801088:	003f5b06 	br	800df8 <__mulsf3+0x9c>
  80108c:	01002034 	movhi	r4,128
  801090:	002b883a 	mov	r21,zero
  801094:	213fffc4 	addi	r4,r4,-1
  801098:	00ffffc4 	movi	r3,-1
  80109c:	003f7a06 	br	800e88 <__mulsf3+0x12c>
  8010a0:	00800044 	movi	r2,1
  8010a4:	10c7c83a 	sub	r3,r2,r3
  8010a8:	18800708 	cmpgei	r2,r3,28
  8010ac:	103f741e 	bne	r2,zero,800e80 <__mulsf3+0x124>
  8010b0:	e1002784 	addi	r4,fp,158
  8010b4:	8108983a 	sll	r4,r16,r4
  8010b8:	80e0d83a 	srl	r16,r16,r3
  8010bc:	2008c03a 	cmpne	r4,r4,zero
  8010c0:	8120b03a 	or	r16,r16,r4
  8010c4:	808001cc 	andi	r2,r16,7
  8010c8:	10000426 	beq	r2,zero,8010dc <__mulsf3+0x380>
  8010cc:	808003cc 	andi	r2,r16,15
  8010d0:	10800120 	cmpeqi	r2,r2,4
  8010d4:	1000011e 	bne	r2,zero,8010dc <__mulsf3+0x380>
  8010d8:	84000104 	addi	r16,r16,4
  8010dc:	8081002c 	andhi	r2,r16,1024
  8010e0:	10001526 	beq	r2,zero,801138 <__mulsf3+0x3dc>
  8010e4:	00c00044 	movi	r3,1
  8010e8:	0009883a 	mov	r4,zero
  8010ec:	003f6606 	br	800e88 <__mulsf3+0x12c>
  8010f0:	8080102c 	andhi	r2,r16,64
  8010f4:	10000826 	beq	r2,zero,801118 <__mulsf3+0x3bc>
  8010f8:	9880102c 	andhi	r2,r19,64
  8010fc:	1000061e 	bne	r2,zero,801118 <__mulsf3+0x3bc>
  801100:	00802034 	movhi	r2,128
  801104:	99001034 	orhi	r4,r19,64
  801108:	10bfffc4 	addi	r2,r2,-1
  80110c:	2088703a 	and	r4,r4,r2
  801110:	b82b883a 	mov	r21,r23
  801114:	003fe006 	br	801098 <__mulsf3+0x33c>
  801118:	00802034 	movhi	r2,128
  80111c:	81001034 	orhi	r4,r16,64
  801120:	10bfffc4 	addi	r2,r2,-1
  801124:	2088703a 	and	r4,r4,r2
  801128:	b02b883a 	mov	r21,r22
  80112c:	003fda06 	br	801098 <__mulsf3+0x33c>
  801130:	8839883a 	mov	fp,r17
  801134:	003f9106 	br	800f7c <__mulsf3+0x220>
  801138:	802091ba 	slli	r16,r16,6
  80113c:	0007883a 	mov	r3,zero
  801140:	8008d27a 	srli	r4,r16,9
  801144:	003f5006 	br	800e88 <__mulsf3+0x12c>
  801148:	00802034 	movhi	r2,128
  80114c:	81001034 	orhi	r4,r16,64
  801150:	10bfffc4 	addi	r2,r2,-1
  801154:	2088703a 	and	r4,r4,r2
  801158:	003fcf06 	br	801098 <__mulsf3+0x33c>

0080115c <__fixsfsi>:
  80115c:	200ad5fa 	srli	r5,r4,23
  801160:	00c02034 	movhi	r3,128
  801164:	18ffffc4 	addi	r3,r3,-1
  801168:	29403fcc 	andi	r5,r5,255
  80116c:	29801fd0 	cmplti	r6,r5,127
  801170:	200ed7fa 	srli	r7,r4,31
  801174:	1906703a 	and	r3,r3,r4
  801178:	3000061e 	bne	r6,zero,801194 <__fixsfsi+0x38>
  80117c:	28802790 	cmplti	r2,r5,158
  801180:	1000061e 	bne	r2,zero,80119c <__fixsfsi+0x40>
  801184:	00a00034 	movhi	r2,32768
  801188:	10bfffc4 	addi	r2,r2,-1
  80118c:	3885883a 	add	r2,r7,r2
  801190:	f800283a 	ret
  801194:	0005883a 	mov	r2,zero
  801198:	f800283a 	ret
  80119c:	28802590 	cmplti	r2,r5,150
  8011a0:	18c02034 	orhi	r3,r3,128
  8011a4:	1000051e 	bne	r2,zero,8011bc <__fixsfsi+0x60>
  8011a8:	28bfda84 	addi	r2,r5,-150
  8011ac:	1884983a 	sll	r2,r3,r2
  8011b0:	383ff926 	beq	r7,zero,801198 <__fixsfsi+0x3c>
  8011b4:	0085c83a 	sub	r2,zero,r2
  8011b8:	f800283a 	ret
  8011bc:	00802584 	movi	r2,150
  8011c0:	1145c83a 	sub	r2,r2,r5
  8011c4:	1884d83a 	srl	r2,r3,r2
  8011c8:	003ff906 	br	8011b0 <__fixsfsi+0x54>

008011cc <__clzsi2>:
  8011cc:	00bfffd4 	movui	r2,65535
  8011d0:	11000436 	bltu	r2,r4,8011e4 <__clzsi2+0x18>
  8011d4:	20804030 	cmpltui	r2,r4,256
  8011d8:	10000e26 	beq	r2,zero,801214 <__clzsi2+0x48>
  8011dc:	01400804 	movi	r5,32
  8011e0:	00000406 	br	8011f4 <__clzsi2+0x28>
  8011e4:	00804034 	movhi	r2,256
  8011e8:	20800736 	bltu	r4,r2,801208 <__clzsi2+0x3c>
  8011ec:	2008d63a 	srli	r4,r4,24
  8011f0:	01400204 	movi	r5,8
  8011f4:	00c02074 	movhi	r3,129
  8011f8:	20c7883a 	add	r3,r4,r3
  8011fc:	18837803 	ldbu	r2,3552(r3)
  801200:	2885c83a 	sub	r2,r5,r2
  801204:	f800283a 	ret
  801208:	2008d43a 	srli	r4,r4,16
  80120c:	01400404 	movi	r5,16
  801210:	003ff806 	br	8011f4 <__clzsi2+0x28>
  801214:	2008d23a 	srli	r4,r4,8
  801218:	01400604 	movi	r5,24
  80121c:	003ff506 	br	8011f4 <__clzsi2+0x28>

00801220 <__mulsi3>:
  801220:	0005883a 	mov	r2,zero
  801224:	20000726 	beq	r4,zero,801244 <__mulsi3+0x24>
  801228:	20c0004c 	andi	r3,r4,1
  80122c:	2008d07a 	srli	r4,r4,1
  801230:	18000126 	beq	r3,zero,801238 <__mulsi3+0x18>
  801234:	1145883a 	add	r2,r2,r5
  801238:	294b883a 	add	r5,r5,r5
  80123c:	203ffa1e 	bne	r4,zero,801228 <__mulsi3+0x8>
  801240:	f800283a 	ret
  801244:	f800283a 	ret

00801248 <_printf_r>:
  801248:	defffd04 	addi	sp,sp,-12
  80124c:	2805883a 	mov	r2,r5
  801250:	dfc00015 	stw	ra,0(sp)
  801254:	d9800115 	stw	r6,4(sp)
  801258:	d9c00215 	stw	r7,8(sp)
  80125c:	21400217 	ldw	r5,8(r4)
  801260:	d9c00104 	addi	r7,sp,4
  801264:	100d883a 	mov	r6,r2
  801268:	08014240 	call	801424 <___vfprintf_internal_r>
  80126c:	dfc00017 	ldw	ra,0(sp)
  801270:	dec00304 	addi	sp,sp,12
  801274:	f800283a 	ret

00801278 <printf>:
  801278:	defffc04 	addi	sp,sp,-16
  80127c:	dfc00015 	stw	ra,0(sp)
  801280:	d9400115 	stw	r5,4(sp)
  801284:	d9800215 	stw	r6,8(sp)
  801288:	d9c00315 	stw	r7,12(sp)
  80128c:	00802074 	movhi	r2,129
  801290:	108bf517 	ldw	r2,12244(r2)
  801294:	200b883a 	mov	r5,r4
  801298:	d9800104 	addi	r6,sp,4
  80129c:	11000217 	ldw	r4,8(r2)
  8012a0:	08035280 	call	803528 <__vfprintf_internal>
  8012a4:	dfc00017 	ldw	ra,0(sp)
  8012a8:	dec00404 	addi	sp,sp,16
  8012ac:	f800283a 	ret

008012b0 <_puts_r>:
  8012b0:	defff504 	addi	sp,sp,-44
  8012b4:	dc000815 	stw	r16,32(sp)
  8012b8:	2021883a 	mov	r16,r4
  8012bc:	2809883a 	mov	r4,r5
  8012c0:	dc400915 	stw	r17,36(sp)
  8012c4:	dfc00a15 	stw	ra,40(sp)
  8012c8:	2823883a 	mov	r17,r5
  8012cc:	080138c0 	call	80138c <strlen>
  8012d0:	11000044 	addi	r4,r2,1
  8012d4:	d8800515 	stw	r2,20(sp)
  8012d8:	00800044 	movi	r2,1
  8012dc:	00c02074 	movhi	r3,129
  8012e0:	d8800715 	stw	r2,28(sp)
  8012e4:	d8800404 	addi	r2,sp,16
  8012e8:	18c3b804 	addi	r3,r3,3808
  8012ec:	d8800115 	stw	r2,4(sp)
  8012f0:	00800084 	movi	r2,2
  8012f4:	dc400415 	stw	r17,16(sp)
  8012f8:	d8c00615 	stw	r3,24(sp)
  8012fc:	d9000315 	stw	r4,12(sp)
  801300:	d8800215 	stw	r2,8(sp)
  801304:	81400217 	ldw	r5,8(r16)
  801308:	80000226 	beq	r16,zero,801314 <_puts_r+0x64>
  80130c:	80800e17 	ldw	r2,56(r16)
  801310:	10001326 	beq	r2,zero,801360 <_puts_r+0xb0>
  801314:	2880030b 	ldhu	r2,12(r5)
  801318:	10c8000c 	andi	r3,r2,8192
  80131c:	1800061e 	bne	r3,zero,801338 <_puts_r+0x88>
  801320:	28c01917 	ldw	r3,100(r5)
  801324:	0137ffc4 	movi	r4,-8193
  801328:	10880014 	ori	r2,r2,8192
  80132c:	1906703a 	and	r3,r3,r4
  801330:	2880030d 	sth	r2,12(r5)
  801334:	28c01915 	stw	r3,100(r5)
  801338:	d9800104 	addi	r6,sp,4
  80133c:	8009883a 	mov	r4,r16
  801340:	0805ba00 	call	805ba0 <__sfvwrite_r>
  801344:	10000b1e 	bne	r2,zero,801374 <_puts_r+0xc4>
  801348:	00800284 	movi	r2,10
  80134c:	dfc00a17 	ldw	ra,40(sp)
  801350:	dc400917 	ldw	r17,36(sp)
  801354:	dc000817 	ldw	r16,32(sp)
  801358:	dec00b04 	addi	sp,sp,44
  80135c:	f800283a 	ret
  801360:	8009883a 	mov	r4,r16
  801364:	d9400015 	stw	r5,0(sp)
  801368:	08057400 	call	805740 <__sinit>
  80136c:	d9400017 	ldw	r5,0(sp)
  801370:	003fe806 	br	801314 <_puts_r+0x64>
  801374:	00bfffc4 	movi	r2,-1
  801378:	003ff406 	br	80134c <_puts_r+0x9c>

0080137c <puts>:
  80137c:	00802074 	movhi	r2,129
  801380:	200b883a 	mov	r5,r4
  801384:	110bf517 	ldw	r4,12244(r2)
  801388:	08012b01 	jmpi	8012b0 <_puts_r>

0080138c <strlen>:
  80138c:	208000cc 	andi	r2,r4,3
  801390:	10000926 	beq	r2,zero,8013b8 <strlen+0x2c>
  801394:	2005883a 	mov	r2,r4
  801398:	00000306 	br	8013a8 <strlen+0x1c>
  80139c:	10800044 	addi	r2,r2,1
  8013a0:	10c000cc 	andi	r3,r2,3
  8013a4:	18000526 	beq	r3,zero,8013bc <strlen+0x30>
  8013a8:	10c00007 	ldb	r3,0(r2)
  8013ac:	183ffb1e 	bne	r3,zero,80139c <strlen+0x10>
  8013b0:	1105c83a 	sub	r2,r2,r4
  8013b4:	f800283a 	ret
  8013b8:	2005883a 	mov	r2,r4
  8013bc:	11400017 	ldw	r5,0(r2)
  8013c0:	01ffbff4 	movhi	r7,65279
  8013c4:	39ffbfc4 	addi	r7,r7,-257
  8013c8:	29c7883a 	add	r3,r5,r7
  8013cc:	01a02074 	movhi	r6,32897
  8013d0:	014a303a 	nor	r5,zero,r5
  8013d4:	1946703a 	and	r3,r3,r5
  8013d8:	31a02004 	addi	r6,r6,-32640
  8013dc:	1986703a 	and	r3,r3,r6
  8013e0:	1800071e 	bne	r3,zero,801400 <strlen+0x74>
  8013e4:	11400117 	ldw	r5,4(r2)
  8013e8:	10800104 	addi	r2,r2,4
  8013ec:	29c7883a 	add	r3,r5,r7
  8013f0:	014a303a 	nor	r5,zero,r5
  8013f4:	1946703a 	and	r3,r3,r5
  8013f8:	1986703a 	and	r3,r3,r6
  8013fc:	183ff926 	beq	r3,zero,8013e4 <strlen+0x58>
  801400:	10c00007 	ldb	r3,0(r2)
  801404:	183fea26 	beq	r3,zero,8013b0 <strlen+0x24>
  801408:	10c00047 	ldb	r3,1(r2)
  80140c:	10800044 	addi	r2,r2,1
  801410:	183fe726 	beq	r3,zero,8013b0 <strlen+0x24>
  801414:	10c00047 	ldb	r3,1(r2)
  801418:	10800044 	addi	r2,r2,1
  80141c:	183ffa1e 	bne	r3,zero,801408 <strlen+0x7c>
  801420:	003fe306 	br	8013b0 <strlen+0x24>

00801424 <___vfprintf_internal_r>:
  801424:	deffbf04 	addi	sp,sp,-260
  801428:	dfc04015 	stw	ra,256(sp)
  80142c:	dd803d15 	stw	r22,244(sp)
  801430:	dcc03a15 	stw	r19,232(sp)
  801434:	dc803915 	stw	r18,228(sp)
  801438:	2027883a 	mov	r19,r4
  80143c:	2825883a 	mov	r18,r5
  801440:	302d883a 	mov	r22,r6
  801444:	d9c00615 	stw	r7,24(sp)
  801448:	df003f15 	stw	fp,252(sp)
  80144c:	ddc03e15 	stw	r23,248(sp)
  801450:	dd403c15 	stw	r21,240(sp)
  801454:	dd003b15 	stw	r20,236(sp)
  801458:	dc403815 	stw	r17,224(sp)
  80145c:	dc003715 	stw	r16,220(sp)
  801460:	08061b00 	call	8061b0 <_localeconv_r>
  801464:	10800017 	ldw	r2,0(r2)
  801468:	1009883a 	mov	r4,r2
  80146c:	d8800d15 	stw	r2,52(sp)
  801470:	080138c0 	call	80138c <strlen>
  801474:	d8800b15 	stw	r2,44(sp)
  801478:	98000226 	beq	r19,zero,801484 <___vfprintf_internal_r+0x60>
  80147c:	98800e17 	ldw	r2,56(r19)
  801480:	1001e026 	beq	r2,zero,801c04 <___vfprintf_internal_r+0x7e0>
  801484:	9080030b 	ldhu	r2,12(r18)
  801488:	10c8000c 	andi	r3,r2,8192
  80148c:	1800061e 	bne	r3,zero,8014a8 <___vfprintf_internal_r+0x84>
  801490:	90c01917 	ldw	r3,100(r18)
  801494:	0137ffc4 	movi	r4,-8193
  801498:	10880014 	ori	r2,r2,8192
  80149c:	1906703a 	and	r3,r3,r4
  8014a0:	9080030d 	sth	r2,12(r18)
  8014a4:	90c01915 	stw	r3,100(r18)
  8014a8:	10c0020c 	andi	r3,r2,8
  8014ac:	1800fc26 	beq	r3,zero,8018a0 <___vfprintf_internal_r+0x47c>
  8014b0:	90c00417 	ldw	r3,16(r18)
  8014b4:	1800fa26 	beq	r3,zero,8018a0 <___vfprintf_internal_r+0x47c>
  8014b8:	1080068c 	andi	r2,r2,26
  8014bc:	10800298 	cmpnei	r2,r2,10
  8014c0:	1000ff26 	beq	r2,zero,8018c0 <___vfprintf_internal_r+0x49c>
  8014c4:	d8802704 	addi	r2,sp,156
  8014c8:	b02f883a 	mov	r23,r22
  8014cc:	d8801a15 	stw	r2,104(sp)
  8014d0:	d8001c15 	stw	zero,112(sp)
  8014d4:	d8001b15 	stw	zero,108(sp)
  8014d8:	d8000815 	stw	zero,32(sp)
  8014dc:	d8000915 	stw	zero,36(sp)
  8014e0:	d8000a15 	stw	zero,40(sp)
  8014e4:	d8000c15 	stw	zero,48(sp)
  8014e8:	d8001015 	stw	zero,64(sp)
  8014ec:	d8000515 	stw	zero,20(sp)
  8014f0:	102d883a 	mov	r22,r2
  8014f4:	b8800007 	ldb	r2,0(r23)
  8014f8:	1000d726 	beq	r2,zero,801858 <___vfprintf_internal_r+0x434>
  8014fc:	b821883a 	mov	r16,r23
  801500:	00000306 	br	801510 <___vfprintf_internal_r+0xec>
  801504:	80800047 	ldb	r2,1(r16)
  801508:	84000044 	addi	r16,r16,1
  80150c:	10012226 	beq	r2,zero,801998 <___vfprintf_internal_r+0x574>
  801510:	10800958 	cmpnei	r2,r2,37
  801514:	103ffb1e 	bne	r2,zero,801504 <___vfprintf_internal_r+0xe0>
  801518:	85e3c83a 	sub	r17,r16,r23
  80151c:	85c1201e 	bne	r16,r23,8019a0 <___vfprintf_internal_r+0x57c>
  801520:	80800003 	ldbu	r2,0(r16)
  801524:	10803fcc 	andi	r2,r2,255
  801528:	1080201c 	xori	r2,r2,128
  80152c:	10bfe004 	addi	r2,r2,-128
  801530:	1000c926 	beq	r2,zero,801858 <___vfprintf_internal_r+0x434>
  801534:	82c00047 	ldb	r11,1(r16)
  801538:	85c00044 	addi	r23,r16,1
  80153c:	d8001345 	stb	zero,77(sp)
  801540:	0009883a 	mov	r4,zero
  801544:	000b883a 	mov	r5,zero
  801548:	023fffc4 	movi	r8,-1
  80154c:	0021883a 	mov	r16,zero
  801550:	0019883a 	mov	r12,zero
  801554:	bdc00044 	addi	r23,r23,1
  801558:	5839883a 	mov	fp,r11
  80155c:	e0bff804 	addi	r2,fp,-32
  801560:	10c01668 	cmpgeui	r3,r2,89
  801564:	18006c1e 	bne	r3,zero,801718 <___vfprintf_internal_r+0x2f4>
  801568:	100490ba 	slli	r2,r2,2
  80156c:	00c02034 	movhi	r3,128
  801570:	10c7883a 	add	r3,r2,r3
  801574:	18855f17 	ldw	r2,5500(r3)
  801578:	1000683a 	jmp	r2
  80157c:	00801ecc 	andi	r2,zero,123
  801580:	00801718 	cmpnei	r2,zero,92
  801584:	00801718 	cmpnei	r2,zero,92
  801588:	00801ec0 	call	801ec <__alt_mem_sdram-0x77fe14>
  80158c:	00801718 	cmpnei	r2,zero,92
  801590:	00801718 	cmpnei	r2,zero,92
  801594:	00801718 	cmpnei	r2,zero,92
  801598:	00801718 	cmpnei	r2,zero,92
  80159c:	00801718 	cmpnei	r2,zero,92
  8015a0:	00801718 	cmpnei	r2,zero,92
  8015a4:	00801e98 	cmpnei	r2,zero,122
  8015a8:	00801e88 	cmpgei	r2,zero,122
  8015ac:	00801718 	cmpnei	r2,zero,92
  8015b0:	00801e70 	cmpltui	r2,zero,121
  8015b4:	00801e24 	muli	r2,zero,120
  8015b8:	00801718 	cmpnei	r2,zero,92
  8015bc:	00801e18 	cmpnei	r2,zero,120
  8015c0:	008016e0 	cmpeqi	r2,zero,91
  8015c4:	008016e0 	cmpeqi	r2,zero,91
  8015c8:	008016e0 	cmpeqi	r2,zero,91
  8015cc:	008016e0 	cmpeqi	r2,zero,91
  8015d0:	008016e0 	cmpeqi	r2,zero,91
  8015d4:	008016e0 	cmpeqi	r2,zero,91
  8015d8:	008016e0 	cmpeqi	r2,zero,91
  8015dc:	008016e0 	cmpeqi	r2,zero,91
  8015e0:	008016e0 	cmpeqi	r2,zero,91
  8015e4:	00801718 	cmpnei	r2,zero,92
  8015e8:	00801718 	cmpnei	r2,zero,92
  8015ec:	00801718 	cmpnei	r2,zero,92
  8015f0:	00801718 	cmpnei	r2,zero,92
  8015f4:	00801718 	cmpnei	r2,zero,92
  8015f8:	00801718 	cmpnei	r2,zero,92
  8015fc:	00801718 	cmpnei	r2,zero,92
  801600:	00801718 	cmpnei	r2,zero,92
  801604:	00801718 	cmpnei	r2,zero,92
  801608:	00801718 	cmpnei	r2,zero,92
  80160c:	00801d30 	cmpltui	r2,zero,116
  801610:	008019fc 	xorhi	r2,zero,103
  801614:	00801718 	cmpnei	r2,zero,92
  801618:	008019fc 	xorhi	r2,zero,103
  80161c:	00801718 	cmpnei	r2,zero,92
  801620:	00801718 	cmpnei	r2,zero,92
  801624:	00801718 	cmpnei	r2,zero,92
  801628:	00801718 	cmpnei	r2,zero,92
  80162c:	00801d24 	muli	r2,zero,116
  801630:	00801718 	cmpnei	r2,zero,92
  801634:	00801718 	cmpnei	r2,zero,92
  801638:	00801930 	cmpltui	r2,zero,100
  80163c:	00801718 	cmpnei	r2,zero,92
  801640:	00801718 	cmpnei	r2,zero,92
  801644:	00801718 	cmpnei	r2,zero,92
  801648:	00801718 	cmpnei	r2,zero,92
  80164c:	00801718 	cmpnei	r2,zero,92
  801650:	00801908 	cmpgei	r2,zero,100
  801654:	00801718 	cmpnei	r2,zero,92
  801658:	00801718 	cmpnei	r2,zero,92
  80165c:	00801cdc 	xori	r2,zero,115
  801660:	00801718 	cmpnei	r2,zero,92
  801664:	00801718 	cmpnei	r2,zero,92
  801668:	00801718 	cmpnei	r2,zero,92
  80166c:	00801718 	cmpnei	r2,zero,92
  801670:	00801718 	cmpnei	r2,zero,92
  801674:	00801718 	cmpnei	r2,zero,92
  801678:	00801718 	cmpnei	r2,zero,92
  80167c:	00801718 	cmpnei	r2,zero,92
  801680:	00801718 	cmpnei	r2,zero,92
  801684:	00801718 	cmpnei	r2,zero,92
  801688:	00801cb4 	movhi	r2,114
  80168c:	00801c10 	cmplti	r2,zero,112
  801690:	008019fc 	xorhi	r2,zero,103
  801694:	008019fc 	xorhi	r2,zero,103
  801698:	008019fc 	xorhi	r2,zero,103
  80169c:	00801ca8 	cmpgeui	r2,zero,114
  8016a0:	00801c10 	cmplti	r2,zero,112
  8016a4:	00801718 	cmpnei	r2,zero,92
  8016a8:	00801718 	cmpnei	r2,zero,92
  8016ac:	00802020 	cmpeqi	r2,zero,128
  8016b0:	00801718 	cmpnei	r2,zero,92
  8016b4:	00801fe4 	muli	r2,zero,127
  8016b8:	00801934 	movhi	r2,100
  8016bc:	00801fa4 	muli	r2,zero,126
  8016c0:	00801f98 	cmpnei	r2,zero,126
  8016c4:	00801718 	cmpnei	r2,zero,92
  8016c8:	00801f40 	call	801f4 <__alt_mem_sdram-0x77fe0c>
  8016cc:	00801718 	cmpnei	r2,zero,92
  8016d0:	0080190c 	andi	r2,zero,100
  8016d4:	00801718 	cmpnei	r2,zero,92
  8016d8:	00801718 	cmpnei	r2,zero,92
  8016dc:	00801ef8 	rdprs	r2,zero,123
  8016e0:	0021883a 	mov	r16,zero
  8016e4:	e0fff404 	addi	r3,fp,-48
  8016e8:	800490ba 	slli	r2,r16,2
  8016ec:	bf000007 	ldb	fp,0(r23)
  8016f0:	bdc00044 	addi	r23,r23,1
  8016f4:	1421883a 	add	r16,r2,r16
  8016f8:	8421883a 	add	r16,r16,r16
  8016fc:	1c21883a 	add	r16,r3,r16
  801700:	e0fff404 	addi	r3,fp,-48
  801704:	188002b0 	cmpltui	r2,r3,10
  801708:	103ff71e 	bne	r2,zero,8016e8 <___vfprintf_internal_r+0x2c4>
  80170c:	e0bff804 	addi	r2,fp,-32
  801710:	10c01668 	cmpgeui	r3,r2,89
  801714:	183f9426 	beq	r3,zero,801568 <___vfprintf_internal_r+0x144>
  801718:	21003fcc 	andi	r4,r4,255
  80171c:	2006871e 	bne	r4,zero,80313c <___vfprintf_internal_r+0x1d18>
  801720:	e0004d26 	beq	fp,zero,801858 <___vfprintf_internal_r+0x434>
  801724:	df001d05 	stb	fp,116(sp)
  801728:	d8001345 	stb	zero,77(sp)
  80172c:	05000044 	movi	r20,1
  801730:	05400044 	movi	r21,1
  801734:	dc401d04 	addi	r17,sp,116
  801738:	db000415 	stw	r12,16(sp)
  80173c:	0011883a 	mov	r8,zero
  801740:	d8000715 	stw	zero,28(sp)
  801744:	d8800417 	ldw	r2,16(sp)
  801748:	1380008c 	andi	r14,r2,2
  80174c:	70000126 	beq	r14,zero,801754 <___vfprintf_internal_r+0x330>
  801750:	a5000084 	addi	r20,r20,2
  801754:	d8800417 	ldw	r2,16(sp)
  801758:	d8c01c17 	ldw	r3,112(sp)
  80175c:	1340210c 	andi	r13,r2,132
  801760:	6800021e 	bne	r13,zero,80176c <___vfprintf_internal_r+0x348>
  801764:	850fc83a 	sub	r7,r16,r20
  801768:	01c34516 	blt	zero,r7,802480 <___vfprintf_internal_r+0x105c>
  80176c:	d8801347 	ldb	r2,77(sp)
  801770:	10000c26 	beq	r2,zero,8017a4 <___vfprintf_internal_r+0x380>
  801774:	d8801b17 	ldw	r2,108(sp)
  801778:	d9001344 	addi	r4,sp,77
  80177c:	18c00044 	addi	r3,r3,1
  801780:	10800044 	addi	r2,r2,1
  801784:	b1000015 	stw	r4,0(r22)
  801788:	01000044 	movi	r4,1
  80178c:	d8801b15 	stw	r2,108(sp)
  801790:	b1000115 	stw	r4,4(r22)
  801794:	d8c01c15 	stw	r3,112(sp)
  801798:	10800208 	cmpgei	r2,r2,8
  80179c:	1003791e 	bne	r2,zero,802584 <___vfprintf_internal_r+0x1160>
  8017a0:	b5800204 	addi	r22,r22,8
  8017a4:	70000c26 	beq	r14,zero,8017d8 <___vfprintf_internal_r+0x3b4>
  8017a8:	d8801b17 	ldw	r2,108(sp)
  8017ac:	d9001384 	addi	r4,sp,78
  8017b0:	18c00084 	addi	r3,r3,2
  8017b4:	10800044 	addi	r2,r2,1
  8017b8:	b1000015 	stw	r4,0(r22)
  8017bc:	01000084 	movi	r4,2
  8017c0:	d8801b15 	stw	r2,108(sp)
  8017c4:	b1000115 	stw	r4,4(r22)
  8017c8:	d8c01c15 	stw	r3,112(sp)
  8017cc:	10800208 	cmpgei	r2,r2,8
  8017d0:	10037a1e 	bne	r2,zero,8025bc <___vfprintf_internal_r+0x1198>
  8017d4:	b5800204 	addi	r22,r22,8
  8017d8:	6b402018 	cmpnei	r13,r13,128
  8017dc:	68025b26 	beq	r13,zero,80214c <___vfprintf_internal_r+0xd28>
  8017e0:	4551c83a 	sub	r8,r8,r21
  8017e4:	02029316 	blt	zero,r8,802234 <___vfprintf_internal_r+0xe10>
  8017e8:	d8800417 	ldw	r2,16(sp)
  8017ec:	1080400c 	andi	r2,r2,256
  8017f0:	1002101e 	bne	r2,zero,802034 <___vfprintf_internal_r+0xc10>
  8017f4:	d8801b17 	ldw	r2,108(sp)
  8017f8:	1d47883a 	add	r3,r3,r21
  8017fc:	b4400015 	stw	r17,0(r22)
  801800:	10800044 	addi	r2,r2,1
  801804:	b5400115 	stw	r21,4(r22)
  801808:	d8801b15 	stw	r2,108(sp)
  80180c:	d8c01c15 	stw	r3,112(sp)
  801810:	10800208 	cmpgei	r2,r2,8
  801814:	1003101e 	bne	r2,zero,802458 <___vfprintf_internal_r+0x1034>
  801818:	b5800204 	addi	r22,r22,8
  80181c:	d8800417 	ldw	r2,16(sp)
  801820:	1440010c 	andi	r17,r2,4
  801824:	88000226 	beq	r17,zero,801830 <___vfprintf_internal_r+0x40c>
  801828:	8523c83a 	sub	r17,r16,r20
  80182c:	0440c616 	blt	zero,r17,801b48 <___vfprintf_internal_r+0x724>
  801830:	8500010e 	bge	r16,r20,801838 <___vfprintf_internal_r+0x414>
  801834:	a021883a 	mov	r16,r20
  801838:	d8800517 	ldw	r2,20(sp)
  80183c:	1405883a 	add	r2,r2,r16
  801840:	d8800515 	stw	r2,20(sp)
  801844:	1802c21e 	bne	r3,zero,802350 <___vfprintf_internal_r+0xf2c>
  801848:	b8800007 	ldb	r2,0(r23)
  80184c:	d8001b15 	stw	zero,108(sp)
  801850:	dd802704 	addi	r22,sp,156
  801854:	103f291e 	bne	r2,zero,8014fc <___vfprintf_internal_r+0xd8>
  801858:	d8801c17 	ldw	r2,112(sp)
  80185c:	1006391e 	bne	r2,zero,803144 <___vfprintf_internal_r+0x1d20>
  801860:	9080030b 	ldhu	r2,12(r18)
  801864:	1080100c 	andi	r2,r2,64
  801868:	1006cf1e 	bne	r2,zero,8033a8 <___vfprintf_internal_r+0x1f84>
  80186c:	d8800517 	ldw	r2,20(sp)
  801870:	dfc04017 	ldw	ra,256(sp)
  801874:	df003f17 	ldw	fp,252(sp)
  801878:	ddc03e17 	ldw	r23,248(sp)
  80187c:	dd803d17 	ldw	r22,244(sp)
  801880:	dd403c17 	ldw	r21,240(sp)
  801884:	dd003b17 	ldw	r20,236(sp)
  801888:	dcc03a17 	ldw	r19,232(sp)
  80188c:	dc803917 	ldw	r18,228(sp)
  801890:	dc403817 	ldw	r17,224(sp)
  801894:	dc003717 	ldw	r16,220(sp)
  801898:	dec04104 	addi	sp,sp,260
  80189c:	f800283a 	ret
  8018a0:	900b883a 	mov	r5,r18
  8018a4:	9809883a 	mov	r4,r19
  8018a8:	08036040 	call	803604 <__swsetup_r>
  8018ac:	1006be1e 	bne	r2,zero,8033a8 <___vfprintf_internal_r+0x1f84>
  8018b0:	9080030b 	ldhu	r2,12(r18)
  8018b4:	1080068c 	andi	r2,r2,26
  8018b8:	10800298 	cmpnei	r2,r2,10
  8018bc:	103f011e 	bne	r2,zero,8014c4 <___vfprintf_internal_r+0xa0>
  8018c0:	9080038f 	ldh	r2,14(r18)
  8018c4:	103eff16 	blt	r2,zero,8014c4 <___vfprintf_internal_r+0xa0>
  8018c8:	d9c00617 	ldw	r7,24(sp)
  8018cc:	b00d883a 	mov	r6,r22
  8018d0:	900b883a 	mov	r5,r18
  8018d4:	9809883a 	mov	r4,r19
  8018d8:	dfc04017 	ldw	ra,256(sp)
  8018dc:	df003f17 	ldw	fp,252(sp)
  8018e0:	ddc03e17 	ldw	r23,248(sp)
  8018e4:	dd803d17 	ldw	r22,244(sp)
  8018e8:	dd403c17 	ldw	r21,240(sp)
  8018ec:	dd003b17 	ldw	r20,236(sp)
  8018f0:	dcc03a17 	ldw	r19,232(sp)
  8018f4:	dc803917 	ldw	r18,228(sp)
  8018f8:	dc403817 	ldw	r17,224(sp)
  8018fc:	dc003717 	ldw	r16,220(sp)
  801900:	dec04104 	addi	sp,sp,260
  801904:	08035441 	jmpi	803544 <__sbprintf>
  801908:	63000414 	ori	r12,r12,16
  80190c:	6080080c 	andi	r2,r12,32
  801910:	10008126 	beq	r2,zero,801b18 <___vfprintf_internal_r+0x6f4>
  801914:	d8c00617 	ldw	r3,24(sp)
  801918:	00800044 	movi	r2,1
  80191c:	1d000017 	ldw	r20,0(r3)
  801920:	1d400117 	ldw	r21,4(r3)
  801924:	18c00204 	addi	r3,r3,8
  801928:	d8c00615 	stw	r3,24(sp)
  80192c:	00000906 	br	801954 <___vfprintf_internal_r+0x530>
  801930:	63000414 	ori	r12,r12,16
  801934:	6080080c 	andi	r2,r12,32
  801938:	10006b26 	beq	r2,zero,801ae8 <___vfprintf_internal_r+0x6c4>
  80193c:	d8c00617 	ldw	r3,24(sp)
  801940:	0005883a 	mov	r2,zero
  801944:	1d000017 	ldw	r20,0(r3)
  801948:	1d400117 	ldw	r21,4(r3)
  80194c:	18c00204 	addi	r3,r3,8
  801950:	d8c00615 	stw	r3,24(sp)
  801954:	d8001345 	stb	zero,77(sp)
  801958:	40ffffe0 	cmpeqi	r3,r8,-1
  80195c:	001b883a 	mov	r13,zero
  801960:	18010e1e 	bne	r3,zero,801d9c <___vfprintf_internal_r+0x978>
  801964:	047fdfc4 	movi	r17,-129
  801968:	6448703a 	and	r4,r12,r17
  80196c:	a546b03a 	or	r3,r20,r21
  801970:	d9000415 	stw	r4,16(sp)
  801974:	1802c01e 	bne	r3,zero,802478 <___vfprintf_internal_r+0x1054>
  801978:	40025f1e 	bne	r8,zero,8022f8 <___vfprintf_internal_r+0xed4>
  80197c:	1003751e 	bne	r2,zero,802754 <___vfprintf_internal_r+0x1330>
  801980:	6540004c 	andi	r21,r12,1
  801984:	a803b026 	beq	r21,zero,802848 <___vfprintf_internal_r+0x1424>
  801988:	00800c04 	movi	r2,48
  80198c:	d88026c5 	stb	r2,155(sp)
  801990:	dc4026c4 	addi	r17,sp,155
  801994:	0000ba06 	br	801c80 <___vfprintf_internal_r+0x85c>
  801998:	85e3c83a 	sub	r17,r16,r23
  80199c:	85ffae26 	beq	r16,r23,801858 <___vfprintf_internal_r+0x434>
  8019a0:	d8c01c17 	ldw	r3,112(sp)
  8019a4:	d8801b17 	ldw	r2,108(sp)
  8019a8:	b5c00015 	stw	r23,0(r22)
  8019ac:	1c47883a 	add	r3,r3,r17
  8019b0:	10800044 	addi	r2,r2,1
  8019b4:	d8801b15 	stw	r2,108(sp)
  8019b8:	b4400115 	stw	r17,4(r22)
  8019bc:	d8c01c15 	stw	r3,112(sp)
  8019c0:	10800208 	cmpgei	r2,r2,8
  8019c4:	1000061e 	bne	r2,zero,8019e0 <___vfprintf_internal_r+0x5bc>
  8019c8:	b5800204 	addi	r22,r22,8
  8019cc:	d8c00517 	ldw	r3,20(sp)
  8019d0:	80800003 	ldbu	r2,0(r16)
  8019d4:	1c47883a 	add	r3,r3,r17
  8019d8:	d8c00515 	stw	r3,20(sp)
  8019dc:	003ed106 	br	801524 <___vfprintf_internal_r+0x100>
  8019e0:	d9801a04 	addi	r6,sp,104
  8019e4:	900b883a 	mov	r5,r18
  8019e8:	9809883a 	mov	r4,r19
  8019ec:	08089bc0 	call	8089bc <__sprint_r>
  8019f0:	103f9b1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8019f4:	dd802704 	addi	r22,sp,156
  8019f8:	003ff406 	br	8019cc <___vfprintf_internal_r+0x5a8>
  8019fc:	21003fcc 	andi	r4,r4,255
  801a00:	2006671e 	bne	r4,zero,8033a0 <___vfprintf_internal_r+0x1f7c>
  801a04:	d8c00617 	ldw	r3,24(sp)
  801a08:	6080020c 	andi	r2,r12,8
  801a0c:	19000204 	addi	r4,r3,8
  801a10:	d9000e15 	stw	r4,56(sp)
  801a14:	1003a71e 	bne	r2,zero,8028b4 <___vfprintf_internal_r+0x1490>
  801a18:	d8800617 	ldw	r2,24(sp)
  801a1c:	10c00017 	ldw	r3,0(r2)
  801a20:	10800117 	ldw	r2,4(r2)
  801a24:	d8c00915 	stw	r3,36(sp)
  801a28:	d8800a15 	stw	r2,40(sp)
  801a2c:	dd400a17 	ldw	r21,40(sp)
  801a30:	dd000917 	ldw	r20,36(sp)
  801a34:	00a00034 	movhi	r2,32768
  801a38:	10bfffc4 	addi	r2,r2,-1
  801a3c:	a8a2703a 	and	r17,r21,r2
  801a40:	01dffc34 	movhi	r7,32752
  801a44:	01bfffc4 	movi	r6,-1
  801a48:	39ffffc4 	addi	r7,r7,-1
  801a4c:	a009883a 	mov	r4,r20
  801a50:	880b883a 	mov	r5,r17
  801a54:	da000615 	stw	r8,24(sp)
  801a58:	db000415 	stw	r12,16(sp)
  801a5c:	080e1c40 	call	80e1c4 <__unorddf2>
  801a60:	db000417 	ldw	r12,16(sp)
  801a64:	da000617 	ldw	r8,24(sp)
  801a68:	1004641e 	bne	r2,zero,802bfc <___vfprintf_internal_r+0x17d8>
  801a6c:	01dffc34 	movhi	r7,32752
  801a70:	01bfffc4 	movi	r6,-1
  801a74:	39ffffc4 	addi	r7,r7,-1
  801a78:	a009883a 	mov	r4,r20
  801a7c:	880b883a 	mov	r5,r17
  801a80:	080d07c0 	call	80d07c <__ledf2>
  801a84:	db000417 	ldw	r12,16(sp)
  801a88:	da000617 	ldw	r8,24(sp)
  801a8c:	00845b0e 	bge	zero,r2,802bfc <___vfprintf_internal_r+0x17d8>
  801a90:	000d883a 	mov	r6,zero
  801a94:	000f883a 	mov	r7,zero
  801a98:	a009883a 	mov	r4,r20
  801a9c:	a80b883a 	mov	r5,r21
  801aa0:	080d07c0 	call	80d07c <__ledf2>
  801aa4:	db000417 	ldw	r12,16(sp)
  801aa8:	10059116 	blt	r2,zero,8030f0 <___vfprintf_internal_r+0x1ccc>
  801aac:	db401343 	ldbu	r13,77(sp)
  801ab0:	e0801210 	cmplti	r2,fp,72
  801ab4:	1005391e 	bne	r2,zero,802f9c <___vfprintf_internal_r+0x1b78>
  801ab8:	04402074 	movhi	r17,129
  801abc:	8c43ba04 	addi	r17,r17,3816
  801ac0:	00bfdfc4 	movi	r2,-129
  801ac4:	6084703a 	and	r2,r12,r2
  801ac8:	d8800415 	stw	r2,16(sp)
  801acc:	d8800e17 	ldw	r2,56(sp)
  801ad0:	050000c4 	movi	r20,3
  801ad4:	054000c4 	movi	r21,3
  801ad8:	d8800615 	stw	r2,24(sp)
  801adc:	0011883a 	mov	r8,zero
  801ae0:	d8000715 	stw	zero,28(sp)
  801ae4:	00006a06 	br	801c90 <___vfprintf_internal_r+0x86c>
  801ae8:	d9000617 	ldw	r4,24(sp)
  801aec:	6080040c 	andi	r2,r12,16
  801af0:	20c00104 	addi	r3,r4,4
  801af4:	10036a1e 	bne	r2,zero,8028a0 <___vfprintf_internal_r+0x147c>
  801af8:	6080100c 	andi	r2,r12,64
  801afc:	10052126 	beq	r2,zero,802f84 <___vfprintf_internal_r+0x1b60>
  801b00:	d8800617 	ldw	r2,24(sp)
  801b04:	002b883a 	mov	r21,zero
  801b08:	d8c00615 	stw	r3,24(sp)
  801b0c:	1500000b 	ldhu	r20,0(r2)
  801b10:	0005883a 	mov	r2,zero
  801b14:	003f8f06 	br	801954 <___vfprintf_internal_r+0x530>
  801b18:	d9000617 	ldw	r4,24(sp)
  801b1c:	6080040c 	andi	r2,r12,16
  801b20:	20c00104 	addi	r3,r4,4
  801b24:	1003501e 	bne	r2,zero,802868 <___vfprintf_internal_r+0x1444>
  801b28:	6080100c 	andi	r2,r12,64
  801b2c:	10055926 	beq	r2,zero,803094 <___vfprintf_internal_r+0x1c70>
  801b30:	d8800617 	ldw	r2,24(sp)
  801b34:	002b883a 	mov	r21,zero
  801b38:	d8c00615 	stw	r3,24(sp)
  801b3c:	1500000b 	ldhu	r20,0(r2)
  801b40:	00800044 	movi	r2,1
  801b44:	003f8306 	br	801954 <___vfprintf_internal_r+0x530>
  801b48:	03002074 	movhi	r12,129
  801b4c:	89000450 	cmplti	r4,r17,17
  801b50:	d8801b17 	ldw	r2,108(sp)
  801b54:	6303ce04 	addi	r12,r12,3896
  801b58:	20001b1e 	bne	r4,zero,801bc8 <___vfprintf_internal_r+0x7a4>
  801b5c:	05400404 	movi	r21,16
  801b60:	6039883a 	mov	fp,r12
  801b64:	00000406 	br	801b78 <___vfprintf_internal_r+0x754>
  801b68:	8c7ffc04 	addi	r17,r17,-16
  801b6c:	89000448 	cmpgei	r4,r17,17
  801b70:	b5800204 	addi	r22,r22,8
  801b74:	20001326 	beq	r4,zero,801bc4 <___vfprintf_internal_r+0x7a0>
  801b78:	10800044 	addi	r2,r2,1
  801b7c:	18c00404 	addi	r3,r3,16
  801b80:	b7000015 	stw	fp,0(r22)
  801b84:	b5400115 	stw	r21,4(r22)
  801b88:	d8c01c15 	stw	r3,112(sp)
  801b8c:	d8801b15 	stw	r2,108(sp)
  801b90:	11000208 	cmpgei	r4,r2,8
  801b94:	203ff426 	beq	r4,zero,801b68 <___vfprintf_internal_r+0x744>
  801b98:	d9801a04 	addi	r6,sp,104
  801b9c:	900b883a 	mov	r5,r18
  801ba0:	9809883a 	mov	r4,r19
  801ba4:	08089bc0 	call	8089bc <__sprint_r>
  801ba8:	103f2d1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  801bac:	8c7ffc04 	addi	r17,r17,-16
  801bb0:	89000448 	cmpgei	r4,r17,17
  801bb4:	d8c01c17 	ldw	r3,112(sp)
  801bb8:	d8801b17 	ldw	r2,108(sp)
  801bbc:	dd802704 	addi	r22,sp,156
  801bc0:	203fed1e 	bne	r4,zero,801b78 <___vfprintf_internal_r+0x754>
  801bc4:	e019883a 	mov	r12,fp
  801bc8:	10800044 	addi	r2,r2,1
  801bcc:	1c47883a 	add	r3,r3,r17
  801bd0:	d8801b15 	stw	r2,108(sp)
  801bd4:	b3000015 	stw	r12,0(r22)
  801bd8:	b4400115 	stw	r17,4(r22)
  801bdc:	d8c01c15 	stw	r3,112(sp)
  801be0:	10800210 	cmplti	r2,r2,8
  801be4:	103f121e 	bne	r2,zero,801830 <___vfprintf_internal_r+0x40c>
  801be8:	d9801a04 	addi	r6,sp,104
  801bec:	900b883a 	mov	r5,r18
  801bf0:	9809883a 	mov	r4,r19
  801bf4:	08089bc0 	call	8089bc <__sprint_r>
  801bf8:	103f191e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  801bfc:	d8c01c17 	ldw	r3,112(sp)
  801c00:	003f0b06 	br	801830 <___vfprintf_internal_r+0x40c>
  801c04:	9809883a 	mov	r4,r19
  801c08:	08057400 	call	805740 <__sinit>
  801c0c:	003e1d06 	br	801484 <___vfprintf_internal_r+0x60>
  801c10:	21003fcc 	andi	r4,r4,255
  801c14:	2005de1e 	bne	r4,zero,803390 <___vfprintf_internal_r+0x1f6c>
  801c18:	6080080c 	andi	r2,r12,32
  801c1c:	10004926 	beq	r2,zero,801d44 <___vfprintf_internal_r+0x920>
  801c20:	d8c00617 	ldw	r3,24(sp)
  801c24:	18800117 	ldw	r2,4(r3)
  801c28:	1d000017 	ldw	r20,0(r3)
  801c2c:	18c00204 	addi	r3,r3,8
  801c30:	d8c00615 	stw	r3,24(sp)
  801c34:	102b883a 	mov	r21,r2
  801c38:	10004e16 	blt	r2,zero,801d74 <___vfprintf_internal_r+0x950>
  801c3c:	40bfffd8 	cmpnei	r2,r8,-1
  801c40:	db401343 	ldbu	r13,77(sp)
  801c44:	10000626 	beq	r2,zero,801c60 <___vfprintf_internal_r+0x83c>
  801c48:	047fdfc4 	movi	r17,-129
  801c4c:	6446703a 	and	r3,r12,r17
  801c50:	a544b03a 	or	r2,r20,r21
  801c54:	d8c00415 	stw	r3,16(sp)
  801c58:	1002bd26 	beq	r2,zero,802750 <___vfprintf_internal_r+0x132c>
  801c5c:	db000417 	ldw	r12,16(sp)
  801c60:	a803701e 	bne	r21,zero,802a24 <___vfprintf_internal_r+0x1600>
  801c64:	a08002a8 	cmpgeui	r2,r20,10
  801c68:	10036e1e 	bne	r2,zero,802a24 <___vfprintf_internal_r+0x1600>
  801c6c:	a5000c04 	addi	r20,r20,48
  801c70:	dd0026c5 	stb	r20,155(sp)
  801c74:	db000415 	stw	r12,16(sp)
  801c78:	05400044 	movi	r21,1
  801c7c:	dc4026c4 	addi	r17,sp,155
  801c80:	4029883a 	mov	r20,r8
  801c84:	4540010e 	bge	r8,r21,801c8c <___vfprintf_internal_r+0x868>
  801c88:	a829883a 	mov	r20,r21
  801c8c:	d8000715 	stw	zero,28(sp)
  801c90:	6b403fcc 	andi	r13,r13,255
  801c94:	6b40201c 	xori	r13,r13,128
  801c98:	6b7fe004 	addi	r13,r13,-128
  801c9c:	683ea926 	beq	r13,zero,801744 <___vfprintf_internal_r+0x320>
  801ca0:	a5000044 	addi	r20,r20,1
  801ca4:	003ea706 	br	801744 <___vfprintf_internal_r+0x320>
  801ca8:	bac00007 	ldb	r11,0(r23)
  801cac:	63001014 	ori	r12,r12,64
  801cb0:	003e2806 	br	801554 <___vfprintf_internal_r+0x130>
  801cb4:	d8c00617 	ldw	r3,24(sp)
  801cb8:	d8001345 	stb	zero,77(sp)
  801cbc:	05000044 	movi	r20,1
  801cc0:	18800017 	ldw	r2,0(r3)
  801cc4:	18c00104 	addi	r3,r3,4
  801cc8:	d8c00615 	stw	r3,24(sp)
  801ccc:	d8801d05 	stb	r2,116(sp)
  801cd0:	05400044 	movi	r21,1
  801cd4:	dc401d04 	addi	r17,sp,116
  801cd8:	003e9706 	br	801738 <___vfprintf_internal_r+0x314>
  801cdc:	21003fcc 	andi	r4,r4,255
  801ce0:	2005a71e 	bne	r4,zero,803380 <___vfprintf_internal_r+0x1f5c>
  801ce4:	00802074 	movhi	r2,129
  801ce8:	1083c204 	addi	r2,r2,3848
  801cec:	d8800c15 	stw	r2,48(sp)
  801cf0:	6080080c 	andi	r2,r12,32
  801cf4:	10008726 	beq	r2,zero,801f14 <___vfprintf_internal_r+0xaf0>
  801cf8:	d8800617 	ldw	r2,24(sp)
  801cfc:	15000017 	ldw	r20,0(r2)
  801d00:	15400117 	ldw	r21,4(r2)
  801d04:	10800204 	addi	r2,r2,8
  801d08:	d8800615 	stw	r2,24(sp)
  801d0c:	6080004c 	andi	r2,r12,1
  801d10:	10000226 	beq	r2,zero,801d1c <___vfprintf_internal_r+0x8f8>
  801d14:	a544b03a 	or	r2,r20,r21
  801d18:	1002cd1e 	bne	r2,zero,802850 <___vfprintf_internal_r+0x142c>
  801d1c:	00800084 	movi	r2,2
  801d20:	003f0c06 	br	801954 <___vfprintf_internal_r+0x530>
  801d24:	bac00007 	ldb	r11,0(r23)
  801d28:	63000214 	ori	r12,r12,8
  801d2c:	003e0906 	br	801554 <___vfprintf_internal_r+0x130>
  801d30:	21003fcc 	andi	r4,r4,255
  801d34:	2005981e 	bne	r4,zero,803398 <___vfprintf_internal_r+0x1f74>
  801d38:	63000414 	ori	r12,r12,16
  801d3c:	6080080c 	andi	r2,r12,32
  801d40:	103fb71e 	bne	r2,zero,801c20 <___vfprintf_internal_r+0x7fc>
  801d44:	d9000617 	ldw	r4,24(sp)
  801d48:	6080040c 	andi	r2,r12,16
  801d4c:	20c00104 	addi	r3,r4,4
  801d50:	1002dd1e 	bne	r2,zero,8028c8 <___vfprintf_internal_r+0x14a4>
  801d54:	6080100c 	andi	r2,r12,64
  801d58:	10048426 	beq	r2,zero,802f6c <___vfprintf_internal_r+0x1b48>
  801d5c:	d8800617 	ldw	r2,24(sp)
  801d60:	d8c00615 	stw	r3,24(sp)
  801d64:	1500000f 	ldh	r20,0(r2)
  801d68:	a02bd7fa 	srai	r21,r20,31
  801d6c:	a805883a 	mov	r2,r21
  801d70:	103fb20e 	bge	r2,zero,801c3c <___vfprintf_internal_r+0x818>
  801d74:	a004c03a 	cmpne	r2,r20,zero
  801d78:	056bc83a 	sub	r21,zero,r21
  801d7c:	a8abc83a 	sub	r21,r21,r2
  801d80:	00800b44 	movi	r2,45
  801d84:	d8801345 	stb	r2,77(sp)
  801d88:	40ffffe0 	cmpeqi	r3,r8,-1
  801d8c:	0529c83a 	sub	r20,zero,r20
  801d90:	03400b44 	movi	r13,45
  801d94:	00800044 	movi	r2,1
  801d98:	183ef226 	beq	r3,zero,801964 <___vfprintf_internal_r+0x540>
  801d9c:	10c00060 	cmpeqi	r3,r2,1
  801da0:	183faf1e 	bne	r3,zero,801c60 <___vfprintf_internal_r+0x83c>
  801da4:	108000a0 	cmpeqi	r2,r2,2
  801da8:	1001581e 	bne	r2,zero,80230c <___vfprintf_internal_r+0xee8>
  801dac:	dc402704 	addi	r17,sp,156
  801db0:	a006d0fa 	srli	r3,r20,3
  801db4:	a808977a 	slli	r4,r21,29
  801db8:	a82ad0fa 	srli	r21,r21,3
  801dbc:	a50001cc 	andi	r20,r20,7
  801dc0:	a0800c04 	addi	r2,r20,48
  801dc4:	20e8b03a 	or	r20,r4,r3
  801dc8:	88bfffc5 	stb	r2,-1(r17)
  801dcc:	a546b03a 	or	r3,r20,r21
  801dd0:	880b883a 	mov	r5,r17
  801dd4:	8c7fffc4 	addi	r17,r17,-1
  801dd8:	183ff51e 	bne	r3,zero,801db0 <___vfprintf_internal_r+0x98c>
  801ddc:	60c0004c 	andi	r3,r12,1
  801de0:	18015726 	beq	r3,zero,802340 <___vfprintf_internal_r+0xf1c>
  801de4:	10803fcc 	andi	r2,r2,255
  801de8:	1080201c 	xori	r2,r2,128
  801dec:	10bfe004 	addi	r2,r2,-128
  801df0:	10800c18 	cmpnei	r2,r2,48
  801df4:	10015226 	beq	r2,zero,802340 <___vfprintf_internal_r+0xf1c>
  801df8:	00800c04 	movi	r2,48
  801dfc:	297fff84 	addi	r5,r5,-2
  801e00:	88bfffc5 	stb	r2,-1(r17)
  801e04:	d8802704 	addi	r2,sp,156
  801e08:	116bc83a 	sub	r21,r2,r5
  801e0c:	db000415 	stw	r12,16(sp)
  801e10:	2823883a 	mov	r17,r5
  801e14:	003f9a06 	br	801c80 <___vfprintf_internal_r+0x85c>
  801e18:	bac00007 	ldb	r11,0(r23)
  801e1c:	63002014 	ori	r12,r12,128
  801e20:	003dcc06 	br	801554 <___vfprintf_internal_r+0x130>
  801e24:	bf000007 	ldb	fp,0(r23)
  801e28:	b8800044 	addi	r2,r23,1
  801e2c:	e0c00aa0 	cmpeqi	r3,fp,42
  801e30:	1805b11e 	bne	r3,zero,8034f8 <___vfprintf_internal_r+0x20d4>
  801e34:	e0fff404 	addi	r3,fp,-48
  801e38:	198002b0 	cmpltui	r6,r3,10
  801e3c:	102f883a 	mov	r23,r2
  801e40:	0011883a 	mov	r8,zero
  801e44:	303dc526 	beq	r6,zero,80155c <___vfprintf_internal_r+0x138>
  801e48:	400490ba 	slli	r2,r8,2
  801e4c:	bf000007 	ldb	fp,0(r23)
  801e50:	bdc00044 	addi	r23,r23,1
  801e54:	1211883a 	add	r8,r2,r8
  801e58:	4211883a 	add	r8,r8,r8
  801e5c:	40d1883a 	add	r8,r8,r3
  801e60:	e0fff404 	addi	r3,fp,-48
  801e64:	188002b0 	cmpltui	r2,r3,10
  801e68:	103ff71e 	bne	r2,zero,801e48 <___vfprintf_internal_r+0xa24>
  801e6c:	003dbb06 	br	80155c <___vfprintf_internal_r+0x138>
  801e70:	bf000003 	ldbu	fp,0(r23)
  801e74:	e2c03fcc 	andi	r11,fp,255
  801e78:	5ac0201c 	xori	r11,r11,128
  801e7c:	63000114 	ori	r12,r12,4
  801e80:	5affe004 	addi	r11,r11,-128
  801e84:	003db306 	br	801554 <___vfprintf_internal_r+0x130>
  801e88:	bac00007 	ldb	r11,0(r23)
  801e8c:	01000044 	movi	r4,1
  801e90:	01400ac4 	movi	r5,43
  801e94:	003daf06 	br	801554 <___vfprintf_internal_r+0x130>
  801e98:	d8800617 	ldw	r2,24(sp)
  801e9c:	bf000003 	ldbu	fp,0(r23)
  801ea0:	14000017 	ldw	r16,0(r2)
  801ea4:	10800104 	addi	r2,r2,4
  801ea8:	80028c16 	blt	r16,zero,8028dc <___vfprintf_internal_r+0x14b8>
  801eac:	d8800615 	stw	r2,24(sp)
  801eb0:	e2c03fcc 	andi	r11,fp,255
  801eb4:	5ac0201c 	xori	r11,r11,128
  801eb8:	5affe004 	addi	r11,r11,-128
  801ebc:	003da506 	br	801554 <___vfprintf_internal_r+0x130>
  801ec0:	bac00007 	ldb	r11,0(r23)
  801ec4:	63000054 	ori	r12,r12,1
  801ec8:	003da206 	br	801554 <___vfprintf_internal_r+0x130>
  801ecc:	28803fcc 	andi	r2,r5,255
  801ed0:	1080201c 	xori	r2,r2,128
  801ed4:	10bfe004 	addi	r2,r2,-128
  801ed8:	bf000003 	ldbu	fp,0(r23)
  801edc:	103ff41e 	bne	r2,zero,801eb0 <___vfprintf_internal_r+0xa8c>
  801ee0:	e2c03fcc 	andi	r11,fp,255
  801ee4:	5ac0201c 	xori	r11,r11,128
  801ee8:	01000044 	movi	r4,1
  801eec:	01400804 	movi	r5,32
  801ef0:	5affe004 	addi	r11,r11,-128
  801ef4:	003d9706 	br	801554 <___vfprintf_internal_r+0x130>
  801ef8:	21003fcc 	andi	r4,r4,255
  801efc:	20051e1e 	bne	r4,zero,803378 <___vfprintf_internal_r+0x1f54>
  801f00:	00802074 	movhi	r2,129
  801f04:	1083bd04 	addi	r2,r2,3828
  801f08:	d8800c15 	stw	r2,48(sp)
  801f0c:	6080080c 	andi	r2,r12,32
  801f10:	103f791e 	bne	r2,zero,801cf8 <___vfprintf_internal_r+0x8d4>
  801f14:	d9000617 	ldw	r4,24(sp)
  801f18:	6080040c 	andi	r2,r12,16
  801f1c:	20c00104 	addi	r3,r4,4
  801f20:	10025b1e 	bne	r2,zero,802890 <___vfprintf_internal_r+0x146c>
  801f24:	6080100c 	andi	r2,r12,64
  801f28:	10046026 	beq	r2,zero,8030ac <___vfprintf_internal_r+0x1c88>
  801f2c:	d8800617 	ldw	r2,24(sp)
  801f30:	002b883a 	mov	r21,zero
  801f34:	d8c00615 	stw	r3,24(sp)
  801f38:	1500000b 	ldhu	r20,0(r2)
  801f3c:	003f7306 	br	801d0c <___vfprintf_internal_r+0x8e8>
  801f40:	d8800617 	ldw	r2,24(sp)
  801f44:	d8001345 	stb	zero,77(sp)
  801f48:	14400017 	ldw	r17,0(r2)
  801f4c:	10c00104 	addi	r3,r2,4
  801f50:	88028e26 	beq	r17,zero,80298c <___vfprintf_internal_r+0x1568>
  801f54:	40bfffe0 	cmpeqi	r2,r8,-1
  801f58:	1003c01e 	bne	r2,zero,802e5c <___vfprintf_internal_r+0x1a38>
  801f5c:	400d883a 	mov	r6,r8
  801f60:	000b883a 	mov	r5,zero
  801f64:	8809883a 	mov	r4,r17
  801f68:	d8c00715 	stw	r3,28(sp)
  801f6c:	db000615 	stw	r12,24(sp)
  801f70:	da000415 	stw	r8,16(sp)
  801f74:	0806bf00 	call	806bf0 <memchr>
  801f78:	da000417 	ldw	r8,16(sp)
  801f7c:	db000617 	ldw	r12,24(sp)
  801f80:	d8c00717 	ldw	r3,28(sp)
  801f84:	1004ec26 	beq	r2,zero,803338 <___vfprintf_internal_r+0x1f14>
  801f88:	146bc83a 	sub	r21,r2,r17
  801f8c:	a829883a 	mov	r20,r21
  801f90:	d8c00615 	stw	r3,24(sp)
  801f94:	003de806 	br	801738 <___vfprintf_internal_r+0x314>
  801f98:	bac00007 	ldb	r11,0(r23)
  801f9c:	63000814 	ori	r12,r12,32
  801fa0:	003d6c06 	br	801554 <___vfprintf_internal_r+0x130>
  801fa4:	d8c00617 	ldw	r3,24(sp)
  801fa8:	00800c04 	movi	r2,48
  801fac:	d8801385 	stb	r2,78(sp)
  801fb0:	00801e04 	movi	r2,120
  801fb4:	01002074 	movhi	r4,129
  801fb8:	d88013c5 	stb	r2,79(sp)
  801fbc:	18800104 	addi	r2,r3,4
  801fc0:	d8800615 	stw	r2,24(sp)
  801fc4:	2083bd04 	addi	r2,r4,3828
  801fc8:	d8800c15 	stw	r2,48(sp)
  801fcc:	1d000017 	ldw	r20,0(r3)
  801fd0:	002b883a 	mov	r21,zero
  801fd4:	63000094 	ori	r12,r12,2
  801fd8:	00800084 	movi	r2,2
  801fdc:	07001e04 	movi	fp,120
  801fe0:	003e5c06 	br	801954 <___vfprintf_internal_r+0x530>
  801fe4:	21003fcc 	andi	r4,r4,255
  801fe8:	2004e71e 	bne	r4,zero,803388 <___vfprintf_internal_r+0x1f64>
  801fec:	d9000617 	ldw	r4,24(sp)
  801ff0:	6080080c 	andi	r2,r12,32
  801ff4:	20c00017 	ldw	r3,0(r4)
  801ff8:	21000104 	addi	r4,r4,4
  801ffc:	d9000615 	stw	r4,24(sp)
  802000:	10021e1e 	bne	r2,zero,80287c <___vfprintf_internal_r+0x1458>
  802004:	6080040c 	andi	r2,r12,16
  802008:	1002ae1e 	bne	r2,zero,802ac4 <___vfprintf_internal_r+0x16a0>
  80200c:	6300100c 	andi	r12,r12,64
  802010:	6002ac26 	beq	r12,zero,802ac4 <___vfprintf_internal_r+0x16a0>
  802014:	d8800517 	ldw	r2,20(sp)
  802018:	1880000d 	sth	r2,0(r3)
  80201c:	003d3506 	br	8014f4 <___vfprintf_internal_r+0xd0>
  802020:	bac00007 	ldb	r11,0(r23)
  802024:	58801b18 	cmpnei	r2,r11,108
  802028:	10024926 	beq	r2,zero,802950 <___vfprintf_internal_r+0x152c>
  80202c:	63000414 	ori	r12,r12,16
  802030:	003d4806 	br	801554 <___vfprintf_internal_r+0x130>
  802034:	e2c01990 	cmplti	r11,fp,102
  802038:	5800cb1e 	bne	r11,zero,802368 <___vfprintf_internal_r+0xf44>
  80203c:	d9000917 	ldw	r4,36(sp)
  802040:	d9400a17 	ldw	r5,40(sp)
  802044:	000d883a 	mov	r6,zero
  802048:	000f883a 	mov	r7,zero
  80204c:	d8c00e15 	stw	r3,56(sp)
  802050:	080cf140 	call	80cf14 <__eqdf2>
  802054:	d8c00e17 	ldw	r3,56(sp)
  802058:	1001641e 	bne	r2,zero,8025ec <___vfprintf_internal_r+0x11c8>
  80205c:	d8801b17 	ldw	r2,108(sp)
  802060:	01002074 	movhi	r4,129
  802064:	2103c904 	addi	r4,r4,3876
  802068:	10800044 	addi	r2,r2,1
  80206c:	18c00044 	addi	r3,r3,1
  802070:	b1000015 	stw	r4,0(r22)
  802074:	01000044 	movi	r4,1
  802078:	d8801b15 	stw	r2,108(sp)
  80207c:	b1000115 	stw	r4,4(r22)
  802080:	d8c01c15 	stw	r3,112(sp)
  802084:	10800208 	cmpgei	r2,r2,8
  802088:	1003621e 	bne	r2,zero,802e14 <___vfprintf_internal_r+0x19f0>
  80208c:	b5800204 	addi	r22,r22,8
  802090:	d8801417 	ldw	r2,80(sp)
  802094:	d9000817 	ldw	r4,32(sp)
  802098:	1101e70e 	bge	r2,r4,802838 <___vfprintf_internal_r+0x1414>
  80209c:	d8800d17 	ldw	r2,52(sp)
  8020a0:	d9000b17 	ldw	r4,44(sp)
  8020a4:	b0800015 	stw	r2,0(r22)
  8020a8:	d8801b17 	ldw	r2,108(sp)
  8020ac:	1907883a 	add	r3,r3,r4
  8020b0:	b1000115 	stw	r4,4(r22)
  8020b4:	10800044 	addi	r2,r2,1
  8020b8:	d8801b15 	stw	r2,108(sp)
  8020bc:	d8c01c15 	stw	r3,112(sp)
  8020c0:	10800208 	cmpgei	r2,r2,8
  8020c4:	1002291e 	bne	r2,zero,80296c <___vfprintf_internal_r+0x1548>
  8020c8:	b5800204 	addi	r22,r22,8
  8020cc:	d8800817 	ldw	r2,32(sp)
  8020d0:	157fffc4 	addi	r21,r2,-1
  8020d4:	057dd10e 	bge	zero,r21,80181c <___vfprintf_internal_r+0x3f8>
  8020d8:	01c02074 	movhi	r7,129
  8020dc:	a9000450 	cmplti	r4,r21,17
  8020e0:	d8801b17 	ldw	r2,108(sp)
  8020e4:	39c3ca04 	addi	r7,r7,3880
  8020e8:	2003461e 	bne	r4,zero,802e04 <___vfprintf_internal_r+0x19e0>
  8020ec:	07000404 	movi	fp,16
  8020f0:	3823883a 	mov	r17,r7
  8020f4:	00000406 	br	802108 <___vfprintf_internal_r+0xce4>
  8020f8:	b5800204 	addi	r22,r22,8
  8020fc:	ad7ffc04 	addi	r21,r21,-16
  802100:	a9000448 	cmpgei	r4,r21,17
  802104:	20033e26 	beq	r4,zero,802e00 <___vfprintf_internal_r+0x19dc>
  802108:	10800044 	addi	r2,r2,1
  80210c:	18c00404 	addi	r3,r3,16
  802110:	b4400015 	stw	r17,0(r22)
  802114:	b7000115 	stw	fp,4(r22)
  802118:	d8c01c15 	stw	r3,112(sp)
  80211c:	d8801b15 	stw	r2,108(sp)
  802120:	11000208 	cmpgei	r4,r2,8
  802124:	203ff426 	beq	r4,zero,8020f8 <___vfprintf_internal_r+0xcd4>
  802128:	d9801a04 	addi	r6,sp,104
  80212c:	900b883a 	mov	r5,r18
  802130:	9809883a 	mov	r4,r19
  802134:	08089bc0 	call	8089bc <__sprint_r>
  802138:	103dc91e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  80213c:	d8c01c17 	ldw	r3,112(sp)
  802140:	d8801b17 	ldw	r2,108(sp)
  802144:	dd802704 	addi	r22,sp,156
  802148:	003fec06 	br	8020fc <___vfprintf_internal_r+0xcd8>
  80214c:	8519c83a 	sub	r12,r16,r20
  802150:	033da30e 	bge	zero,r12,8017e0 <___vfprintf_internal_r+0x3bc>
  802154:	01c02074 	movhi	r7,129
  802158:	61000450 	cmplti	r4,r12,17
  80215c:	d8801b17 	ldw	r2,108(sp)
  802160:	39c3ca04 	addi	r7,r7,3880
  802164:	2000281e 	bne	r4,zero,802208 <___vfprintf_internal_r+0xde4>
  802168:	dc400e15 	stw	r17,56(sp)
  80216c:	dc000f15 	stw	r16,60(sp)
  802170:	b009883a 	mov	r4,r22
  802174:	03400404 	movi	r13,16
  802178:	a02d883a 	mov	r22,r20
  80217c:	6021883a 	mov	r16,r12
  802180:	4029883a 	mov	r20,r8
  802184:	3823883a 	mov	r17,r7
  802188:	00000406 	br	80219c <___vfprintf_internal_r+0xd78>
  80218c:	843ffc04 	addi	r16,r16,-16
  802190:	81400448 	cmpgei	r5,r16,17
  802194:	21000204 	addi	r4,r4,8
  802198:	28001426 	beq	r5,zero,8021ec <___vfprintf_internal_r+0xdc8>
  80219c:	10800044 	addi	r2,r2,1
  8021a0:	18c00404 	addi	r3,r3,16
  8021a4:	24400015 	stw	r17,0(r4)
  8021a8:	23400115 	stw	r13,4(r4)
  8021ac:	d8c01c15 	stw	r3,112(sp)
  8021b0:	d8801b15 	stw	r2,108(sp)
  8021b4:	11400208 	cmpgei	r5,r2,8
  8021b8:	283ff426 	beq	r5,zero,80218c <___vfprintf_internal_r+0xd68>
  8021bc:	d9801a04 	addi	r6,sp,104
  8021c0:	900b883a 	mov	r5,r18
  8021c4:	9809883a 	mov	r4,r19
  8021c8:	08089bc0 	call	8089bc <__sprint_r>
  8021cc:	103da41e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8021d0:	843ffc04 	addi	r16,r16,-16
  8021d4:	81400448 	cmpgei	r5,r16,17
  8021d8:	d8c01c17 	ldw	r3,112(sp)
  8021dc:	d8801b17 	ldw	r2,108(sp)
  8021e0:	d9002704 	addi	r4,sp,156
  8021e4:	03400404 	movi	r13,16
  8021e8:	283fec1e 	bne	r5,zero,80219c <___vfprintf_internal_r+0xd78>
  8021ec:	8019883a 	mov	r12,r16
  8021f0:	880f883a 	mov	r7,r17
  8021f4:	dc000f17 	ldw	r16,60(sp)
  8021f8:	dc400e17 	ldw	r17,56(sp)
  8021fc:	a011883a 	mov	r8,r20
  802200:	b029883a 	mov	r20,r22
  802204:	202d883a 	mov	r22,r4
  802208:	10800044 	addi	r2,r2,1
  80220c:	1b07883a 	add	r3,r3,r12
  802210:	d8801b15 	stw	r2,108(sp)
  802214:	b1c00015 	stw	r7,0(r22)
  802218:	b3000115 	stw	r12,4(r22)
  80221c:	d8c01c15 	stw	r3,112(sp)
  802220:	10800208 	cmpgei	r2,r2,8
  802224:	1003031e 	bne	r2,zero,802e34 <___vfprintf_internal_r+0x1a10>
  802228:	4551c83a 	sub	r8,r8,r21
  80222c:	b5800204 	addi	r22,r22,8
  802230:	023d6d0e 	bge	zero,r8,8017e8 <___vfprintf_internal_r+0x3c4>
  802234:	01c02074 	movhi	r7,129
  802238:	41000450 	cmplti	r4,r8,17
  80223c:	d8801b17 	ldw	r2,108(sp)
  802240:	39c3ca04 	addi	r7,r7,3880
  802244:	2000221e 	bne	r4,zero,8022d0 <___vfprintf_internal_r+0xeac>
  802248:	dc400e15 	stw	r17,56(sp)
  80224c:	dc000f15 	stw	r16,60(sp)
  802250:	03000404 	movi	r12,16
  802254:	4021883a 	mov	r16,r8
  802258:	3823883a 	mov	r17,r7
  80225c:	00000406 	br	802270 <___vfprintf_internal_r+0xe4c>
  802260:	843ffc04 	addi	r16,r16,-16
  802264:	81000448 	cmpgei	r4,r16,17
  802268:	b5800204 	addi	r22,r22,8
  80226c:	20001426 	beq	r4,zero,8022c0 <___vfprintf_internal_r+0xe9c>
  802270:	10800044 	addi	r2,r2,1
  802274:	18c00404 	addi	r3,r3,16
  802278:	b4400015 	stw	r17,0(r22)
  80227c:	b3000115 	stw	r12,4(r22)
  802280:	d8c01c15 	stw	r3,112(sp)
  802284:	d8801b15 	stw	r2,108(sp)
  802288:	11000208 	cmpgei	r4,r2,8
  80228c:	203ff426 	beq	r4,zero,802260 <___vfprintf_internal_r+0xe3c>
  802290:	d9801a04 	addi	r6,sp,104
  802294:	900b883a 	mov	r5,r18
  802298:	9809883a 	mov	r4,r19
  80229c:	08089bc0 	call	8089bc <__sprint_r>
  8022a0:	103d6f1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8022a4:	843ffc04 	addi	r16,r16,-16
  8022a8:	81000448 	cmpgei	r4,r16,17
  8022ac:	d8c01c17 	ldw	r3,112(sp)
  8022b0:	d8801b17 	ldw	r2,108(sp)
  8022b4:	dd802704 	addi	r22,sp,156
  8022b8:	03000404 	movi	r12,16
  8022bc:	203fec1e 	bne	r4,zero,802270 <___vfprintf_internal_r+0xe4c>
  8022c0:	8011883a 	mov	r8,r16
  8022c4:	880f883a 	mov	r7,r17
  8022c8:	dc000f17 	ldw	r16,60(sp)
  8022cc:	dc400e17 	ldw	r17,56(sp)
  8022d0:	10800044 	addi	r2,r2,1
  8022d4:	1a07883a 	add	r3,r3,r8
  8022d8:	d8801b15 	stw	r2,108(sp)
  8022dc:	b1c00015 	stw	r7,0(r22)
  8022e0:	b2000115 	stw	r8,4(r22)
  8022e4:	d8c01c15 	stw	r3,112(sp)
  8022e8:	10800208 	cmpgei	r2,r2,8
  8022ec:	10014a1e 	bne	r2,zero,802818 <___vfprintf_internal_r+0x13f4>
  8022f0:	b5800204 	addi	r22,r22,8
  8022f4:	003d3c06 	br	8017e8 <___vfprintf_internal_r+0x3c4>
  8022f8:	10c00060 	cmpeqi	r3,r2,1
  8022fc:	1803bc1e 	bne	r3,zero,8031f0 <___vfprintf_internal_r+0x1dcc>
  802300:	108000a0 	cmpeqi	r2,r2,2
  802304:	db000417 	ldw	r12,16(sp)
  802308:	103ea826 	beq	r2,zero,801dac <___vfprintf_internal_r+0x988>
  80230c:	d9000c17 	ldw	r4,48(sp)
  802310:	dc402704 	addi	r17,sp,156
  802314:	a08003cc 	andi	r2,r20,15
  802318:	a806973a 	slli	r3,r21,28
  80231c:	a028d13a 	srli	r20,r20,4
  802320:	2085883a 	add	r2,r4,r2
  802324:	10800003 	ldbu	r2,0(r2)
  802328:	a82ad13a 	srli	r21,r21,4
  80232c:	1d28b03a 	or	r20,r3,r20
  802330:	88bfffc5 	stb	r2,-1(r17)
  802334:	a544b03a 	or	r2,r20,r21
  802338:	8c7fffc4 	addi	r17,r17,-1
  80233c:	103ff51e 	bne	r2,zero,802314 <___vfprintf_internal_r+0xef0>
  802340:	d8802704 	addi	r2,sp,156
  802344:	146bc83a 	sub	r21,r2,r17
  802348:	db000415 	stw	r12,16(sp)
  80234c:	003e4c06 	br	801c80 <___vfprintf_internal_r+0x85c>
  802350:	d9801a04 	addi	r6,sp,104
  802354:	900b883a 	mov	r5,r18
  802358:	9809883a 	mov	r4,r19
  80235c:	08089bc0 	call	8089bc <__sprint_r>
  802360:	103d3926 	beq	r2,zero,801848 <___vfprintf_internal_r+0x424>
  802364:	003d3e06 	br	801860 <___vfprintf_internal_r+0x43c>
  802368:	d8800817 	ldw	r2,32(sp)
  80236c:	da001b17 	ldw	r8,108(sp)
  802370:	18c00044 	addi	r3,r3,1
  802374:	10800088 	cmpgei	r2,r2,2
  802378:	45400044 	addi	r21,r8,1
  80237c:	b7000204 	addi	fp,r22,8
  802380:	1000f826 	beq	r2,zero,802764 <___vfprintf_internal_r+0x1340>
  802384:	00800044 	movi	r2,1
  802388:	b0800115 	stw	r2,4(r22)
  80238c:	b4400015 	stw	r17,0(r22)
  802390:	d8c01c15 	stw	r3,112(sp)
  802394:	dd401b15 	stw	r21,108(sp)
  802398:	a8800210 	cmplti	r2,r21,8
  80239c:	1001cc26 	beq	r2,zero,802ad0 <___vfprintf_internal_r+0x16ac>
  8023a0:	d8800b17 	ldw	r2,44(sp)
  8023a4:	d9000d17 	ldw	r4,52(sp)
  8023a8:	ad400044 	addi	r21,r21,1
  8023ac:	1887883a 	add	r3,r3,r2
  8023b0:	e0800115 	stw	r2,4(fp)
  8023b4:	e1000015 	stw	r4,0(fp)
  8023b8:	d8c01c15 	stw	r3,112(sp)
  8023bc:	dd401b15 	stw	r21,108(sp)
  8023c0:	a8800208 	cmpgei	r2,r21,8
  8023c4:	1001cb1e 	bne	r2,zero,802af4 <___vfprintf_internal_r+0x16d0>
  8023c8:	e7000204 	addi	fp,fp,8
  8023cc:	d9000917 	ldw	r4,36(sp)
  8023d0:	d9400a17 	ldw	r5,40(sp)
  8023d4:	aa000044 	addi	r8,r21,1
  8023d8:	000d883a 	mov	r6,zero
  8023dc:	000f883a 	mov	r7,zero
  8023e0:	d8c00e15 	stw	r3,56(sp)
  8023e4:	da000715 	stw	r8,28(sp)
  8023e8:	080cf140 	call	80cf14 <__eqdf2>
  8023ec:	d8c00817 	ldw	r3,32(sp)
  8023f0:	da000717 	ldw	r8,28(sp)
  8023f4:	e5800204 	addi	r22,fp,8
  8023f8:	1affffc4 	addi	r11,r3,-1
  8023fc:	d8c00e17 	ldw	r3,56(sp)
  802400:	1000e526 	beq	r2,zero,802798 <___vfprintf_internal_r+0x1374>
  802404:	8a400044 	addi	r9,r17,1
  802408:	1ac7883a 	add	r3,r3,r11
  80240c:	da001b15 	stw	r8,108(sp)
  802410:	e2400015 	stw	r9,0(fp)
  802414:	e2c00115 	stw	r11,4(fp)
  802418:	d8c01c15 	stw	r3,112(sp)
  80241c:	42000208 	cmpgei	r8,r8,8
  802420:	40013e1e 	bne	r8,zero,80291c <___vfprintf_internal_r+0x14f8>
  802424:	e0800404 	addi	r2,fp,16
  802428:	aa000084 	addi	r8,r21,2
  80242c:	b039883a 	mov	fp,r22
  802430:	102d883a 	mov	r22,r2
  802434:	d9001017 	ldw	r4,64(sp)
  802438:	d8801644 	addi	r2,sp,89
  80243c:	da001b15 	stw	r8,108(sp)
  802440:	20c7883a 	add	r3,r4,r3
  802444:	e0800015 	stw	r2,0(fp)
  802448:	e1000115 	stw	r4,4(fp)
  80244c:	d8c01c15 	stw	r3,112(sp)
  802450:	42000210 	cmplti	r8,r8,8
  802454:	403cf11e 	bne	r8,zero,80181c <___vfprintf_internal_r+0x3f8>
  802458:	d9801a04 	addi	r6,sp,104
  80245c:	900b883a 	mov	r5,r18
  802460:	9809883a 	mov	r4,r19
  802464:	08089bc0 	call	8089bc <__sprint_r>
  802468:	103cfd1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  80246c:	d8c01c17 	ldw	r3,112(sp)
  802470:	dd802704 	addi	r22,sp,156
  802474:	003ce906 	br	80181c <___vfprintf_internal_r+0x3f8>
  802478:	db000417 	ldw	r12,16(sp)
  80247c:	003e4706 	br	801d9c <___vfprintf_internal_r+0x978>
  802480:	03002074 	movhi	r12,129
  802484:	39000450 	cmplti	r4,r7,17
  802488:	d8801b17 	ldw	r2,108(sp)
  80248c:	6303ce04 	addi	r12,r12,3896
  802490:	2000321e 	bne	r4,zero,80255c <___vfprintf_internal_r+0x1138>
  802494:	dc401115 	stw	r17,68(sp)
  802498:	b009883a 	mov	r4,r22
  80249c:	9023883a 	mov	r17,r18
  8024a0:	a82d883a 	mov	r22,r21
  8024a4:	ddc01215 	stw	r23,72(sp)
  8024a8:	03c00404 	movi	r15,16
  8024ac:	a02f883a 	mov	r23,r20
  8024b0:	db800e15 	stw	r14,56(sp)
  8024b4:	8029883a 	mov	r20,r16
  8024b8:	db400f15 	stw	r13,60(sp)
  8024bc:	402b883a 	mov	r21,r8
  8024c0:	3821883a 	mov	r16,r7
  8024c4:	6025883a 	mov	r18,r12
  8024c8:	00000406 	br	8024dc <___vfprintf_internal_r+0x10b8>
  8024cc:	843ffc04 	addi	r16,r16,-16
  8024d0:	81800448 	cmpgei	r6,r16,17
  8024d4:	21000204 	addi	r4,r4,8
  8024d8:	30001426 	beq	r6,zero,80252c <___vfprintf_internal_r+0x1108>
  8024dc:	10800044 	addi	r2,r2,1
  8024e0:	18c00404 	addi	r3,r3,16
  8024e4:	24800015 	stw	r18,0(r4)
  8024e8:	23c00115 	stw	r15,4(r4)
  8024ec:	d8c01c15 	stw	r3,112(sp)
  8024f0:	d8801b15 	stw	r2,108(sp)
  8024f4:	11800208 	cmpgei	r6,r2,8
  8024f8:	303ff426 	beq	r6,zero,8024cc <___vfprintf_internal_r+0x10a8>
  8024fc:	d9801a04 	addi	r6,sp,104
  802500:	880b883a 	mov	r5,r17
  802504:	9809883a 	mov	r4,r19
  802508:	08089bc0 	call	8089bc <__sprint_r>
  80250c:	1001b91e 	bne	r2,zero,802bf4 <___vfprintf_internal_r+0x17d0>
  802510:	843ffc04 	addi	r16,r16,-16
  802514:	81800448 	cmpgei	r6,r16,17
  802518:	d8c01c17 	ldw	r3,112(sp)
  80251c:	d8801b17 	ldw	r2,108(sp)
  802520:	d9002704 	addi	r4,sp,156
  802524:	03c00404 	movi	r15,16
  802528:	303fec1e 	bne	r6,zero,8024dc <___vfprintf_internal_r+0x10b8>
  80252c:	800f883a 	mov	r7,r16
  802530:	9019883a 	mov	r12,r18
  802534:	a021883a 	mov	r16,r20
  802538:	8825883a 	mov	r18,r17
  80253c:	b829883a 	mov	r20,r23
  802540:	db800e17 	ldw	r14,56(sp)
  802544:	db400f17 	ldw	r13,60(sp)
  802548:	ddc01217 	ldw	r23,72(sp)
  80254c:	dc401117 	ldw	r17,68(sp)
  802550:	a811883a 	mov	r8,r21
  802554:	b02b883a 	mov	r21,r22
  802558:	202d883a 	mov	r22,r4
  80255c:	10800044 	addi	r2,r2,1
  802560:	19c7883a 	add	r3,r3,r7
  802564:	d8801b15 	stw	r2,108(sp)
  802568:	b3000015 	stw	r12,0(r22)
  80256c:	b1c00115 	stw	r7,4(r22)
  802570:	d8c01c15 	stw	r3,112(sp)
  802574:	10800208 	cmpgei	r2,r2,8
  802578:	1001671e 	bne	r2,zero,802b18 <___vfprintf_internal_r+0x16f4>
  80257c:	b5800204 	addi	r22,r22,8
  802580:	003c7a06 	br	80176c <___vfprintf_internal_r+0x348>
  802584:	d9801a04 	addi	r6,sp,104
  802588:	900b883a 	mov	r5,r18
  80258c:	9809883a 	mov	r4,r19
  802590:	da001115 	stw	r8,68(sp)
  802594:	db400f15 	stw	r13,60(sp)
  802598:	db800e15 	stw	r14,56(sp)
  80259c:	08089bc0 	call	8089bc <__sprint_r>
  8025a0:	103caf1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8025a4:	d8c01c17 	ldw	r3,112(sp)
  8025a8:	da001117 	ldw	r8,68(sp)
  8025ac:	db400f17 	ldw	r13,60(sp)
  8025b0:	db800e17 	ldw	r14,56(sp)
  8025b4:	dd802704 	addi	r22,sp,156
  8025b8:	003c7a06 	br	8017a4 <___vfprintf_internal_r+0x380>
  8025bc:	d9801a04 	addi	r6,sp,104
  8025c0:	900b883a 	mov	r5,r18
  8025c4:	9809883a 	mov	r4,r19
  8025c8:	da000f15 	stw	r8,60(sp)
  8025cc:	db400e15 	stw	r13,56(sp)
  8025d0:	08089bc0 	call	8089bc <__sprint_r>
  8025d4:	103ca21e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8025d8:	d8c01c17 	ldw	r3,112(sp)
  8025dc:	da000f17 	ldw	r8,60(sp)
  8025e0:	db400e17 	ldw	r13,56(sp)
  8025e4:	dd802704 	addi	r22,sp,156
  8025e8:	003c7b06 	br	8017d8 <___vfprintf_internal_r+0x3b4>
  8025ec:	d9401417 	ldw	r5,80(sp)
  8025f0:	0141570e 	bge	zero,r5,802b50 <___vfprintf_internal_r+0x172c>
  8025f4:	d8800717 	ldw	r2,28(sp)
  8025f8:	d9000817 	ldw	r4,32(sp)
  8025fc:	102b883a 	mov	r21,r2
  802600:	2080b916 	blt	r4,r2,8028e8 <___vfprintf_internal_r+0x14c4>
  802604:	05400a0e 	bge	zero,r21,802630 <___vfprintf_internal_r+0x120c>
  802608:	d8801b17 	ldw	r2,108(sp)
  80260c:	1d47883a 	add	r3,r3,r21
  802610:	b4400015 	stw	r17,0(r22)
  802614:	10800044 	addi	r2,r2,1
  802618:	d8801b15 	stw	r2,108(sp)
  80261c:	b5400115 	stw	r21,4(r22)
  802620:	d8c01c15 	stw	r3,112(sp)
  802624:	10800208 	cmpgei	r2,r2,8
  802628:	10032d1e 	bne	r2,zero,8032e0 <___vfprintf_internal_r+0x1ebc>
  80262c:	b5800204 	addi	r22,r22,8
  802630:	a800c516 	blt	r21,zero,802948 <___vfprintf_internal_r+0x1524>
  802634:	d8800717 	ldw	r2,28(sp)
  802638:	156bc83a 	sub	r21,r2,r21
  80263c:	0540db16 	blt	zero,r21,8029ac <___vfprintf_internal_r+0x1588>
  802640:	dd401417 	ldw	r21,80(sp)
  802644:	d8800817 	ldw	r2,32(sp)
  802648:	a880aa0e 	bge	r21,r2,8028f4 <___vfprintf_internal_r+0x14d0>
  80264c:	d8800d17 	ldw	r2,52(sp)
  802650:	d9000b17 	ldw	r4,44(sp)
  802654:	b0800015 	stw	r2,0(r22)
  802658:	d8801b17 	ldw	r2,108(sp)
  80265c:	1907883a 	add	r3,r3,r4
  802660:	b1000115 	stw	r4,4(r22)
  802664:	10800044 	addi	r2,r2,1
  802668:	d8801b15 	stw	r2,108(sp)
  80266c:	d8c01c15 	stw	r3,112(sp)
  802670:	10800208 	cmpgei	r2,r2,8
  802674:	1003111e 	bne	r2,zero,8032bc <___vfprintf_internal_r+0x1e98>
  802678:	b5800204 	addi	r22,r22,8
  80267c:	d9000817 	ldw	r4,32(sp)
  802680:	d9400717 	ldw	r5,28(sp)
  802684:	2545c83a 	sub	r2,r4,r21
  802688:	2149c83a 	sub	r4,r4,r5
  80268c:	102b883a 	mov	r21,r2
  802690:	2080010e 	bge	r4,r2,802698 <___vfprintf_internal_r+0x1274>
  802694:	202b883a 	mov	r21,r4
  802698:	05400c0e 	bge	zero,r21,8026cc <___vfprintf_internal_r+0x12a8>
  80269c:	d9000717 	ldw	r4,28(sp)
  8026a0:	1d47883a 	add	r3,r3,r21
  8026a4:	b5400115 	stw	r21,4(r22)
  8026a8:	8913883a 	add	r9,r17,r4
  8026ac:	d9001b17 	ldw	r4,108(sp)
  8026b0:	b2400015 	stw	r9,0(r22)
  8026b4:	d8c01c15 	stw	r3,112(sp)
  8026b8:	21000044 	addi	r4,r4,1
  8026bc:	d9001b15 	stw	r4,108(sp)
  8026c0:	21000208 	cmpgei	r4,r4,8
  8026c4:	2003111e 	bne	r4,zero,80330c <___vfprintf_internal_r+0x1ee8>
  8026c8:	b5800204 	addi	r22,r22,8
  8026cc:	a800010e 	bge	r21,zero,8026d4 <___vfprintf_internal_r+0x12b0>
  8026d0:	002b883a 	mov	r21,zero
  8026d4:	156bc83a 	sub	r21,r2,r21
  8026d8:	057c500e 	bge	zero,r21,80181c <___vfprintf_internal_r+0x3f8>
  8026dc:	01c02074 	movhi	r7,129
  8026e0:	a9000450 	cmplti	r4,r21,17
  8026e4:	d8801b17 	ldw	r2,108(sp)
  8026e8:	39c3ca04 	addi	r7,r7,3880
  8026ec:	2001c51e 	bne	r4,zero,802e04 <___vfprintf_internal_r+0x19e0>
  8026f0:	07000404 	movi	fp,16
  8026f4:	3823883a 	mov	r17,r7
  8026f8:	00000406 	br	80270c <___vfprintf_internal_r+0x12e8>
  8026fc:	b5800204 	addi	r22,r22,8
  802700:	ad7ffc04 	addi	r21,r21,-16
  802704:	a9000448 	cmpgei	r4,r21,17
  802708:	2001bd26 	beq	r4,zero,802e00 <___vfprintf_internal_r+0x19dc>
  80270c:	10800044 	addi	r2,r2,1
  802710:	18c00404 	addi	r3,r3,16
  802714:	b4400015 	stw	r17,0(r22)
  802718:	b7000115 	stw	fp,4(r22)
  80271c:	d8c01c15 	stw	r3,112(sp)
  802720:	d8801b15 	stw	r2,108(sp)
  802724:	11000208 	cmpgei	r4,r2,8
  802728:	203ff426 	beq	r4,zero,8026fc <___vfprintf_internal_r+0x12d8>
  80272c:	d9801a04 	addi	r6,sp,104
  802730:	900b883a 	mov	r5,r18
  802734:	9809883a 	mov	r4,r19
  802738:	08089bc0 	call	8089bc <__sprint_r>
  80273c:	103c481e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802740:	d8c01c17 	ldw	r3,112(sp)
  802744:	d8801b17 	ldw	r2,108(sp)
  802748:	dd802704 	addi	r22,sp,156
  80274c:	003fec06 	br	802700 <___vfprintf_internal_r+0x12dc>
  802750:	4002a71e 	bne	r8,zero,8031f0 <___vfprintf_internal_r+0x1dcc>
  802754:	0011883a 	mov	r8,zero
  802758:	002b883a 	mov	r21,zero
  80275c:	dc402704 	addi	r17,sp,156
  802760:	003d4706 	br	801c80 <___vfprintf_internal_r+0x85c>
  802764:	d8800417 	ldw	r2,16(sp)
  802768:	1080004c 	andi	r2,r2,1
  80276c:	103f051e 	bne	r2,zero,802384 <___vfprintf_internal_r+0xf60>
  802770:	00800044 	movi	r2,1
  802774:	dd401b15 	stw	r21,108(sp)
  802778:	b4400015 	stw	r17,0(r22)
  80277c:	b0800115 	stw	r2,4(r22)
  802780:	d8c01c15 	stw	r3,112(sp)
  802784:	ad400208 	cmpgei	r21,r21,8
  802788:	a800641e 	bne	r21,zero,80291c <___vfprintf_internal_r+0x14f8>
  80278c:	42000084 	addi	r8,r8,2
  802790:	b5800404 	addi	r22,r22,16
  802794:	003f2706 	br	802434 <___vfprintf_internal_r+0x1010>
  802798:	02ff260e 	bge	zero,r11,802434 <___vfprintf_internal_r+0x1010>
  80279c:	58800450 	cmplti	r2,r11,17
  8027a0:	01c02074 	movhi	r7,129
  8027a4:	10034c1e 	bne	r2,zero,8034d8 <___vfprintf_internal_r+0x20b4>
  8027a8:	39c3ca04 	addi	r7,r7,3880
  8027ac:	dc000715 	stw	r16,28(sp)
  8027b0:	05800404 	movi	r22,16
  8027b4:	5823883a 	mov	r17,r11
  8027b8:	402b883a 	mov	r21,r8
  8027bc:	3821883a 	mov	r16,r7
  8027c0:	00000506 	br	8027d8 <___vfprintf_internal_r+0x13b4>
  8027c4:	e7000204 	addi	fp,fp,8
  8027c8:	8c7ffc04 	addi	r17,r17,-16
  8027cc:	88800448 	cmpgei	r2,r17,17
  8027d0:	1001d626 	beq	r2,zero,802f2c <___vfprintf_internal_r+0x1b08>
  8027d4:	ad400044 	addi	r21,r21,1
  8027d8:	18c00404 	addi	r3,r3,16
  8027dc:	e4000015 	stw	r16,0(fp)
  8027e0:	e5800115 	stw	r22,4(fp)
  8027e4:	d8c01c15 	stw	r3,112(sp)
  8027e8:	dd401b15 	stw	r21,108(sp)
  8027ec:	a8800208 	cmpgei	r2,r21,8
  8027f0:	103ff426 	beq	r2,zero,8027c4 <___vfprintf_internal_r+0x13a0>
  8027f4:	d9801a04 	addi	r6,sp,104
  8027f8:	900b883a 	mov	r5,r18
  8027fc:	9809883a 	mov	r4,r19
  802800:	08089bc0 	call	8089bc <__sprint_r>
  802804:	103c161e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802808:	dd401b17 	ldw	r21,108(sp)
  80280c:	d8c01c17 	ldw	r3,112(sp)
  802810:	df002704 	addi	fp,sp,156
  802814:	003fec06 	br	8027c8 <___vfprintf_internal_r+0x13a4>
  802818:	d9801a04 	addi	r6,sp,104
  80281c:	900b883a 	mov	r5,r18
  802820:	9809883a 	mov	r4,r19
  802824:	08089bc0 	call	8089bc <__sprint_r>
  802828:	103c0d1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  80282c:	d8c01c17 	ldw	r3,112(sp)
  802830:	dd802704 	addi	r22,sp,156
  802834:	003bec06 	br	8017e8 <___vfprintf_internal_r+0x3c4>
  802838:	d8800417 	ldw	r2,16(sp)
  80283c:	1080004c 	andi	r2,r2,1
  802840:	103bf626 	beq	r2,zero,80181c <___vfprintf_internal_r+0x3f8>
  802844:	003e1506 	br	80209c <___vfprintf_internal_r+0xc78>
  802848:	dc402704 	addi	r17,sp,156
  80284c:	003d0c06 	br	801c80 <___vfprintf_internal_r+0x85c>
  802850:	00800c04 	movi	r2,48
  802854:	d8801385 	stb	r2,78(sp)
  802858:	df0013c5 	stb	fp,79(sp)
  80285c:	63000094 	ori	r12,r12,2
  802860:	00800084 	movi	r2,2
  802864:	003c3b06 	br	801954 <___vfprintf_internal_r+0x530>
  802868:	25000017 	ldw	r20,0(r4)
  80286c:	002b883a 	mov	r21,zero
  802870:	d8c00615 	stw	r3,24(sp)
  802874:	00800044 	movi	r2,1
  802878:	003c3606 	br	801954 <___vfprintf_internal_r+0x530>
  80287c:	d9000517 	ldw	r4,20(sp)
  802880:	2005d7fa 	srai	r2,r4,31
  802884:	19000015 	stw	r4,0(r3)
  802888:	18800115 	stw	r2,4(r3)
  80288c:	003b1906 	br	8014f4 <___vfprintf_internal_r+0xd0>
  802890:	25000017 	ldw	r20,0(r4)
  802894:	002b883a 	mov	r21,zero
  802898:	d8c00615 	stw	r3,24(sp)
  80289c:	003d1b06 	br	801d0c <___vfprintf_internal_r+0x8e8>
  8028a0:	25000017 	ldw	r20,0(r4)
  8028a4:	002b883a 	mov	r21,zero
  8028a8:	d8c00615 	stw	r3,24(sp)
  8028ac:	0005883a 	mov	r2,zero
  8028b0:	003c2806 	br	801954 <___vfprintf_internal_r+0x530>
  8028b4:	18800017 	ldw	r2,0(r3)
  8028b8:	d8800915 	stw	r2,36(sp)
  8028bc:	18800117 	ldw	r2,4(r3)
  8028c0:	d8800a15 	stw	r2,40(sp)
  8028c4:	003c5906 	br	801a2c <___vfprintf_internal_r+0x608>
  8028c8:	25000017 	ldw	r20,0(r4)
  8028cc:	d8c00615 	stw	r3,24(sp)
  8028d0:	a02bd7fa 	srai	r21,r20,31
  8028d4:	a805883a 	mov	r2,r21
  8028d8:	003cd706 	br	801c38 <___vfprintf_internal_r+0x814>
  8028dc:	0421c83a 	sub	r16,zero,r16
  8028e0:	d8800615 	stw	r2,24(sp)
  8028e4:	003d6306 	br	801e74 <___vfprintf_internal_r+0xa50>
  8028e8:	202b883a 	mov	r21,r4
  8028ec:	057f4616 	blt	zero,r21,802608 <___vfprintf_internal_r+0x11e4>
  8028f0:	003f4f06 	br	802630 <___vfprintf_internal_r+0x120c>
  8028f4:	d8800417 	ldw	r2,16(sp)
  8028f8:	1080004c 	andi	r2,r2,1
  8028fc:	103f531e 	bne	r2,zero,80264c <___vfprintf_internal_r+0x1228>
  802900:	d9000817 	ldw	r4,32(sp)
  802904:	d9400717 	ldw	r5,28(sp)
  802908:	2545c83a 	sub	r2,r4,r21
  80290c:	216bc83a 	sub	r21,r4,r5
  802910:	157f6e0e 	bge	r2,r21,8026cc <___vfprintf_internal_r+0x12a8>
  802914:	102b883a 	mov	r21,r2
  802918:	003f6c06 	br	8026cc <___vfprintf_internal_r+0x12a8>
  80291c:	d9801a04 	addi	r6,sp,104
  802920:	900b883a 	mov	r5,r18
  802924:	9809883a 	mov	r4,r19
  802928:	08089bc0 	call	8089bc <__sprint_r>
  80292c:	103bcc1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802930:	da001b17 	ldw	r8,108(sp)
  802934:	d8c01c17 	ldw	r3,112(sp)
  802938:	dd802904 	addi	r22,sp,164
  80293c:	42000044 	addi	r8,r8,1
  802940:	df002704 	addi	fp,sp,156
  802944:	003ebb06 	br	802434 <___vfprintf_internal_r+0x1010>
  802948:	002b883a 	mov	r21,zero
  80294c:	003f3906 	br	802634 <___vfprintf_internal_r+0x1210>
  802950:	bf000043 	ldbu	fp,1(r23)
  802954:	63000814 	ori	r12,r12,32
  802958:	bdc00044 	addi	r23,r23,1
  80295c:	e2c03fcc 	andi	r11,fp,255
  802960:	5ac0201c 	xori	r11,r11,128
  802964:	5affe004 	addi	r11,r11,-128
  802968:	003afa06 	br	801554 <___vfprintf_internal_r+0x130>
  80296c:	d9801a04 	addi	r6,sp,104
  802970:	900b883a 	mov	r5,r18
  802974:	9809883a 	mov	r4,r19
  802978:	08089bc0 	call	8089bc <__sprint_r>
  80297c:	103bb81e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802980:	d8c01c17 	ldw	r3,112(sp)
  802984:	dd802704 	addi	r22,sp,156
  802988:	003dd006 	br	8020cc <___vfprintf_internal_r+0xca8>
  80298c:	408001f0 	cmpltui	r2,r8,7
  802990:	402b883a 	mov	r21,r8
  802994:	1001e726 	beq	r2,zero,803134 <___vfprintf_internal_r+0x1d10>
  802998:	04402074 	movhi	r17,129
  80299c:	a829883a 	mov	r20,r21
  8029a0:	d8c00615 	stw	r3,24(sp)
  8029a4:	8c43c704 	addi	r17,r17,3868
  8029a8:	003b6306 	br	801738 <___vfprintf_internal_r+0x314>
  8029ac:	01c02074 	movhi	r7,129
  8029b0:	a9000450 	cmplti	r4,r21,17
  8029b4:	d8801b17 	ldw	r2,108(sp)
  8029b8:	39c3ca04 	addi	r7,r7,3880
  8029bc:	2001c21e 	bne	r4,zero,8030c8 <___vfprintf_internal_r+0x1ca4>
  8029c0:	dc000e15 	stw	r16,56(sp)
  8029c4:	07000404 	movi	fp,16
  8029c8:	3821883a 	mov	r16,r7
  8029cc:	00000406 	br	8029e0 <___vfprintf_internal_r+0x15bc>
  8029d0:	b5800204 	addi	r22,r22,8
  8029d4:	ad7ffc04 	addi	r21,r21,-16
  8029d8:	a9000448 	cmpgei	r4,r21,17
  8029dc:	2001b826 	beq	r4,zero,8030c0 <___vfprintf_internal_r+0x1c9c>
  8029e0:	10800044 	addi	r2,r2,1
  8029e4:	18c00404 	addi	r3,r3,16
  8029e8:	b4000015 	stw	r16,0(r22)
  8029ec:	b7000115 	stw	fp,4(r22)
  8029f0:	d8c01c15 	stw	r3,112(sp)
  8029f4:	d8801b15 	stw	r2,108(sp)
  8029f8:	11000208 	cmpgei	r4,r2,8
  8029fc:	203ff426 	beq	r4,zero,8029d0 <___vfprintf_internal_r+0x15ac>
  802a00:	d9801a04 	addi	r6,sp,104
  802a04:	900b883a 	mov	r5,r18
  802a08:	9809883a 	mov	r4,r19
  802a0c:	08089bc0 	call	8089bc <__sprint_r>
  802a10:	103b931e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802a14:	d8c01c17 	ldw	r3,112(sp)
  802a18:	d8801b17 	ldw	r2,108(sp)
  802a1c:	dd802704 	addi	r22,sp,156
  802a20:	003fec06 	br	8029d4 <___vfprintf_internal_r+0x15b0>
  802a24:	dc402704 	addi	r17,sp,156
  802a28:	a805883a 	mov	r2,r21
  802a2c:	dc000715 	stw	r16,28(sp)
  802a30:	902b883a 	mov	r21,r18
  802a34:	8821883a 	mov	r16,r17
  802a38:	db000415 	stw	r12,16(sp)
  802a3c:	a023883a 	mov	r17,r20
  802a40:	da000e15 	stw	r8,56(sp)
  802a44:	9829883a 	mov	r20,r19
  802a48:	1025883a 	mov	r18,r2
  802a4c:	6827883a 	mov	r19,r13
  802a50:	8809883a 	mov	r4,r17
  802a54:	900b883a 	mov	r5,r18
  802a58:	01800284 	movi	r6,10
  802a5c:	000f883a 	mov	r7,zero
  802a60:	080b57c0 	call	80b57c <__umoddi3>
  802a64:	10800c04 	addi	r2,r2,48
  802a68:	8809883a 	mov	r4,r17
  802a6c:	900b883a 	mov	r5,r18
  802a70:	01800284 	movi	r6,10
  802a74:	000f883a 	mov	r7,zero
  802a78:	80bfffc5 	stb	r2,-1(r16)
  802a7c:	080af5c0 	call	80af5c <__udivdi3>
  802a80:	900d883a 	mov	r6,r18
  802a84:	880f883a 	mov	r7,r17
  802a88:	843fffc4 	addi	r16,r16,-1
  802a8c:	1023883a 	mov	r17,r2
  802a90:	1825883a 	mov	r18,r3
  802a94:	303fee1e 	bne	r6,zero,802a50 <___vfprintf_internal_r+0x162c>
  802a98:	39c002a8 	cmpgeui	r7,r7,10
  802a9c:	383fec1e 	bne	r7,zero,802a50 <___vfprintf_internal_r+0x162c>
  802aa0:	8023883a 	mov	r17,r16
  802aa4:	d8802704 	addi	r2,sp,156
  802aa8:	981b883a 	mov	r13,r19
  802aac:	a825883a 	mov	r18,r21
  802ab0:	dc000717 	ldw	r16,28(sp)
  802ab4:	da000e17 	ldw	r8,56(sp)
  802ab8:	a027883a 	mov	r19,r20
  802abc:	146bc83a 	sub	r21,r2,r17
  802ac0:	003c6f06 	br	801c80 <___vfprintf_internal_r+0x85c>
  802ac4:	d8800517 	ldw	r2,20(sp)
  802ac8:	18800015 	stw	r2,0(r3)
  802acc:	003a8906 	br	8014f4 <___vfprintf_internal_r+0xd0>
  802ad0:	d9801a04 	addi	r6,sp,104
  802ad4:	900b883a 	mov	r5,r18
  802ad8:	9809883a 	mov	r4,r19
  802adc:	08089bc0 	call	8089bc <__sprint_r>
  802ae0:	103b5f1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802ae4:	d8c01c17 	ldw	r3,112(sp)
  802ae8:	dd401b17 	ldw	r21,108(sp)
  802aec:	df002704 	addi	fp,sp,156
  802af0:	003e2b06 	br	8023a0 <___vfprintf_internal_r+0xf7c>
  802af4:	d9801a04 	addi	r6,sp,104
  802af8:	900b883a 	mov	r5,r18
  802afc:	9809883a 	mov	r4,r19
  802b00:	08089bc0 	call	8089bc <__sprint_r>
  802b04:	103b561e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802b08:	d8c01c17 	ldw	r3,112(sp)
  802b0c:	dd401b17 	ldw	r21,108(sp)
  802b10:	df002704 	addi	fp,sp,156
  802b14:	003e2d06 	br	8023cc <___vfprintf_internal_r+0xfa8>
  802b18:	d9801a04 	addi	r6,sp,104
  802b1c:	900b883a 	mov	r5,r18
  802b20:	9809883a 	mov	r4,r19
  802b24:	da001115 	stw	r8,68(sp)
  802b28:	db400f15 	stw	r13,60(sp)
  802b2c:	db800e15 	stw	r14,56(sp)
  802b30:	08089bc0 	call	8089bc <__sprint_r>
  802b34:	103b4a1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802b38:	d8c01c17 	ldw	r3,112(sp)
  802b3c:	da001117 	ldw	r8,68(sp)
  802b40:	db400f17 	ldw	r13,60(sp)
  802b44:	db800e17 	ldw	r14,56(sp)
  802b48:	dd802704 	addi	r22,sp,156
  802b4c:	003b0706 	br	80176c <___vfprintf_internal_r+0x348>
  802b50:	d8801b17 	ldw	r2,108(sp)
  802b54:	01002074 	movhi	r4,129
  802b58:	2103c904 	addi	r4,r4,3876
  802b5c:	10800044 	addi	r2,r2,1
  802b60:	18c00044 	addi	r3,r3,1
  802b64:	b1000015 	stw	r4,0(r22)
  802b68:	01000044 	movi	r4,1
  802b6c:	d8801b15 	stw	r2,108(sp)
  802b70:	b1000115 	stw	r4,4(r22)
  802b74:	d8c01c15 	stw	r3,112(sp)
  802b78:	10800208 	cmpgei	r2,r2,8
  802b7c:	1001641e 	bne	r2,zero,803110 <___vfprintf_internal_r+0x1cec>
  802b80:	b5800204 	addi	r22,r22,8
  802b84:	2800bd1e 	bne	r5,zero,802e7c <___vfprintf_internal_r+0x1a58>
  802b88:	d8800417 	ldw	r2,16(sp)
  802b8c:	d9000817 	ldw	r4,32(sp)
  802b90:	1080004c 	andi	r2,r2,1
  802b94:	1104b03a 	or	r2,r2,r4
  802b98:	103b2026 	beq	r2,zero,80181c <___vfprintf_internal_r+0x3f8>
  802b9c:	d8800d17 	ldw	r2,52(sp)
  802ba0:	d9000b17 	ldw	r4,44(sp)
  802ba4:	b0800015 	stw	r2,0(r22)
  802ba8:	d8801b17 	ldw	r2,108(sp)
  802bac:	20c7883a 	add	r3,r4,r3
  802bb0:	b1000115 	stw	r4,4(r22)
  802bb4:	10800044 	addi	r2,r2,1
  802bb8:	d8c01c15 	stw	r3,112(sp)
  802bbc:	d8801b15 	stw	r2,108(sp)
  802bc0:	11000208 	cmpgei	r4,r2,8
  802bc4:	2001771e 	bne	r4,zero,8031a4 <___vfprintf_internal_r+0x1d80>
  802bc8:	b5800204 	addi	r22,r22,8
  802bcc:	d9000817 	ldw	r4,32(sp)
  802bd0:	10800044 	addi	r2,r2,1
  802bd4:	d8801b15 	stw	r2,108(sp)
  802bd8:	20c7883a 	add	r3,r4,r3
  802bdc:	b4400015 	stw	r17,0(r22)
  802be0:	b1000115 	stw	r4,4(r22)
  802be4:	d8c01c15 	stw	r3,112(sp)
  802be8:	10800208 	cmpgei	r2,r2,8
  802bec:	103b0a26 	beq	r2,zero,801818 <___vfprintf_internal_r+0x3f4>
  802bf0:	003e1906 	br	802458 <___vfprintf_internal_r+0x1034>
  802bf4:	8825883a 	mov	r18,r17
  802bf8:	003b1906 	br	801860 <___vfprintf_internal_r+0x43c>
  802bfc:	d9000917 	ldw	r4,36(sp)
  802c00:	d9400a17 	ldw	r5,40(sp)
  802c04:	da000615 	stw	r8,24(sp)
  802c08:	200d883a 	mov	r6,r4
  802c0c:	280f883a 	mov	r7,r5
  802c10:	db000415 	stw	r12,16(sp)
  802c14:	080e1c40 	call	80e1c4 <__unorddf2>
  802c18:	db000417 	ldw	r12,16(sp)
  802c1c:	da000617 	ldw	r8,24(sp)
  802c20:	1002061e 	bne	r2,zero,80343c <___vfprintf_internal_r+0x2018>
  802c24:	057ff7c4 	movi	r21,-33
  802c28:	40bfffe0 	cmpeqi	r2,r8,-1
  802c2c:	e56a703a 	and	r21,fp,r21
  802c30:	1001b41e 	bne	r2,zero,803304 <___vfprintf_internal_r+0x1ee0>
  802c34:	a88011d8 	cmpnei	r2,r21,71
  802c38:	10015726 	beq	r2,zero,803198 <___vfprintf_internal_r+0x1d74>
  802c3c:	60804014 	ori	r2,r12,256
  802c40:	d8800415 	stw	r2,16(sp)
  802c44:	d8800a17 	ldw	r2,40(sp)
  802c48:	10012d16 	blt	r2,zero,803100 <___vfprintf_internal_r+0x1cdc>
  802c4c:	dd000a17 	ldw	r20,40(sp)
  802c50:	d8000605 	stb	zero,24(sp)
  802c54:	e08019a0 	cmpeqi	r2,fp,102
  802c58:	d8800f15 	stw	r2,60(sp)
  802c5c:	1000d21e 	bne	r2,zero,802fa8 <___vfprintf_internal_r+0x1b84>
  802c60:	e08011a0 	cmpeqi	r2,fp,70
  802c64:	1000d01e 	bne	r2,zero,802fa8 <___vfprintf_internal_r+0x1b84>
  802c68:	a8801158 	cmpnei	r2,r21,69
  802c6c:	10016226 	beq	r2,zero,8031f8 <___vfprintf_internal_r+0x1dd4>
  802c70:	d8801804 	addi	r2,sp,96
  802c74:	d8800315 	stw	r2,12(sp)
  802c78:	d9400917 	ldw	r5,36(sp)
  802c7c:	d8801504 	addi	r2,sp,84
  802c80:	d8800215 	stw	r2,8(sp)
  802c84:	d8801404 	addi	r2,sp,80
  802c88:	da000015 	stw	r8,0(sp)
  802c8c:	9809883a 	mov	r4,r19
  802c90:	d8800115 	stw	r2,4(sp)
  802c94:	01c00084 	movi	r7,2
  802c98:	a00d883a 	mov	r6,r20
  802c9c:	db000815 	stw	r12,32(sp)
  802ca0:	da000715 	stw	r8,28(sp)
  802ca4:	08039880 	call	803988 <_dtoa_r>
  802ca8:	da000717 	ldw	r8,28(sp)
  802cac:	e10019d8 	cmpnei	r4,fp,103
  802cb0:	db000817 	ldw	r12,32(sp)
  802cb4:	1023883a 	mov	r17,r2
  802cb8:	4007883a 	mov	r3,r8
  802cbc:	2001621e 	bne	r4,zero,803248 <___vfprintf_internal_r+0x1e24>
  802cc0:	6080004c 	andi	r2,r12,1
  802cc4:	1001621e 	bne	r2,zero,803250 <___vfprintf_internal_r+0x1e2c>
  802cc8:	d8801417 	ldw	r2,80(sp)
  802ccc:	ad4011e0 	cmpeqi	r21,r21,71
  802cd0:	d8800715 	stw	r2,28(sp)
  802cd4:	d8801817 	ldw	r2,96(sp)
  802cd8:	1445c83a 	sub	r2,r2,r17
  802cdc:	d8800815 	stw	r2,32(sp)
  802ce0:	a8000526 	beq	r21,zero,802cf8 <___vfprintf_internal_r+0x18d4>
  802ce4:	d8c00717 	ldw	r3,28(sp)
  802ce8:	18bfff50 	cmplti	r2,r3,-3
  802cec:	1000011e 	bne	r2,zero,802cf4 <___vfprintf_internal_r+0x18d0>
  802cf0:	40c1670e 	bge	r8,r3,803290 <___vfprintf_internal_r+0x1e6c>
  802cf4:	e73fff84 	addi	fp,fp,-2
  802cf8:	d8800717 	ldw	r2,28(sp)
  802cfc:	df001645 	stb	fp,89(sp)
  802d00:	157fffc4 	addi	r21,r2,-1
  802d04:	dd401415 	stw	r21,80(sp)
  802d08:	a801d416 	blt	r21,zero,80345c <___vfprintf_internal_r+0x2038>
  802d0c:	00800ac4 	movi	r2,43
  802d10:	d8801685 	stb	r2,90(sp)
  802d14:	a8800290 	cmplti	r2,r21,10
  802d18:	1001c11e 	bne	r2,zero,803420 <___vfprintf_internal_r+0x1ffc>
  802d1c:	d98019c4 	addi	r6,sp,103
  802d20:	9029883a 	mov	r20,r18
  802d24:	dc400715 	stw	r17,28(sp)
  802d28:	8025883a 	mov	r18,r16
  802d2c:	db000f15 	stw	r12,60(sp)
  802d30:	3021883a 	mov	r16,r6
  802d34:	a809883a 	mov	r4,r21
  802d38:	01400284 	movi	r5,10
  802d3c:	080bbc00 	call	80bbc0 <__modsi3>
  802d40:	10800c04 	addi	r2,r2,48
  802d44:	a809883a 	mov	r4,r21
  802d48:	80bfffc5 	stb	r2,-1(r16)
  802d4c:	01400284 	movi	r5,10
  802d50:	080bb400 	call	80bb40 <__divsi3>
  802d54:	a9001908 	cmpgei	r4,r21,100
  802d58:	8023883a 	mov	r17,r16
  802d5c:	102b883a 	mov	r21,r2
  802d60:	843fffc4 	addi	r16,r16,-1
  802d64:	203ff31e 	bne	r4,zero,802d34 <___vfprintf_internal_r+0x1910>
  802d68:	800d883a 	mov	r6,r16
  802d6c:	11000c04 	addi	r4,r2,48
  802d70:	9021883a 	mov	r16,r18
  802d74:	a025883a 	mov	r18,r20
  802d78:	8829883a 	mov	r20,r17
  802d7c:	a0bfff84 	addi	r2,r20,-2
  802d80:	313fffc5 	stb	r4,-1(r6)
  802d84:	d8c019c4 	addi	r3,sp,103
  802d88:	db000f17 	ldw	r12,60(sp)
  802d8c:	dc400717 	ldw	r17,28(sp)
  802d90:	10c1d62e 	bgeu	r2,r3,8034ec <___vfprintf_internal_r+0x20c8>
  802d94:	d8c016c4 	addi	r3,sp,91
  802d98:	00000106 	br	802da0 <___vfprintf_internal_r+0x197c>
  802d9c:	11000003 	ldbu	r4,0(r2)
  802da0:	19000005 	stb	r4,0(r3)
  802da4:	10800044 	addi	r2,r2,1
  802da8:	d90019c4 	addi	r4,sp,103
  802dac:	18c00044 	addi	r3,r3,1
  802db0:	113ffa1e 	bne	r2,r4,802d9c <___vfprintf_internal_r+0x1978>
  802db4:	d8801a44 	addi	r2,sp,105
  802db8:	d8c016c4 	addi	r3,sp,91
  802dbc:	1505c83a 	sub	r2,r2,r20
  802dc0:	1885883a 	add	r2,r3,r2
  802dc4:	d8c01644 	addi	r3,sp,89
  802dc8:	10c5c83a 	sub	r2,r2,r3
  802dcc:	d8801015 	stw	r2,64(sp)
  802dd0:	d8c00817 	ldw	r3,32(sp)
  802dd4:	d9001017 	ldw	r4,64(sp)
  802dd8:	18800088 	cmpgei	r2,r3,2
  802ddc:	192b883a 	add	r21,r3,r4
  802de0:	1001aa26 	beq	r2,zero,80348c <___vfprintf_internal_r+0x2068>
  802de4:	d8800b17 	ldw	r2,44(sp)
  802de8:	a8ab883a 	add	r21,r21,r2
  802dec:	a829883a 	mov	r20,r21
  802df0:	a800010e 	bge	r21,zero,802df8 <___vfprintf_internal_r+0x19d4>
  802df4:	0029883a 	mov	r20,zero
  802df8:	d8000715 	stw	zero,28(sp)
  802dfc:	00009d06 	br	803074 <___vfprintf_internal_r+0x1c50>
  802e00:	880f883a 	mov	r7,r17
  802e04:	10800044 	addi	r2,r2,1
  802e08:	1d47883a 	add	r3,r3,r21
  802e0c:	b1c00015 	stw	r7,0(r22)
  802e10:	003a7c06 	br	801804 <___vfprintf_internal_r+0x3e0>
  802e14:	d9801a04 	addi	r6,sp,104
  802e18:	900b883a 	mov	r5,r18
  802e1c:	9809883a 	mov	r4,r19
  802e20:	08089bc0 	call	8089bc <__sprint_r>
  802e24:	103a8e1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802e28:	d8c01c17 	ldw	r3,112(sp)
  802e2c:	dd802704 	addi	r22,sp,156
  802e30:	003c9706 	br	802090 <___vfprintf_internal_r+0xc6c>
  802e34:	d9801a04 	addi	r6,sp,104
  802e38:	900b883a 	mov	r5,r18
  802e3c:	9809883a 	mov	r4,r19
  802e40:	da000e15 	stw	r8,56(sp)
  802e44:	08089bc0 	call	8089bc <__sprint_r>
  802e48:	103a851e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  802e4c:	d8c01c17 	ldw	r3,112(sp)
  802e50:	da000e17 	ldw	r8,56(sp)
  802e54:	dd802704 	addi	r22,sp,156
  802e58:	003a6106 	br	8017e0 <___vfprintf_internal_r+0x3bc>
  802e5c:	8809883a 	mov	r4,r17
  802e60:	db000415 	stw	r12,16(sp)
  802e64:	d8c00615 	stw	r3,24(sp)
  802e68:	080138c0 	call	80138c <strlen>
  802e6c:	db000417 	ldw	r12,16(sp)
  802e70:	102b883a 	mov	r21,r2
  802e74:	1029883a 	mov	r20,r2
  802e78:	003a2f06 	br	801738 <___vfprintf_internal_r+0x314>
  802e7c:	d8800d17 	ldw	r2,52(sp)
  802e80:	d9000b17 	ldw	r4,44(sp)
  802e84:	b0800015 	stw	r2,0(r22)
  802e88:	d8801b17 	ldw	r2,108(sp)
  802e8c:	20c7883a 	add	r3,r4,r3
  802e90:	b1000115 	stw	r4,4(r22)
  802e94:	10800044 	addi	r2,r2,1
  802e98:	d8c01c15 	stw	r3,112(sp)
  802e9c:	d8801b15 	stw	r2,108(sp)
  802ea0:	11000208 	cmpgei	r4,r2,8
  802ea4:	2000bf1e 	bne	r4,zero,8031a4 <___vfprintf_internal_r+0x1d80>
  802ea8:	b5800204 	addi	r22,r22,8
  802eac:	283f470e 	bge	r5,zero,802bcc <___vfprintf_internal_r+0x17a8>
  802eb0:	01c02074 	movhi	r7,129
  802eb4:	293ffc08 	cmpgei	r4,r5,-16
  802eb8:	39c3ca04 	addi	r7,r7,3880
  802ebc:	0179c83a 	sub	fp,zero,r5
  802ec0:	20013f1e 	bne	r4,zero,8033c0 <___vfprintf_internal_r+0x1f9c>
  802ec4:	dc000715 	stw	r16,28(sp)
  802ec8:	05400404 	movi	r21,16
  802ecc:	9021883a 	mov	r16,r18
  802ed0:	3825883a 	mov	r18,r7
  802ed4:	00000406 	br	802ee8 <___vfprintf_internal_r+0x1ac4>
  802ed8:	b5800204 	addi	r22,r22,8
  802edc:	e73ffc04 	addi	fp,fp,-16
  802ee0:	e1800448 	cmpgei	r6,fp,17
  802ee4:	30013326 	beq	r6,zero,8033b4 <___vfprintf_internal_r+0x1f90>
  802ee8:	10800044 	addi	r2,r2,1
  802eec:	18c00404 	addi	r3,r3,16
  802ef0:	b4800015 	stw	r18,0(r22)
  802ef4:	b5400115 	stw	r21,4(r22)
  802ef8:	d8c01c15 	stw	r3,112(sp)
  802efc:	d8801b15 	stw	r2,108(sp)
  802f00:	11800208 	cmpgei	r6,r2,8
  802f04:	303ff426 	beq	r6,zero,802ed8 <___vfprintf_internal_r+0x1ab4>
  802f08:	d9801a04 	addi	r6,sp,104
  802f0c:	800b883a 	mov	r5,r16
  802f10:	9809883a 	mov	r4,r19
  802f14:	08089bc0 	call	8089bc <__sprint_r>
  802f18:	1001721e 	bne	r2,zero,8034e4 <___vfprintf_internal_r+0x20c0>
  802f1c:	d8c01c17 	ldw	r3,112(sp)
  802f20:	d8801b17 	ldw	r2,108(sp)
  802f24:	dd802704 	addi	r22,sp,156
  802f28:	003fec06 	br	802edc <___vfprintf_internal_r+0x1ab8>
  802f2c:	800f883a 	mov	r7,r16
  802f30:	dc000717 	ldw	r16,28(sp)
  802f34:	8817883a 	mov	r11,r17
  802f38:	aa000044 	addi	r8,r21,1
  802f3c:	e0800204 	addi	r2,fp,8
  802f40:	1ac7883a 	add	r3,r3,r11
  802f44:	e1c00015 	stw	r7,0(fp)
  802f48:	e2c00115 	stw	r11,4(fp)
  802f4c:	d8c01c15 	stw	r3,112(sp)
  802f50:	da001b15 	stw	r8,108(sp)
  802f54:	41000208 	cmpgei	r4,r8,8
  802f58:	203e701e 	bne	r4,zero,80291c <___vfprintf_internal_r+0x14f8>
  802f5c:	42000044 	addi	r8,r8,1
  802f60:	15800204 	addi	r22,r2,8
  802f64:	1039883a 	mov	fp,r2
  802f68:	003d3206 	br	802434 <___vfprintf_internal_r+0x1010>
  802f6c:	d8800617 	ldw	r2,24(sp)
  802f70:	d8c00615 	stw	r3,24(sp)
  802f74:	15000017 	ldw	r20,0(r2)
  802f78:	a02bd7fa 	srai	r21,r20,31
  802f7c:	a805883a 	mov	r2,r21
  802f80:	003b2d06 	br	801c38 <___vfprintf_internal_r+0x814>
  802f84:	d8800617 	ldw	r2,24(sp)
  802f88:	002b883a 	mov	r21,zero
  802f8c:	d8c00615 	stw	r3,24(sp)
  802f90:	15000017 	ldw	r20,0(r2)
  802f94:	0005883a 	mov	r2,zero
  802f98:	003a6e06 	br	801954 <___vfprintf_internal_r+0x530>
  802f9c:	04402074 	movhi	r17,129
  802fa0:	8c43b904 	addi	r17,r17,3812
  802fa4:	003ac606 	br	801ac0 <___vfprintf_internal_r+0x69c>
  802fa8:	d8801804 	addi	r2,sp,96
  802fac:	d8800315 	stw	r2,12(sp)
  802fb0:	d9400917 	ldw	r5,36(sp)
  802fb4:	d8801504 	addi	r2,sp,84
  802fb8:	d8800215 	stw	r2,8(sp)
  802fbc:	d8801404 	addi	r2,sp,80
  802fc0:	da000015 	stw	r8,0(sp)
  802fc4:	d8800115 	stw	r2,4(sp)
  802fc8:	01c000c4 	movi	r7,3
  802fcc:	a00d883a 	mov	r6,r20
  802fd0:	9809883a 	mov	r4,r19
  802fd4:	db000815 	stw	r12,32(sp)
  802fd8:	da000715 	stw	r8,28(sp)
  802fdc:	08039880 	call	803988 <_dtoa_r>
  802fe0:	da000717 	ldw	r8,28(sp)
  802fe4:	1023883a 	mov	r17,r2
  802fe8:	db000817 	ldw	r12,32(sp)
  802fec:	1207883a 	add	r3,r2,r8
  802ff0:	88800007 	ldb	r2,0(r17)
  802ff4:	10800c20 	cmpeqi	r2,r2,48
  802ff8:	1000571e 	bne	r2,zero,803158 <___vfprintf_internal_r+0x1d34>
  802ffc:	d8801417 	ldw	r2,80(sp)
  803000:	1893883a 	add	r9,r3,r2
  803004:	d9000917 	ldw	r4,36(sp)
  803008:	000d883a 	mov	r6,zero
  80300c:	000f883a 	mov	r7,zero
  803010:	a00b883a 	mov	r5,r20
  803014:	da401115 	stw	r9,68(sp)
  803018:	da000815 	stw	r8,32(sp)
  80301c:	db000715 	stw	r12,28(sp)
  803020:	080cf140 	call	80cf14 <__eqdf2>
  803024:	db000717 	ldw	r12,28(sp)
  803028:	da000817 	ldw	r8,32(sp)
  80302c:	da401117 	ldw	r9,68(sp)
  803030:	1000891e 	bne	r2,zero,803258 <___vfprintf_internal_r+0x1e34>
  803034:	4805883a 	mov	r2,r9
  803038:	d8c01417 	ldw	r3,80(sp)
  80303c:	1445c83a 	sub	r2,r2,r17
  803040:	ad4011d8 	cmpnei	r21,r21,71
  803044:	d8c00715 	stw	r3,28(sp)
  803048:	d8800815 	stw	r2,32(sp)
  80304c:	a83f2526 	beq	r21,zero,802ce4 <___vfprintf_internal_r+0x18c0>
  803050:	d8800f17 	ldw	r2,60(sp)
  803054:	103f2826 	beq	r2,zero,802cf8 <___vfprintf_internal_r+0x18d4>
  803058:	d8c00717 	ldw	r3,28(sp)
  80305c:	6080004c 	andi	r2,r12,1
  803060:	1204b03a 	or	r2,r2,r8
  803064:	00c1140e 	bge	zero,r3,8034b8 <___vfprintf_internal_r+0x2094>
  803068:	1001011e 	bne	r2,zero,803470 <___vfprintf_internal_r+0x204c>
  80306c:	dd400717 	ldw	r21,28(sp)
  803070:	a829883a 	mov	r20,r21
  803074:	d8800607 	ldb	r2,24(sp)
  803078:	10008026 	beq	r2,zero,80327c <___vfprintf_internal_r+0x1e58>
  80307c:	00800b44 	movi	r2,45
  803080:	d8801345 	stb	r2,77(sp)
  803084:	d8800e17 	ldw	r2,56(sp)
  803088:	0011883a 	mov	r8,zero
  80308c:	d8800615 	stw	r2,24(sp)
  803090:	003b0306 	br	801ca0 <___vfprintf_internal_r+0x87c>
  803094:	d8800617 	ldw	r2,24(sp)
  803098:	002b883a 	mov	r21,zero
  80309c:	d8c00615 	stw	r3,24(sp)
  8030a0:	15000017 	ldw	r20,0(r2)
  8030a4:	00800044 	movi	r2,1
  8030a8:	003a2a06 	br	801954 <___vfprintf_internal_r+0x530>
  8030ac:	d8800617 	ldw	r2,24(sp)
  8030b0:	002b883a 	mov	r21,zero
  8030b4:	d8c00615 	stw	r3,24(sp)
  8030b8:	15000017 	ldw	r20,0(r2)
  8030bc:	003b1306 	br	801d0c <___vfprintf_internal_r+0x8e8>
  8030c0:	800f883a 	mov	r7,r16
  8030c4:	dc000e17 	ldw	r16,56(sp)
  8030c8:	10800044 	addi	r2,r2,1
  8030cc:	1d47883a 	add	r3,r3,r21
  8030d0:	d8801b15 	stw	r2,108(sp)
  8030d4:	b1c00015 	stw	r7,0(r22)
  8030d8:	b5400115 	stw	r21,4(r22)
  8030dc:	d8c01c15 	stw	r3,112(sp)
  8030e0:	10800208 	cmpgei	r2,r2,8
  8030e4:	10003a1e 	bne	r2,zero,8031d0 <___vfprintf_internal_r+0x1dac>
  8030e8:	b5800204 	addi	r22,r22,8
  8030ec:	003d5406 	br	802640 <___vfprintf_internal_r+0x121c>
  8030f0:	00800b44 	movi	r2,45
  8030f4:	d8801345 	stb	r2,77(sp)
  8030f8:	03400b44 	movi	r13,45
  8030fc:	003a6c06 	br	801ab0 <___vfprintf_internal_r+0x68c>
  803100:	1520003c 	xorhi	r20,r2,32768
  803104:	00800b44 	movi	r2,45
  803108:	d8800605 	stb	r2,24(sp)
  80310c:	003ed106 	br	802c54 <___vfprintf_internal_r+0x1830>
  803110:	d9801a04 	addi	r6,sp,104
  803114:	900b883a 	mov	r5,r18
  803118:	9809883a 	mov	r4,r19
  80311c:	08089bc0 	call	8089bc <__sprint_r>
  803120:	1039cf1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  803124:	d9401417 	ldw	r5,80(sp)
  803128:	d8c01c17 	ldw	r3,112(sp)
  80312c:	dd802704 	addi	r22,sp,156
  803130:	003e9406 	br	802b84 <___vfprintf_internal_r+0x1760>
  803134:	05400184 	movi	r21,6
  803138:	003e1706 	br	802998 <___vfprintf_internal_r+0x1574>
  80313c:	d9401345 	stb	r5,77(sp)
  803140:	00397706 	br	801720 <___vfprintf_internal_r+0x2fc>
  803144:	d9801a04 	addi	r6,sp,104
  803148:	900b883a 	mov	r5,r18
  80314c:	9809883a 	mov	r4,r19
  803150:	08089bc0 	call	8089bc <__sprint_r>
  803154:	0039c206 	br	801860 <___vfprintf_internal_r+0x43c>
  803158:	d9000917 	ldw	r4,36(sp)
  80315c:	000d883a 	mov	r6,zero
  803160:	000f883a 	mov	r7,zero
  803164:	a00b883a 	mov	r5,r20
  803168:	d8c01115 	stw	r3,68(sp)
  80316c:	da000815 	stw	r8,32(sp)
  803170:	db000715 	stw	r12,28(sp)
  803174:	080cf140 	call	80cf14 <__eqdf2>
  803178:	db000717 	ldw	r12,28(sp)
  80317c:	da000817 	ldw	r8,32(sp)
  803180:	d8c01117 	ldw	r3,68(sp)
  803184:	103f9d26 	beq	r2,zero,802ffc <___vfprintf_internal_r+0x1bd8>
  803188:	00800044 	movi	r2,1
  80318c:	1205c83a 	sub	r2,r2,r8
  803190:	d8801415 	stw	r2,80(sp)
  803194:	003f9a06 	br	803000 <___vfprintf_internal_r+0x1bdc>
  803198:	403ea81e 	bne	r8,zero,802c3c <___vfprintf_internal_r+0x1818>
  80319c:	02000044 	movi	r8,1
  8031a0:	003ea606 	br	802c3c <___vfprintf_internal_r+0x1818>
  8031a4:	d9801a04 	addi	r6,sp,104
  8031a8:	900b883a 	mov	r5,r18
  8031ac:	9809883a 	mov	r4,r19
  8031b0:	08089bc0 	call	8089bc <__sprint_r>
  8031b4:	1039aa1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8031b8:	d9401417 	ldw	r5,80(sp)
  8031bc:	d8c01c17 	ldw	r3,112(sp)
  8031c0:	d8801b17 	ldw	r2,108(sp)
  8031c4:	dd802704 	addi	r22,sp,156
  8031c8:	283e800e 	bge	r5,zero,802bcc <___vfprintf_internal_r+0x17a8>
  8031cc:	003f3806 	br	802eb0 <___vfprintf_internal_r+0x1a8c>
  8031d0:	d9801a04 	addi	r6,sp,104
  8031d4:	900b883a 	mov	r5,r18
  8031d8:	9809883a 	mov	r4,r19
  8031dc:	08089bc0 	call	8089bc <__sprint_r>
  8031e0:	10399f1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8031e4:	d8c01c17 	ldw	r3,112(sp)
  8031e8:	dd802704 	addi	r22,sp,156
  8031ec:	003d1406 	br	802640 <___vfprintf_internal_r+0x121c>
  8031f0:	db000417 	ldw	r12,16(sp)
  8031f4:	003a9d06 	br	801c6c <___vfprintf_internal_r+0x848>
  8031f8:	d8801804 	addi	r2,sp,96
  8031fc:	d8800315 	stw	r2,12(sp)
  803200:	d9400917 	ldw	r5,36(sp)
  803204:	d8801504 	addi	r2,sp,84
  803208:	40c00044 	addi	r3,r8,1
  80320c:	d8800215 	stw	r2,8(sp)
  803210:	d8801404 	addi	r2,sp,80
  803214:	d8c00015 	stw	r3,0(sp)
  803218:	d8800115 	stw	r2,4(sp)
  80321c:	01c00084 	movi	r7,2
  803220:	a00d883a 	mov	r6,r20
  803224:	9809883a 	mov	r4,r19
  803228:	db001115 	stw	r12,68(sp)
  80322c:	da000815 	stw	r8,32(sp)
  803230:	d8c00715 	stw	r3,28(sp)
  803234:	08039880 	call	803988 <_dtoa_r>
  803238:	d8c00717 	ldw	r3,28(sp)
  80323c:	da000817 	ldw	r8,32(sp)
  803240:	db001117 	ldw	r12,68(sp)
  803244:	1023883a 	mov	r17,r2
  803248:	e08011d8 	cmpnei	r2,fp,71
  80324c:	103e9c26 	beq	r2,zero,802cc0 <___vfprintf_internal_r+0x189c>
  803250:	88d3883a 	add	r9,r17,r3
  803254:	003f6b06 	br	803004 <___vfprintf_internal_r+0x1be0>
  803258:	d8801817 	ldw	r2,96(sp)
  80325c:	127f762e 	bgeu	r2,r9,803038 <___vfprintf_internal_r+0x1c14>
  803260:	01000c04 	movi	r4,48
  803264:	10c00044 	addi	r3,r2,1
  803268:	d8c01815 	stw	r3,96(sp)
  80326c:	11000005 	stb	r4,0(r2)
  803270:	d8801817 	ldw	r2,96(sp)
  803274:	127ffb36 	bltu	r2,r9,803264 <___vfprintf_internal_r+0x1e40>
  803278:	003f6f06 	br	803038 <___vfprintf_internal_r+0x1c14>
  80327c:	d8800e17 	ldw	r2,56(sp)
  803280:	db401343 	ldbu	r13,77(sp)
  803284:	0011883a 	mov	r8,zero
  803288:	d8800615 	stw	r2,24(sp)
  80328c:	003a8006 	br	801c90 <___vfprintf_internal_r+0x86c>
  803290:	d8800717 	ldw	r2,28(sp)
  803294:	d8c00817 	ldw	r3,32(sp)
  803298:	10c02b16 	blt	r2,r3,803348 <___vfprintf_internal_r+0x1f24>
  80329c:	6300004c 	andi	r12,r12,1
  8032a0:	6000581e 	bne	r12,zero,803404 <___vfprintf_internal_r+0x1fe0>
  8032a4:	1029883a 	mov	r20,r2
  8032a8:	1000010e 	bge	r2,zero,8032b0 <___vfprintf_internal_r+0x1e8c>
  8032ac:	0029883a 	mov	r20,zero
  8032b0:	dd400717 	ldw	r21,28(sp)
  8032b4:	070019c4 	movi	fp,103
  8032b8:	003f6e06 	br	803074 <___vfprintf_internal_r+0x1c50>
  8032bc:	d9801a04 	addi	r6,sp,104
  8032c0:	900b883a 	mov	r5,r18
  8032c4:	9809883a 	mov	r4,r19
  8032c8:	08089bc0 	call	8089bc <__sprint_r>
  8032cc:	1039641e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8032d0:	dd401417 	ldw	r21,80(sp)
  8032d4:	d8c01c17 	ldw	r3,112(sp)
  8032d8:	dd802704 	addi	r22,sp,156
  8032dc:	003ce706 	br	80267c <___vfprintf_internal_r+0x1258>
  8032e0:	d9801a04 	addi	r6,sp,104
  8032e4:	900b883a 	mov	r5,r18
  8032e8:	9809883a 	mov	r4,r19
  8032ec:	08089bc0 	call	8089bc <__sprint_r>
  8032f0:	10395b1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8032f4:	d8c01c17 	ldw	r3,112(sp)
  8032f8:	dd802704 	addi	r22,sp,156
  8032fc:	a83ccd0e 	bge	r21,zero,802634 <___vfprintf_internal_r+0x1210>
  803300:	003d9106 	br	802948 <___vfprintf_internal_r+0x1524>
  803304:	02000184 	movi	r8,6
  803308:	003e4c06 	br	802c3c <___vfprintf_internal_r+0x1818>
  80330c:	d9801a04 	addi	r6,sp,104
  803310:	900b883a 	mov	r5,r18
  803314:	9809883a 	mov	r4,r19
  803318:	08089bc0 	call	8089bc <__sprint_r>
  80331c:	1039501e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  803320:	d8801417 	ldw	r2,80(sp)
  803324:	d9000817 	ldw	r4,32(sp)
  803328:	d8c01c17 	ldw	r3,112(sp)
  80332c:	dd802704 	addi	r22,sp,156
  803330:	2085c83a 	sub	r2,r4,r2
  803334:	003ce506 	br	8026cc <___vfprintf_internal_r+0x12a8>
  803338:	4029883a 	mov	r20,r8
  80333c:	d8c00615 	stw	r3,24(sp)
  803340:	402b883a 	mov	r21,r8
  803344:	0038fc06 	br	801738 <___vfprintf_internal_r+0x314>
  803348:	d8800817 	ldw	r2,32(sp)
  80334c:	d8c00b17 	ldw	r3,44(sp)
  803350:	10eb883a 	add	r21,r2,r3
  803354:	d8800717 	ldw	r2,28(sp)
  803358:	00800316 	blt	zero,r2,803368 <___vfprintf_internal_r+0x1f44>
  80335c:	d8800717 	ldw	r2,28(sp)
  803360:	a8abc83a 	sub	r21,r21,r2
  803364:	ad400044 	addi	r21,r21,1
  803368:	a829883a 	mov	r20,r21
  80336c:	a8002a16 	blt	r21,zero,803418 <___vfprintf_internal_r+0x1ff4>
  803370:	070019c4 	movi	fp,103
  803374:	003f3f06 	br	803074 <___vfprintf_internal_r+0x1c50>
  803378:	d9401345 	stb	r5,77(sp)
  80337c:	003ae006 	br	801f00 <___vfprintf_internal_r+0xadc>
  803380:	d9401345 	stb	r5,77(sp)
  803384:	003a5706 	br	801ce4 <___vfprintf_internal_r+0x8c0>
  803388:	d9401345 	stb	r5,77(sp)
  80338c:	003b1706 	br	801fec <___vfprintf_internal_r+0xbc8>
  803390:	d9401345 	stb	r5,77(sp)
  803394:	003a2006 	br	801c18 <___vfprintf_internal_r+0x7f4>
  803398:	d9401345 	stb	r5,77(sp)
  80339c:	003a6606 	br	801d38 <___vfprintf_internal_r+0x914>
  8033a0:	d9401345 	stb	r5,77(sp)
  8033a4:	00399706 	br	801a04 <___vfprintf_internal_r+0x5e0>
  8033a8:	00bfffc4 	movi	r2,-1
  8033ac:	d8800515 	stw	r2,20(sp)
  8033b0:	00392e06 	br	80186c <___vfprintf_internal_r+0x448>
  8033b4:	900f883a 	mov	r7,r18
  8033b8:	8025883a 	mov	r18,r16
  8033bc:	dc000717 	ldw	r16,28(sp)
  8033c0:	10800044 	addi	r2,r2,1
  8033c4:	1f07883a 	add	r3,r3,fp
  8033c8:	b1c00015 	stw	r7,0(r22)
  8033cc:	b7000115 	stw	fp,4(r22)
  8033d0:	d8c01c15 	stw	r3,112(sp)
  8033d4:	d8801b15 	stw	r2,108(sp)
  8033d8:	11000208 	cmpgei	r4,r2,8
  8033dc:	203dfa26 	beq	r4,zero,802bc8 <___vfprintf_internal_r+0x17a4>
  8033e0:	d9801a04 	addi	r6,sp,104
  8033e4:	900b883a 	mov	r5,r18
  8033e8:	9809883a 	mov	r4,r19
  8033ec:	08089bc0 	call	8089bc <__sprint_r>
  8033f0:	10391b1e 	bne	r2,zero,801860 <___vfprintf_internal_r+0x43c>
  8033f4:	d8c01c17 	ldw	r3,112(sp)
  8033f8:	d8801b17 	ldw	r2,108(sp)
  8033fc:	dd802704 	addi	r22,sp,156
  803400:	003df206 	br	802bcc <___vfprintf_internal_r+0x17a8>
  803404:	d8800717 	ldw	r2,28(sp)
  803408:	d8c00b17 	ldw	r3,44(sp)
  80340c:	10eb883a 	add	r21,r2,r3
  803410:	a829883a 	mov	r20,r21
  803414:	a83fd60e 	bge	r21,zero,803370 <___vfprintf_internal_r+0x1f4c>
  803418:	0029883a 	mov	r20,zero
  80341c:	003fd406 	br	803370 <___vfprintf_internal_r+0x1f4c>
  803420:	00800c04 	movi	r2,48
  803424:	ad400c04 	addi	r21,r21,48
  803428:	d88016c5 	stb	r2,91(sp)
  80342c:	00800104 	movi	r2,4
  803430:	dd401705 	stb	r21,92(sp)
  803434:	d8801015 	stw	r2,64(sp)
  803438:	003e6506 	br	802dd0 <___vfprintf_internal_r+0x19ac>
  80343c:	d8800a17 	ldw	r2,40(sp)
  803440:	10001916 	blt	r2,zero,8034a8 <___vfprintf_internal_r+0x2084>
  803444:	db401343 	ldbu	r13,77(sp)
  803448:	e0801210 	cmplti	r2,fp,72
  80344c:	1000131e 	bne	r2,zero,80349c <___vfprintf_internal_r+0x2078>
  803450:	04402074 	movhi	r17,129
  803454:	8c43bc04 	addi	r17,r17,3824
  803458:	00399906 	br	801ac0 <___vfprintf_internal_r+0x69c>
  80345c:	05400044 	movi	r21,1
  803460:	a8abc83a 	sub	r21,r21,r2
  803464:	00800b44 	movi	r2,45
  803468:	d8801685 	stb	r2,90(sp)
  80346c:	003e2906 	br	802d14 <___vfprintf_internal_r+0x18f0>
  803470:	d8800b17 	ldw	r2,44(sp)
  803474:	18ab883a 	add	r21,r3,r2
  803478:	aa2b883a 	add	r21,r21,r8
  80347c:	a829883a 	mov	r20,r21
  803480:	a83efc0e 	bge	r21,zero,803074 <___vfprintf_internal_r+0x1c50>
  803484:	0029883a 	mov	r20,zero
  803488:	003efa06 	br	803074 <___vfprintf_internal_r+0x1c50>
  80348c:	6080004c 	andi	r2,r12,1
  803490:	d8800715 	stw	r2,28(sp)
  803494:	103e531e 	bne	r2,zero,802de4 <___vfprintf_internal_r+0x19c0>
  803498:	003ff806 	br	80347c <___vfprintf_internal_r+0x2058>
  80349c:	04402074 	movhi	r17,129
  8034a0:	8c43bb04 	addi	r17,r17,3820
  8034a4:	00398606 	br	801ac0 <___vfprintf_internal_r+0x69c>
  8034a8:	00800b44 	movi	r2,45
  8034ac:	d8801345 	stb	r2,77(sp)
  8034b0:	03400b44 	movi	r13,45
  8034b4:	003fe406 	br	803448 <___vfprintf_internal_r+0x2024>
  8034b8:	1000031e 	bne	r2,zero,8034c8 <___vfprintf_internal_r+0x20a4>
  8034bc:	05000044 	movi	r20,1
  8034c0:	05400044 	movi	r21,1
  8034c4:	003eeb06 	br	803074 <___vfprintf_internal_r+0x1c50>
  8034c8:	d8800b17 	ldw	r2,44(sp)
  8034cc:	15400044 	addi	r21,r2,1
  8034d0:	aa2b883a 	add	r21,r21,r8
  8034d4:	003fe906 	br	80347c <___vfprintf_internal_r+0x2058>
  8034d8:	b005883a 	mov	r2,r22
  8034dc:	39c3ca04 	addi	r7,r7,3880
  8034e0:	003e9706 	br	802f40 <___vfprintf_internal_r+0x1b1c>
  8034e4:	8025883a 	mov	r18,r16
  8034e8:	0038dd06 	br	801860 <___vfprintf_internal_r+0x43c>
  8034ec:	00800084 	movi	r2,2
  8034f0:	d8801015 	stw	r2,64(sp)
  8034f4:	003e3606 	br	802dd0 <___vfprintf_internal_r+0x19ac>
  8034f8:	d8c00617 	ldw	r3,24(sp)
  8034fc:	1a000017 	ldw	r8,0(r3)
  803500:	18c00104 	addi	r3,r3,4
  803504:	4000010e 	bge	r8,zero,80350c <___vfprintf_internal_r+0x20e8>
  803508:	023fffc4 	movi	r8,-1
  80350c:	bf000043 	ldbu	fp,1(r23)
  803510:	d8c00615 	stw	r3,24(sp)
  803514:	102f883a 	mov	r23,r2
  803518:	e2c03fcc 	andi	r11,fp,255
  80351c:	5ac0201c 	xori	r11,r11,128
  803520:	5affe004 	addi	r11,r11,-128
  803524:	00380b06 	br	801554 <___vfprintf_internal_r+0x130>

00803528 <__vfprintf_internal>:
  803528:	00c02074 	movhi	r3,129
  80352c:	2005883a 	mov	r2,r4
  803530:	190bf517 	ldw	r4,12244(r3)
  803534:	300f883a 	mov	r7,r6
  803538:	280d883a 	mov	r6,r5
  80353c:	100b883a 	mov	r5,r2
  803540:	08014241 	jmpi	801424 <___vfprintf_internal_r>

00803544 <__sbprintf>:
  803544:	2880030b 	ldhu	r2,12(r5)
  803548:	2b001917 	ldw	r12,100(r5)
  80354c:	2ac0038b 	ldhu	r11,14(r5)
  803550:	2a800717 	ldw	r10,28(r5)
  803554:	2a400917 	ldw	r9,36(r5)
  803558:	defee204 	addi	sp,sp,-1144
  80355c:	da001a04 	addi	r8,sp,104
  803560:	00c10004 	movi	r3,1024
  803564:	dc011a15 	stw	r16,1128(sp)
  803568:	10bfff4c 	andi	r2,r2,65533
  80356c:	2821883a 	mov	r16,r5
  803570:	d80b883a 	mov	r5,sp
  803574:	dc811c15 	stw	r18,1136(sp)
  803578:	dc411b15 	stw	r17,1132(sp)
  80357c:	dfc11d15 	stw	ra,1140(sp)
  803580:	2025883a 	mov	r18,r4
  803584:	d880030d 	sth	r2,12(sp)
  803588:	db001915 	stw	r12,100(sp)
  80358c:	dac0038d 	sth	r11,14(sp)
  803590:	da800715 	stw	r10,28(sp)
  803594:	da400915 	stw	r9,36(sp)
  803598:	da000015 	stw	r8,0(sp)
  80359c:	da000415 	stw	r8,16(sp)
  8035a0:	d8c00215 	stw	r3,8(sp)
  8035a4:	d8c00515 	stw	r3,20(sp)
  8035a8:	d8000615 	stw	zero,24(sp)
  8035ac:	08014240 	call	801424 <___vfprintf_internal_r>
  8035b0:	1023883a 	mov	r17,r2
  8035b4:	10000d0e 	bge	r2,zero,8035ec <__sbprintf+0xa8>
  8035b8:	d880030b 	ldhu	r2,12(sp)
  8035bc:	1080100c 	andi	r2,r2,64
  8035c0:	10000326 	beq	r2,zero,8035d0 <__sbprintf+0x8c>
  8035c4:	8080030b 	ldhu	r2,12(r16)
  8035c8:	10801014 	ori	r2,r2,64
  8035cc:	8080030d 	sth	r2,12(r16)
  8035d0:	8805883a 	mov	r2,r17
  8035d4:	dfc11d17 	ldw	ra,1140(sp)
  8035d8:	dc811c17 	ldw	r18,1136(sp)
  8035dc:	dc411b17 	ldw	r17,1132(sp)
  8035e0:	dc011a17 	ldw	r16,1128(sp)
  8035e4:	dec11e04 	addi	sp,sp,1144
  8035e8:	f800283a 	ret
  8035ec:	d80b883a 	mov	r5,sp
  8035f0:	9009883a 	mov	r4,r18
  8035f4:	08052f80 	call	8052f8 <_fflush_r>
  8035f8:	103fef26 	beq	r2,zero,8035b8 <__sbprintf+0x74>
  8035fc:	047fffc4 	movi	r17,-1
  803600:	003fed06 	br	8035b8 <__sbprintf+0x74>

00803604 <__swsetup_r>:
  803604:	00802074 	movhi	r2,129
  803608:	108bf517 	ldw	r2,12244(r2)
  80360c:	defffd04 	addi	sp,sp,-12
  803610:	dc400115 	stw	r17,4(sp)
  803614:	dc000015 	stw	r16,0(sp)
  803618:	dfc00215 	stw	ra,8(sp)
  80361c:	2023883a 	mov	r17,r4
  803620:	2821883a 	mov	r16,r5
  803624:	10000226 	beq	r2,zero,803630 <__swsetup_r+0x2c>
  803628:	10c00e17 	ldw	r3,56(r2)
  80362c:	18001f26 	beq	r3,zero,8036ac <__swsetup_r+0xa8>
  803630:	8180030b 	ldhu	r6,12(r16)
  803634:	30c0020c 	andi	r3,r6,8
  803638:	3005883a 	mov	r2,r6
  80363c:	18002126 	beq	r3,zero,8036c4 <__swsetup_r+0xc0>
  803640:	80c00417 	ldw	r3,16(r16)
  803644:	18002826 	beq	r3,zero,8036e8 <__swsetup_r+0xe4>
  803648:	1100004c 	andi	r4,r2,1
  80364c:	20000b1e 	bne	r4,zero,80367c <__swsetup_r+0x78>
  803650:	1100008c 	andi	r4,r2,2
  803654:	20002e1e 	bne	r4,zero,803710 <__swsetup_r+0x10c>
  803658:	81000517 	ldw	r4,20(r16)
  80365c:	81000215 	stw	r4,8(r16)
  803660:	18000b26 	beq	r3,zero,803690 <__swsetup_r+0x8c>
  803664:	0005883a 	mov	r2,zero
  803668:	dfc00217 	ldw	ra,8(sp)
  80366c:	dc400117 	ldw	r17,4(sp)
  803670:	dc000017 	ldw	r16,0(sp)
  803674:	dec00304 	addi	sp,sp,12
  803678:	f800283a 	ret
  80367c:	81000517 	ldw	r4,20(r16)
  803680:	80000215 	stw	zero,8(r16)
  803684:	0109c83a 	sub	r4,zero,r4
  803688:	81000615 	stw	r4,24(r16)
  80368c:	183ff51e 	bne	r3,zero,803664 <__swsetup_r+0x60>
  803690:	10c0200c 	andi	r3,r2,128
  803694:	0005883a 	mov	r2,zero
  803698:	183ff326 	beq	r3,zero,803668 <__swsetup_r+0x64>
  80369c:	31801014 	ori	r6,r6,64
  8036a0:	8180030d 	sth	r6,12(r16)
  8036a4:	00bfffc4 	movi	r2,-1
  8036a8:	003fef06 	br	803668 <__swsetup_r+0x64>
  8036ac:	1009883a 	mov	r4,r2
  8036b0:	08057400 	call	805740 <__sinit>
  8036b4:	8180030b 	ldhu	r6,12(r16)
  8036b8:	30c0020c 	andi	r3,r6,8
  8036bc:	3005883a 	mov	r2,r6
  8036c0:	183fdf1e 	bne	r3,zero,803640 <__swsetup_r+0x3c>
  8036c4:	3080040c 	andi	r2,r6,16
  8036c8:	10002126 	beq	r2,zero,803750 <__swsetup_r+0x14c>
  8036cc:	3080010c 	andi	r2,r6,4
  8036d0:	1000111e 	bne	r2,zero,803718 <__swsetup_r+0x114>
  8036d4:	80c00417 	ldw	r3,16(r16)
  8036d8:	30800214 	ori	r2,r6,8
  8036dc:	8080030d 	sth	r2,12(r16)
  8036e0:	100d883a 	mov	r6,r2
  8036e4:	183fd81e 	bne	r3,zero,803648 <__swsetup_r+0x44>
  8036e8:	1100a00c 	andi	r4,r2,640
  8036ec:	21008020 	cmpeqi	r4,r4,512
  8036f0:	203fd51e 	bne	r4,zero,803648 <__swsetup_r+0x44>
  8036f4:	800b883a 	mov	r5,r16
  8036f8:	8809883a 	mov	r4,r17
  8036fc:	08061c80 	call	8061c8 <__smakebuf_r>
  803700:	8180030b 	ldhu	r6,12(r16)
  803704:	80c00417 	ldw	r3,16(r16)
  803708:	3005883a 	mov	r2,r6
  80370c:	003fce06 	br	803648 <__swsetup_r+0x44>
  803710:	0009883a 	mov	r4,zero
  803714:	003fd106 	br	80365c <__swsetup_r+0x58>
  803718:	81400c17 	ldw	r5,48(r16)
  80371c:	28000626 	beq	r5,zero,803738 <__swsetup_r+0x134>
  803720:	80801004 	addi	r2,r16,64
  803724:	28800326 	beq	r5,r2,803734 <__swsetup_r+0x130>
  803728:	8809883a 	mov	r4,r17
  80372c:	08058a40 	call	8058a4 <_free_r>
  803730:	8180030b 	ldhu	r6,12(r16)
  803734:	80000c15 	stw	zero,48(r16)
  803738:	80c00417 	ldw	r3,16(r16)
  80373c:	00bff6c4 	movi	r2,-37
  803740:	118c703a 	and	r6,r2,r6
  803744:	80000115 	stw	zero,4(r16)
  803748:	80c00015 	stw	r3,0(r16)
  80374c:	003fe206 	br	8036d8 <__swsetup_r+0xd4>
  803750:	00800244 	movi	r2,9
  803754:	88800015 	stw	r2,0(r17)
  803758:	31801014 	ori	r6,r6,64
  80375c:	8180030d 	sth	r6,12(r16)
  803760:	00bfffc4 	movi	r2,-1
  803764:	003fc006 	br	803668 <__swsetup_r+0x64>

00803768 <quorem>:
  803768:	defff204 	addi	sp,sp,-56
  80376c:	dc400515 	stw	r17,20(sp)
  803770:	20800417 	ldw	r2,16(r4)
  803774:	2c400417 	ldw	r17,16(r5)
  803778:	dfc00d15 	stw	ra,52(sp)
  80377c:	df000c15 	stw	fp,48(sp)
  803780:	ddc00b15 	stw	r23,44(sp)
  803784:	dd800a15 	stw	r22,40(sp)
  803788:	dd400915 	stw	r21,36(sp)
  80378c:	dd000815 	stw	r20,32(sp)
  803790:	dcc00715 	stw	r19,28(sp)
  803794:	dc800615 	stw	r18,24(sp)
  803798:	dc000415 	stw	r16,16(sp)
  80379c:	d9000115 	stw	r4,4(sp)
  8037a0:	d9400215 	stw	r5,8(sp)
  8037a4:	14407616 	blt	r2,r17,803980 <quorem+0x218>
  8037a8:	8c7fffc4 	addi	r17,r17,-1
  8037ac:	882a90ba 	slli	r21,r17,2
  8037b0:	2f000504 	addi	fp,r5,20
  8037b4:	25800504 	addi	r22,r4,20
  8037b8:	e565883a 	add	r18,fp,r21
  8037bc:	b545883a 	add	r2,r22,r21
  8037c0:	95c00017 	ldw	r23,0(r18)
  8037c4:	15000017 	ldw	r20,0(r2)
  8037c8:	dd800015 	stw	r22,0(sp)
  8037cc:	bdc00044 	addi	r23,r23,1
  8037d0:	b80b883a 	mov	r5,r23
  8037d4:	a009883a 	mov	r4,r20
  8037d8:	d8800315 	stw	r2,12(sp)
  8037dc:	080bc340 	call	80bc34 <__udivsi3>
  8037e0:	1021883a 	mov	r16,r2
  8037e4:	a5c02f36 	bltu	r20,r23,8038a4 <quorem+0x13c>
  8037e8:	e029883a 	mov	r20,fp
  8037ec:	002b883a 	mov	r21,zero
  8037f0:	002f883a 	mov	r23,zero
  8037f4:	a4c00017 	ldw	r19,0(r20)
  8037f8:	800b883a 	mov	r5,r16
  8037fc:	b5800104 	addi	r22,r22,4
  803800:	993fffcc 	andi	r4,r19,65535
  803804:	08012200 	call	801220 <__mulsi3>
  803808:	9808d43a 	srli	r4,r19,16
  80380c:	800b883a 	mov	r5,r16
  803810:	156b883a 	add	r21,r2,r21
  803814:	08012200 	call	801220 <__mulsi3>
  803818:	b0ffff17 	ldw	r3,-4(r22)
  80381c:	a80ad43a 	srli	r5,r21,16
  803820:	a93fffcc 	andi	r4,r21,65535
  803824:	19bfffcc 	andi	r6,r3,65535
  803828:	b909c83a 	sub	r4,r23,r4
  80382c:	2189883a 	add	r4,r4,r6
  803830:	1806d43a 	srli	r3,r3,16
  803834:	1145883a 	add	r2,r2,r5
  803838:	200bd43a 	srai	r5,r4,16
  80383c:	11bfffcc 	andi	r6,r2,65535
  803840:	1987c83a 	sub	r3,r3,r6
  803844:	1947883a 	add	r3,r3,r5
  803848:	180a943a 	slli	r5,r3,16
  80384c:	213fffcc 	andi	r4,r4,65535
  803850:	a5000104 	addi	r20,r20,4
  803854:	2908b03a 	or	r4,r5,r4
  803858:	b13fff15 	stw	r4,-4(r22)
  80385c:	102ad43a 	srli	r21,r2,16
  803860:	182fd43a 	srai	r23,r3,16
  803864:	953fe32e 	bgeu	r18,r20,8037f4 <quorem+0x8c>
  803868:	d8c00317 	ldw	r3,12(sp)
  80386c:	18800017 	ldw	r2,0(r3)
  803870:	10000c1e 	bne	r2,zero,8038a4 <quorem+0x13c>
  803874:	d8800017 	ldw	r2,0(sp)
  803878:	1d7fff04 	addi	r21,r3,-4
  80387c:	15400436 	bltu	r2,r21,803890 <quorem+0x128>
  803880:	00000606 	br	80389c <quorem+0x134>
  803884:	d8800017 	ldw	r2,0(sp)
  803888:	8c7fffc4 	addi	r17,r17,-1
  80388c:	1540032e 	bgeu	r2,r21,80389c <quorem+0x134>
  803890:	a8800017 	ldw	r2,0(r21)
  803894:	ad7fff04 	addi	r21,r21,-4
  803898:	103ffa26 	beq	r2,zero,803884 <quorem+0x11c>
  80389c:	d8800117 	ldw	r2,4(sp)
  8038a0:	14400415 	stw	r17,16(r2)
  8038a4:	d9400217 	ldw	r5,8(sp)
  8038a8:	d9000117 	ldw	r4,4(sp)
  8038ac:	0807a900 	call	807a90 <__mcmp>
  8038b0:	10002616 	blt	r2,zero,80394c <quorem+0x1e4>
  8038b4:	d9400017 	ldw	r5,0(sp)
  8038b8:	84000044 	addi	r16,r16,1
  8038bc:	0007883a 	mov	r3,zero
  8038c0:	e1000017 	ldw	r4,0(fp)
  8038c4:	29800017 	ldw	r6,0(r5)
  8038c8:	29400104 	addi	r5,r5,4
  8038cc:	20bfffcc 	andi	r2,r4,65535
  8038d0:	1887c83a 	sub	r3,r3,r2
  8038d4:	30bfffcc 	andi	r2,r6,65535
  8038d8:	1885883a 	add	r2,r3,r2
  8038dc:	2008d43a 	srli	r4,r4,16
  8038e0:	3006d43a 	srli	r3,r6,16
  8038e4:	100fd43a 	srai	r7,r2,16
  8038e8:	11bfffcc 	andi	r6,r2,65535
  8038ec:	1907c83a 	sub	r3,r3,r4
  8038f0:	19c7883a 	add	r3,r3,r7
  8038f4:	1804943a 	slli	r2,r3,16
  8038f8:	e7000104 	addi	fp,fp,4
  8038fc:	1807d43a 	srai	r3,r3,16
  803900:	1184b03a 	or	r2,r2,r6
  803904:	28bfff15 	stw	r2,-4(r5)
  803908:	973fed2e 	bgeu	r18,fp,8038c0 <quorem+0x158>
  80390c:	880490ba 	slli	r2,r17,2
  803910:	d9000017 	ldw	r4,0(sp)
  803914:	2085883a 	add	r2,r4,r2
  803918:	10c00017 	ldw	r3,0(r2)
  80391c:	18000b1e 	bne	r3,zero,80394c <quorem+0x1e4>
  803920:	10bfff04 	addi	r2,r2,-4
  803924:	20800436 	bltu	r4,r2,803938 <quorem+0x1d0>
  803928:	00000606 	br	803944 <quorem+0x1dc>
  80392c:	d8c00017 	ldw	r3,0(sp)
  803930:	8c7fffc4 	addi	r17,r17,-1
  803934:	1880032e 	bgeu	r3,r2,803944 <quorem+0x1dc>
  803938:	10c00017 	ldw	r3,0(r2)
  80393c:	10bfff04 	addi	r2,r2,-4
  803940:	183ffa26 	beq	r3,zero,80392c <quorem+0x1c4>
  803944:	d8800117 	ldw	r2,4(sp)
  803948:	14400415 	stw	r17,16(r2)
  80394c:	8005883a 	mov	r2,r16
  803950:	dfc00d17 	ldw	ra,52(sp)
  803954:	df000c17 	ldw	fp,48(sp)
  803958:	ddc00b17 	ldw	r23,44(sp)
  80395c:	dd800a17 	ldw	r22,40(sp)
  803960:	dd400917 	ldw	r21,36(sp)
  803964:	dd000817 	ldw	r20,32(sp)
  803968:	dcc00717 	ldw	r19,28(sp)
  80396c:	dc800617 	ldw	r18,24(sp)
  803970:	dc400517 	ldw	r17,20(sp)
  803974:	dc000417 	ldw	r16,16(sp)
  803978:	dec00e04 	addi	sp,sp,56
  80397c:	f800283a 	ret
  803980:	0005883a 	mov	r2,zero
  803984:	003ff206 	br	803950 <quorem+0x1e8>

00803988 <_dtoa_r>:
  803988:	20801017 	ldw	r2,64(r4)
  80398c:	deffe204 	addi	sp,sp,-120
  803990:	ddc01b15 	stw	r23,108(sp)
  803994:	dcc01715 	stw	r19,92(sp)
  803998:	dc801615 	stw	r18,88(sp)
  80399c:	dc401515 	stw	r17,84(sp)
  8039a0:	dc001415 	stw	r16,80(sp)
  8039a4:	dfc01d15 	stw	ra,116(sp)
  8039a8:	df001c15 	stw	fp,112(sp)
  8039ac:	dd801a15 	stw	r22,104(sp)
  8039b0:	dd401915 	stw	r21,100(sp)
  8039b4:	dd001815 	stw	r20,96(sp)
  8039b8:	d9c00215 	stw	r7,8(sp)
  8039bc:	dc002017 	ldw	r16,128(sp)
  8039c0:	202f883a 	mov	r23,r4
  8039c4:	3025883a 	mov	r18,r6
  8039c8:	2827883a 	mov	r19,r5
  8039cc:	3023883a 	mov	r17,r6
  8039d0:	10000826 	beq	r2,zero,8039f4 <_dtoa_r+0x6c>
  8039d4:	21801117 	ldw	r6,68(r4)
  8039d8:	00c00044 	movi	r3,1
  8039dc:	100b883a 	mov	r5,r2
  8039e0:	1986983a 	sll	r3,r3,r6
  8039e4:	11800115 	stw	r6,4(r2)
  8039e8:	10c00215 	stw	r3,8(r2)
  8039ec:	08070800 	call	807080 <_Bfree>
  8039f0:	b8001015 	stw	zero,64(r23)
  8039f4:	90018816 	blt	r18,zero,804018 <_dtoa_r+0x690>
  8039f8:	80000015 	stw	zero,0(r16)
  8039fc:	909ffc2c 	andhi	r2,r18,32752
  803a00:	00dffc34 	movhi	r3,32752
  803a04:	10c18d26 	beq	r2,r3,80403c <_dtoa_r+0x6b4>
  803a08:	000d883a 	mov	r6,zero
  803a0c:	000f883a 	mov	r7,zero
  803a10:	9809883a 	mov	r4,r19
  803a14:	880b883a 	mov	r5,r17
  803a18:	080cf140 	call	80cf14 <__eqdf2>
  803a1c:	1000191e 	bne	r2,zero,803a84 <_dtoa_r+0xfc>
  803a20:	d8c01f17 	ldw	r3,124(sp)
  803a24:	00800044 	movi	r2,1
  803a28:	18800015 	stw	r2,0(r3)
  803a2c:	d8802117 	ldw	r2,132(sp)
  803a30:	1002f926 	beq	r2,zero,804618 <_dtoa_r+0xc90>
  803a34:	d9002117 	ldw	r4,132(sp)
  803a38:	00802074 	movhi	r2,129
  803a3c:	1083c944 	addi	r2,r2,3877
  803a40:	00c02074 	movhi	r3,129
  803a44:	20800015 	stw	r2,0(r4)
  803a48:	1883c904 	addi	r2,r3,3876
  803a4c:	d8800115 	stw	r2,4(sp)
  803a50:	d8800117 	ldw	r2,4(sp)
  803a54:	dfc01d17 	ldw	ra,116(sp)
  803a58:	df001c17 	ldw	fp,112(sp)
  803a5c:	ddc01b17 	ldw	r23,108(sp)
  803a60:	dd801a17 	ldw	r22,104(sp)
  803a64:	dd401917 	ldw	r21,100(sp)
  803a68:	dd001817 	ldw	r20,96(sp)
  803a6c:	dcc01717 	ldw	r19,92(sp)
  803a70:	dc801617 	ldw	r18,88(sp)
  803a74:	dc401517 	ldw	r17,84(sp)
  803a78:	dc001417 	ldw	r16,80(sp)
  803a7c:	dec01e04 	addi	sp,sp,120
  803a80:	f800283a 	ret
  803a84:	d8801204 	addi	r2,sp,72
  803a88:	9020d53a 	srli	r16,r18,20
  803a8c:	d8800015 	stw	r2,0(sp)
  803a90:	d9c01304 	addi	r7,sp,76
  803a94:	980b883a 	mov	r5,r19
  803a98:	880d883a 	mov	r6,r17
  803a9c:	b809883a 	mov	r4,r23
  803aa0:	0807e780 	call	807e78 <__d2b>
  803aa4:	1039883a 	mov	fp,r2
  803aa8:	8001771e 	bne	r16,zero,804088 <_dtoa_r+0x700>
  803aac:	dd001217 	ldw	r20,72(sp)
  803ab0:	dc001317 	ldw	r16,76(sp)
  803ab4:	a421883a 	add	r16,r20,r16
  803ab8:	80810c84 	addi	r2,r16,1074
  803abc:	10c00850 	cmplti	r3,r2,33
  803ac0:	1802e51e 	bne	r3,zero,804658 <_dtoa_r+0xcd0>
  803ac4:	01001004 	movi	r4,64
  803ac8:	2085c83a 	sub	r2,r4,r2
  803acc:	81010484 	addi	r4,r16,1042
  803ad0:	90a4983a 	sll	r18,r18,r2
  803ad4:	9908d83a 	srl	r4,r19,r4
  803ad8:	9108b03a 	or	r4,r18,r4
  803adc:	080e3500 	call	80e350 <__floatunsidf>
  803ae0:	1009883a 	mov	r4,r2
  803ae4:	017f8434 	movhi	r5,65040
  803ae8:	00800044 	movi	r2,1
  803aec:	194b883a 	add	r5,r3,r5
  803af0:	843fffc4 	addi	r16,r16,-1
  803af4:	d8800a15 	stw	r2,40(sp)
  803af8:	000d883a 	mov	r6,zero
  803afc:	01cffe34 	movhi	r7,16376
  803b00:	080d9100 	call	80d910 <__subdf3>
  803b04:	0198dbf4 	movhi	r6,25455
  803b08:	01cff4f4 	movhi	r7,16339
  803b0c:	3190d844 	addi	r6,r6,17249
  803b10:	39e1e9c4 	addi	r7,r7,-30809
  803b14:	1009883a 	mov	r4,r2
  803b18:	180b883a 	mov	r5,r3
  803b1c:	080d1640 	call	80d164 <__muldf3>
  803b20:	01a2d874 	movhi	r6,35681
  803b24:	01cff1f4 	movhi	r7,16327
  803b28:	31b22cc4 	addi	r6,r6,-14157
  803b2c:	39e28a04 	addi	r7,r7,-30168
  803b30:	180b883a 	mov	r5,r3
  803b34:	1009883a 	mov	r4,r2
  803b38:	080bcf40 	call	80bcf4 <__adddf3>
  803b3c:	8009883a 	mov	r4,r16
  803b40:	102b883a 	mov	r21,r2
  803b44:	1825883a 	mov	r18,r3
  803b48:	080e2980 	call	80e298 <__floatsidf>
  803b4c:	019427f4 	movhi	r6,20639
  803b50:	01cff4f4 	movhi	r7,16339
  803b54:	319e7ec4 	addi	r6,r6,31227
  803b58:	39d104c4 	addi	r7,r7,17427
  803b5c:	1009883a 	mov	r4,r2
  803b60:	180b883a 	mov	r5,r3
  803b64:	080d1640 	call	80d164 <__muldf3>
  803b68:	100d883a 	mov	r6,r2
  803b6c:	180f883a 	mov	r7,r3
  803b70:	a809883a 	mov	r4,r21
  803b74:	900b883a 	mov	r5,r18
  803b78:	080bcf40 	call	80bcf4 <__adddf3>
  803b7c:	1009883a 	mov	r4,r2
  803b80:	180b883a 	mov	r5,r3
  803b84:	1025883a 	mov	r18,r2
  803b88:	182d883a 	mov	r22,r3
  803b8c:	080e2180 	call	80e218 <__fixdfsi>
  803b90:	000d883a 	mov	r6,zero
  803b94:	000f883a 	mov	r7,zero
  803b98:	9009883a 	mov	r4,r18
  803b9c:	b00b883a 	mov	r5,r22
  803ba0:	102b883a 	mov	r21,r2
  803ba4:	d8800315 	stw	r2,12(sp)
  803ba8:	080d07c0 	call	80d07c <__ledf2>
  803bac:	10028f16 	blt	r2,zero,8045ec <_dtoa_r+0xc64>
  803bb0:	dc800317 	ldw	r18,12(sp)
  803bb4:	a421c83a 	sub	r16,r20,r16
  803bb8:	85bfffc4 	addi	r22,r16,-1
  803bbc:	908005e8 	cmpgeui	r2,r18,23
  803bc0:	1002821e 	bne	r2,zero,8045cc <_dtoa_r+0xc44>
  803bc4:	900690fa 	slli	r3,r18,3
  803bc8:	00802074 	movhi	r2,129
  803bcc:	10841204 	addi	r2,r2,4168
  803bd0:	10c5883a 	add	r2,r2,r3
  803bd4:	11800017 	ldw	r6,0(r2)
  803bd8:	11c00117 	ldw	r7,4(r2)
  803bdc:	9809883a 	mov	r4,r19
  803be0:	880b883a 	mov	r5,r17
  803be4:	080d07c0 	call	80d07c <__ledf2>
  803be8:	1002550e 	bge	r2,zero,804540 <_dtoa_r+0xbb8>
  803bec:	90bfffc4 	addi	r2,r18,-1
  803bf0:	d8800315 	stw	r2,12(sp)
  803bf4:	d8000915 	stw	zero,36(sp)
  803bf8:	b0027716 	blt	r22,zero,8045d8 <_dtoa_r+0xc50>
  803bfc:	d8000615 	stw	zero,24(sp)
  803c00:	d8800317 	ldw	r2,12(sp)
  803c04:	1002510e 	bge	r2,zero,80454c <_dtoa_r+0xbc4>
  803c08:	d8800317 	ldw	r2,12(sp)
  803c0c:	d8c00617 	ldw	r3,24(sp)
  803c10:	d8000315 	stw	zero,12(sp)
  803c14:	d8800415 	stw	r2,16(sp)
  803c18:	1887c83a 	sub	r3,r3,r2
  803c1c:	d8c00615 	stw	r3,24(sp)
  803c20:	0087c83a 	sub	r3,zero,r2
  803c24:	d8c00815 	stw	r3,32(sp)
  803c28:	d8c00217 	ldw	r3,8(sp)
  803c2c:	188002a8 	cmpgeui	r2,r3,10
  803c30:	10024d1e 	bne	r2,zero,804568 <_dtoa_r+0xbe0>
  803c34:	18800190 	cmplti	r2,r3,6
  803c38:	10028b1e 	bne	r2,zero,804668 <_dtoa_r+0xce0>
  803c3c:	18bfff04 	addi	r2,r3,-4
  803c40:	d8800215 	stw	r2,8(sp)
  803c44:	0021883a 	mov	r16,zero
  803c48:	d8c00217 	ldw	r3,8(sp)
  803c4c:	18800120 	cmpeqi	r2,r3,4
  803c50:	10035d1e 	bne	r2,zero,8049c8 <_dtoa_r+0x1040>
  803c54:	18800160 	cmpeqi	r2,r3,5
  803c58:	10031b1e 	bne	r2,zero,8048c8 <_dtoa_r+0xf40>
  803c5c:	188000a0 	cmpeqi	r2,r3,2
  803c60:	10024d26 	beq	r2,zero,804598 <_dtoa_r+0xc10>
  803c64:	d8000715 	stw	zero,28(sp)
  803c68:	d8801e17 	ldw	r2,120(sp)
  803c6c:	0083260e 	bge	zero,r2,804908 <_dtoa_r+0xf80>
  803c70:	d8800b15 	stw	r2,44(sp)
  803c74:	d8800515 	stw	r2,20(sp)
  803c78:	100d883a 	mov	r6,r2
  803c7c:	b8001115 	stw	zero,68(r23)
  803c80:	30800610 	cmplti	r2,r6,24
  803c84:	1004f11e 	bne	r2,zero,80504c <_dtoa_r+0x16c4>
  803c88:	00c00044 	movi	r3,1
  803c8c:	00800104 	movi	r2,4
  803c90:	1085883a 	add	r2,r2,r2
  803c94:	11000504 	addi	r4,r2,20
  803c98:	180b883a 	mov	r5,r3
  803c9c:	18c00044 	addi	r3,r3,1
  803ca0:	313ffb2e 	bgeu	r6,r4,803c90 <_dtoa_r+0x308>
  803ca4:	b9401115 	stw	r5,68(r23)
  803ca8:	b809883a 	mov	r4,r23
  803cac:	0806fdc0 	call	806fdc <_Balloc>
  803cb0:	d8800115 	stw	r2,4(sp)
  803cb4:	1004de26 	beq	r2,zero,805030 <_dtoa_r+0x16a8>
  803cb8:	d8800117 	ldw	r2,4(sp)
  803cbc:	b8801015 	stw	r2,64(r23)
  803cc0:	d8800517 	ldw	r2,20(sp)
  803cc4:	108003e8 	cmpgeui	r2,r2,15
  803cc8:	1001021e 	bne	r2,zero,8040d4 <_dtoa_r+0x74c>
  803ccc:	80010126 	beq	r16,zero,8040d4 <_dtoa_r+0x74c>
  803cd0:	d9000417 	ldw	r4,16(sp)
  803cd4:	01038b0e 	bge	zero,r4,804b04 <_dtoa_r+0x117c>
  803cd8:	208003cc 	andi	r2,r4,15
  803cdc:	100690fa 	slli	r3,r2,3
  803ce0:	2029d13a 	srai	r20,r4,4
  803ce4:	00802074 	movhi	r2,129
  803ce8:	10841204 	addi	r2,r2,4168
  803cec:	10c5883a 	add	r2,r2,r3
  803cf0:	a0c0040c 	andi	r3,r20,16
  803cf4:	12800017 	ldw	r10,0(r2)
  803cf8:	12400117 	ldw	r9,4(r2)
  803cfc:	18032c26 	beq	r3,zero,8049b0 <_dtoa_r+0x1028>
  803d00:	00802074 	movhi	r2,129
  803d04:	10840804 	addi	r2,r2,4128
  803d08:	11800817 	ldw	r6,32(r2)
  803d0c:	11c00917 	ldw	r7,36(r2)
  803d10:	9809883a 	mov	r4,r19
  803d14:	880b883a 	mov	r5,r17
  803d18:	da400e15 	stw	r9,56(sp)
  803d1c:	da800d15 	stw	r10,52(sp)
  803d20:	080c5e40 	call	80c5e4 <__divdf3>
  803d24:	da800d17 	ldw	r10,52(sp)
  803d28:	da400e17 	ldw	r9,56(sp)
  803d2c:	a50003cc 	andi	r20,r20,15
  803d30:	d8800c15 	stw	r2,48(sp)
  803d34:	1825883a 	mov	r18,r3
  803d38:	054000c4 	movi	r21,3
  803d3c:	a0001126 	beq	r20,zero,803d84 <_dtoa_r+0x3fc>
  803d40:	04002074 	movhi	r16,129
  803d44:	84040804 	addi	r16,r16,4128
  803d48:	5009883a 	mov	r4,r10
  803d4c:	480b883a 	mov	r5,r9
  803d50:	a180004c 	andi	r6,r20,1
  803d54:	30000626 	beq	r6,zero,803d70 <_dtoa_r+0x3e8>
  803d58:	81800017 	ldw	r6,0(r16)
  803d5c:	81c00117 	ldw	r7,4(r16)
  803d60:	ad400044 	addi	r21,r21,1
  803d64:	080d1640 	call	80d164 <__muldf3>
  803d68:	1009883a 	mov	r4,r2
  803d6c:	180b883a 	mov	r5,r3
  803d70:	a029d07a 	srai	r20,r20,1
  803d74:	84000204 	addi	r16,r16,8
  803d78:	a03ff51e 	bne	r20,zero,803d50 <_dtoa_r+0x3c8>
  803d7c:	2015883a 	mov	r10,r4
  803d80:	2813883a 	mov	r9,r5
  803d84:	d9000c17 	ldw	r4,48(sp)
  803d88:	900b883a 	mov	r5,r18
  803d8c:	500d883a 	mov	r6,r10
  803d90:	480f883a 	mov	r7,r9
  803d94:	080c5e40 	call	80c5e4 <__divdf3>
  803d98:	1021883a 	mov	r16,r2
  803d9c:	1825883a 	mov	r18,r3
  803da0:	d8800917 	ldw	r2,36(sp)
  803da4:	10000626 	beq	r2,zero,803dc0 <_dtoa_r+0x438>
  803da8:	000d883a 	mov	r6,zero
  803dac:	01cffc34 	movhi	r7,16368
  803db0:	8009883a 	mov	r4,r16
  803db4:	900b883a 	mov	r5,r18
  803db8:	080d07c0 	call	80d07c <__ledf2>
  803dbc:	10044416 	blt	r2,zero,804ed0 <_dtoa_r+0x1548>
  803dc0:	a809883a 	mov	r4,r21
  803dc4:	080e2980 	call	80e298 <__floatsidf>
  803dc8:	800d883a 	mov	r6,r16
  803dcc:	900f883a 	mov	r7,r18
  803dd0:	1009883a 	mov	r4,r2
  803dd4:	180b883a 	mov	r5,r3
  803dd8:	080d1640 	call	80d164 <__muldf3>
  803ddc:	000d883a 	mov	r6,zero
  803de0:	01d00734 	movhi	r7,16412
  803de4:	1009883a 	mov	r4,r2
  803de8:	180b883a 	mov	r5,r3
  803dec:	080bcf40 	call	80bcf4 <__adddf3>
  803df0:	1029883a 	mov	r20,r2
  803df4:	00bf3034 	movhi	r2,64704
  803df8:	1885883a 	add	r2,r3,r2
  803dfc:	d8800c15 	stw	r2,48(sp)
  803e00:	d8800517 	ldw	r2,20(sp)
  803e04:	10032226 	beq	r2,zero,804a90 <_dtoa_r+0x1108>
  803e08:	d8800417 	ldw	r2,16(sp)
  803e0c:	d8801115 	stw	r2,68(sp)
  803e10:	d8800517 	ldw	r2,20(sp)
  803e14:	d8800d15 	stw	r2,52(sp)
  803e18:	d8800d17 	ldw	r2,52(sp)
  803e1c:	900b883a 	mov	r5,r18
  803e20:	8009883a 	mov	r4,r16
  803e24:	10bfffc4 	addi	r2,r2,-1
  803e28:	100690fa 	slli	r3,r2,3
  803e2c:	00802074 	movhi	r2,129
  803e30:	10841204 	addi	r2,r2,4168
  803e34:	10c5883a 	add	r2,r2,r3
  803e38:	12800017 	ldw	r10,0(r2)
  803e3c:	12c00117 	ldw	r11,4(r2)
  803e40:	da800f15 	stw	r10,60(sp)
  803e44:	dac00e15 	stw	r11,56(sp)
  803e48:	080e2180 	call	80e218 <__fixdfsi>
  803e4c:	1009883a 	mov	r4,r2
  803e50:	10800c04 	addi	r2,r2,48
  803e54:	d8801015 	stw	r2,64(sp)
  803e58:	080e2980 	call	80e298 <__floatsidf>
  803e5c:	8009883a 	mov	r4,r16
  803e60:	100d883a 	mov	r6,r2
  803e64:	180f883a 	mov	r7,r3
  803e68:	900b883a 	mov	r5,r18
  803e6c:	080d9100 	call	80d910 <__subdf3>
  803e70:	d9000117 	ldw	r4,4(sp)
  803e74:	dac00e17 	ldw	r11,56(sp)
  803e78:	da800f17 	ldw	r10,60(sp)
  803e7c:	1825883a 	mov	r18,r3
  803e80:	d8c00717 	ldw	r3,28(sp)
  803e84:	25400044 	addi	r21,r4,1
  803e88:	1021883a 	mov	r16,r2
  803e8c:	500d883a 	mov	r6,r10
  803e90:	580f883a 	mov	r7,r11
  803e94:	1803b626 	beq	r3,zero,804d70 <_dtoa_r+0x13e8>
  803e98:	0009883a 	mov	r4,zero
  803e9c:	014ff834 	movhi	r5,16352
  803ea0:	080c5e40 	call	80c5e4 <__divdf3>
  803ea4:	d9c00c17 	ldw	r7,48(sp)
  803ea8:	a00d883a 	mov	r6,r20
  803eac:	1009883a 	mov	r4,r2
  803eb0:	180b883a 	mov	r5,r3
  803eb4:	080d9100 	call	80d910 <__subdf3>
  803eb8:	d9000117 	ldw	r4,4(sp)
  803ebc:	1029883a 	mov	r20,r2
  803ec0:	d8801017 	ldw	r2,64(sp)
  803ec4:	800d883a 	mov	r6,r16
  803ec8:	900f883a 	mov	r7,r18
  803ecc:	20800005 	stb	r2,0(r4)
  803ed0:	180b883a 	mov	r5,r3
  803ed4:	a009883a 	mov	r4,r20
  803ed8:	d8c00c15 	stw	r3,48(sp)
  803edc:	080cf940 	call	80cf94 <__gedf2>
  803ee0:	0083e716 	blt	zero,r2,804e80 <_dtoa_r+0x14f8>
  803ee4:	0005883a 	mov	r2,zero
  803ee8:	dd800e15 	stw	r22,56(sp)
  803eec:	dc400f15 	stw	r17,60(sp)
  803ef0:	dd800d17 	ldw	r22,52(sp)
  803ef4:	dc400c17 	ldw	r17,48(sp)
  803ef8:	ddc00d15 	stw	r23,52(sp)
  803efc:	dcc00c15 	stw	r19,48(sp)
  803f00:	1027883a 	mov	r19,r2
  803f04:	00002606 	br	803fa0 <_dtoa_r+0x618>
  803f08:	9cc00044 	addi	r19,r19,1
  803f0c:	9d806d0e 	bge	r19,r22,8040c4 <_dtoa_r+0x73c>
  803f10:	a009883a 	mov	r4,r20
  803f14:	880b883a 	mov	r5,r17
  803f18:	000d883a 	mov	r6,zero
  803f1c:	01d00934 	movhi	r7,16420
  803f20:	080d1640 	call	80d164 <__muldf3>
  803f24:	000d883a 	mov	r6,zero
  803f28:	01d00934 	movhi	r7,16420
  803f2c:	8009883a 	mov	r4,r16
  803f30:	900b883a 	mov	r5,r18
  803f34:	1029883a 	mov	r20,r2
  803f38:	1823883a 	mov	r17,r3
  803f3c:	080d1640 	call	80d164 <__muldf3>
  803f40:	180b883a 	mov	r5,r3
  803f44:	1009883a 	mov	r4,r2
  803f48:	1821883a 	mov	r16,r3
  803f4c:	1025883a 	mov	r18,r2
  803f50:	080e2180 	call	80e218 <__fixdfsi>
  803f54:	1009883a 	mov	r4,r2
  803f58:	102f883a 	mov	r23,r2
  803f5c:	080e2980 	call	80e298 <__floatsidf>
  803f60:	9009883a 	mov	r4,r18
  803f64:	800b883a 	mov	r5,r16
  803f68:	100d883a 	mov	r6,r2
  803f6c:	180f883a 	mov	r7,r3
  803f70:	080d9100 	call	80d910 <__subdf3>
  803f74:	ad400044 	addi	r21,r21,1
  803f78:	ba000c04 	addi	r8,r23,48
  803f7c:	aa3fffc5 	stb	r8,-1(r21)
  803f80:	a00d883a 	mov	r6,r20
  803f84:	880f883a 	mov	r7,r17
  803f88:	1009883a 	mov	r4,r2
  803f8c:	180b883a 	mov	r5,r3
  803f90:	1021883a 	mov	r16,r2
  803f94:	1825883a 	mov	r18,r3
  803f98:	080d07c0 	call	80d07c <__ledf2>
  803f9c:	10040516 	blt	r2,zero,804fb4 <_dtoa_r+0x162c>
  803fa0:	800d883a 	mov	r6,r16
  803fa4:	900f883a 	mov	r7,r18
  803fa8:	0009883a 	mov	r4,zero
  803fac:	014ffc34 	movhi	r5,16368
  803fb0:	080d9100 	call	80d910 <__subdf3>
  803fb4:	a00d883a 	mov	r6,r20
  803fb8:	880f883a 	mov	r7,r17
  803fbc:	1009883a 	mov	r4,r2
  803fc0:	180b883a 	mov	r5,r3
  803fc4:	080d07c0 	call	80d07c <__ledf2>
  803fc8:	103fcf0e 	bge	r2,zero,803f08 <_dtoa_r+0x580>
  803fcc:	d8801117 	ldw	r2,68(sp)
  803fd0:	ddc00d17 	ldw	r23,52(sp)
  803fd4:	d9000117 	ldw	r4,4(sp)
  803fd8:	10800044 	addi	r2,r2,1
  803fdc:	d8800415 	stw	r2,16(sp)
  803fe0:	a829883a 	mov	r20,r21
  803fe4:	00000106 	br	803fec <_dtoa_r+0x664>
  803fe8:	a103da26 	beq	r20,r4,804f54 <_dtoa_r+0x15cc>
  803fec:	a0ffffc3 	ldbu	r3,-1(r20)
  803ff0:	a02b883a 	mov	r21,r20
  803ff4:	a53fffc4 	addi	r20,r20,-1
  803ff8:	18803fcc 	andi	r2,r3,255
  803ffc:	1080201c 	xori	r2,r2,128
  804000:	10bfe004 	addi	r2,r2,-128
  804004:	10800e60 	cmpeqi	r2,r2,57
  804008:	103ff71e 	bne	r2,zero,803fe8 <_dtoa_r+0x660>
  80400c:	18c00044 	addi	r3,r3,1
  804010:	a0c00005 	stb	r3,0(r20)
  804014:	00013f06 	br	804514 <_dtoa_r+0xb8c>
  804018:	04600034 	movhi	r17,32768
  80401c:	8c7fffc4 	addi	r17,r17,-1
  804020:	9462703a 	and	r17,r18,r17
  804024:	00800044 	movi	r2,1
  804028:	8825883a 	mov	r18,r17
  80402c:	80800015 	stw	r2,0(r16)
  804030:	00dffc34 	movhi	r3,32752
  804034:	909ffc2c 	andhi	r2,r18,32752
  804038:	10fe731e 	bne	r2,r3,803a08 <_dtoa_r+0x80>
  80403c:	d9001f17 	ldw	r4,124(sp)
  804040:	00800434 	movhi	r2,16
  804044:	10bfffc4 	addi	r2,r2,-1
  804048:	9084703a 	and	r2,r18,r2
  80404c:	00c9c3c4 	movi	r3,9999
  804050:	20c00015 	stw	r3,0(r4)
  804054:	14e6b03a 	or	r19,r2,r19
  804058:	9800141e 	bne	r19,zero,8040ac <_dtoa_r+0x724>
  80405c:	d8802117 	ldw	r2,132(sp)
  804060:	10041226 	beq	r2,zero,8050ac <_dtoa_r+0x1724>
  804064:	00802074 	movhi	r2,129
  804068:	1007883a 	mov	r3,r2
  80406c:	18c3d304 	addi	r3,r3,3916
  804070:	00802074 	movhi	r2,129
  804074:	d8c00115 	stw	r3,4(sp)
  804078:	1083d504 	addi	r2,r2,3924
  80407c:	d8c02117 	ldw	r3,132(sp)
  804080:	18800015 	stw	r2,0(r3)
  804084:	003e7206 	br	803a50 <_dtoa_r+0xc8>
  804088:	01400434 	movhi	r5,16
  80408c:	297fffc4 	addi	r5,r5,-1
  804090:	894a703a 	and	r5,r17,r5
  804094:	dd001217 	ldw	r20,72(sp)
  804098:	9809883a 	mov	r4,r19
  80409c:	294ffc34 	orhi	r5,r5,16368
  8040a0:	843f0044 	addi	r16,r16,-1023
  8040a4:	d8000a15 	stw	zero,40(sp)
  8040a8:	003e9306 	br	803af8 <_dtoa_r+0x170>
  8040ac:	d8802117 	ldw	r2,132(sp)
  8040b0:	1001fe1e 	bne	r2,zero,8048ac <_dtoa_r+0xf24>
  8040b4:	00802074 	movhi	r2,129
  8040b8:	1083d204 	addi	r2,r2,3912
  8040bc:	d8800115 	stw	r2,4(sp)
  8040c0:	003e6306 	br	803a50 <_dtoa_r+0xc8>
  8040c4:	dd800e17 	ldw	r22,56(sp)
  8040c8:	ddc00d17 	ldw	r23,52(sp)
  8040cc:	dc400f17 	ldw	r17,60(sp)
  8040d0:	dcc00c17 	ldw	r19,48(sp)
  8040d4:	d8801317 	ldw	r2,76(sp)
  8040d8:	10006e16 	blt	r2,zero,804294 <_dtoa_r+0x90c>
  8040dc:	d9000417 	ldw	r4,16(sp)
  8040e0:	20c003c8 	cmpgei	r3,r4,15
  8040e4:	18006b1e 	bne	r3,zero,804294 <_dtoa_r+0x90c>
  8040e8:	200690fa 	slli	r3,r4,3
  8040ec:	00802074 	movhi	r2,129
  8040f0:	10841204 	addi	r2,r2,4168
  8040f4:	10c5883a 	add	r2,r2,r3
  8040f8:	14000017 	ldw	r16,0(r2)
  8040fc:	14800117 	ldw	r18,4(r2)
  804100:	d8801e17 	ldw	r2,120(sp)
  804104:	1000150e 	bge	r2,zero,80415c <_dtoa_r+0x7d4>
  804108:	d8800517 	ldw	r2,20(sp)
  80410c:	00801316 	blt	zero,r2,80415c <_dtoa_r+0x7d4>
  804110:	d8800517 	ldw	r2,20(sp)
  804114:	1002721e 	bne	r2,zero,804ae0 <_dtoa_r+0x1158>
  804118:	8009883a 	mov	r4,r16
  80411c:	000d883a 	mov	r6,zero
  804120:	01d00534 	movhi	r7,16404
  804124:	900b883a 	mov	r5,r18
  804128:	080d1640 	call	80d164 <__muldf3>
  80412c:	100d883a 	mov	r6,r2
  804130:	180f883a 	mov	r7,r3
  804134:	9809883a 	mov	r4,r19
  804138:	880b883a 	mov	r5,r17
  80413c:	080d07c0 	call	80d07c <__ledf2>
  804140:	0029883a 	mov	r20,zero
  804144:	0021883a 	mov	r16,zero
  804148:	00820216 	blt	zero,r2,804954 <_dtoa_r+0xfcc>
  80414c:	d8801e17 	ldw	r2,120(sp)
  804150:	dd400117 	ldw	r21,4(sp)
  804154:	00a2303a 	nor	r17,zero,r2
  804158:	00020406 	br	80496c <_dtoa_r+0xfe4>
  80415c:	800d883a 	mov	r6,r16
  804160:	900f883a 	mov	r7,r18
  804164:	9809883a 	mov	r4,r19
  804168:	880b883a 	mov	r5,r17
  80416c:	080c5e40 	call	80c5e4 <__divdf3>
  804170:	180b883a 	mov	r5,r3
  804174:	1009883a 	mov	r4,r2
  804178:	080e2180 	call	80e218 <__fixdfsi>
  80417c:	1009883a 	mov	r4,r2
  804180:	102b883a 	mov	r21,r2
  804184:	080e2980 	call	80e298 <__floatsidf>
  804188:	800d883a 	mov	r6,r16
  80418c:	900f883a 	mov	r7,r18
  804190:	1009883a 	mov	r4,r2
  804194:	180b883a 	mov	r5,r3
  804198:	080d1640 	call	80d164 <__muldf3>
  80419c:	100d883a 	mov	r6,r2
  8041a0:	9809883a 	mov	r4,r19
  8041a4:	880b883a 	mov	r5,r17
  8041a8:	180f883a 	mov	r7,r3
  8041ac:	080d9100 	call	80d910 <__subdf3>
  8041b0:	d9800117 	ldw	r6,4(sp)
  8041b4:	dd800517 	ldw	r22,20(sp)
  8041b8:	1009883a 	mov	r4,r2
  8041bc:	a8800c04 	addi	r2,r21,48
  8041c0:	30800005 	stb	r2,0(r6)
  8041c4:	b0800060 	cmpeqi	r2,r22,1
  8041c8:	180b883a 	mov	r5,r3
  8041cc:	35000044 	addi	r20,r6,1
  8041d0:	10029f1e 	bne	r2,zero,804c50 <_dtoa_r+0x12c8>
  8041d4:	04400044 	movi	r17,1
  8041d8:	ddc00215 	stw	r23,8(sp)
  8041dc:	00001c06 	br	804250 <_dtoa_r+0x8c8>
  8041e0:	800d883a 	mov	r6,r16
  8041e4:	900f883a 	mov	r7,r18
  8041e8:	a809883a 	mov	r4,r21
  8041ec:	980b883a 	mov	r5,r19
  8041f0:	080c5e40 	call	80c5e4 <__divdf3>
  8041f4:	180b883a 	mov	r5,r3
  8041f8:	1009883a 	mov	r4,r2
  8041fc:	080e2180 	call	80e218 <__fixdfsi>
  804200:	1009883a 	mov	r4,r2
  804204:	102f883a 	mov	r23,r2
  804208:	080e2980 	call	80e298 <__floatsidf>
  80420c:	800d883a 	mov	r6,r16
  804210:	900f883a 	mov	r7,r18
  804214:	1009883a 	mov	r4,r2
  804218:	180b883a 	mov	r5,r3
  80421c:	080d1640 	call	80d164 <__muldf3>
  804220:	a809883a 	mov	r4,r21
  804224:	980b883a 	mov	r5,r19
  804228:	100d883a 	mov	r6,r2
  80422c:	180f883a 	mov	r7,r3
  804230:	080d9100 	call	80d910 <__subdf3>
  804234:	b9000c04 	addi	r4,r23,48
  804238:	a1000005 	stb	r4,0(r20)
  80423c:	8c400044 	addi	r17,r17,1
  804240:	a5000044 	addi	r20,r20,1
  804244:	1009883a 	mov	r4,r2
  804248:	180b883a 	mov	r5,r3
  80424c:	8d827e26 	beq	r17,r22,804c48 <_dtoa_r+0x12c0>
  804250:	000d883a 	mov	r6,zero
  804254:	01d00934 	movhi	r7,16420
  804258:	080d1640 	call	80d164 <__muldf3>
  80425c:	000d883a 	mov	r6,zero
  804260:	000f883a 	mov	r7,zero
  804264:	1009883a 	mov	r4,r2
  804268:	180b883a 	mov	r5,r3
  80426c:	102b883a 	mov	r21,r2
  804270:	1827883a 	mov	r19,r3
  804274:	080cf140 	call	80cf14 <__eqdf2>
  804278:	103fd91e 	bne	r2,zero,8041e0 <_dtoa_r+0x858>
  80427c:	d8800417 	ldw	r2,16(sp)
  804280:	ddc00217 	ldw	r23,8(sp)
  804284:	a02b883a 	mov	r21,r20
  804288:	10800044 	addi	r2,r2,1
  80428c:	d8800415 	stw	r2,16(sp)
  804290:	0000a006 	br	804514 <_dtoa_r+0xb8c>
  804294:	d8c00717 	ldw	r3,28(sp)
  804298:	1800e326 	beq	r3,zero,804628 <_dtoa_r+0xca0>
  80429c:	d8c00217 	ldw	r3,8(sp)
  8042a0:	18c00088 	cmpgei	r3,r3,2
  8042a4:	1801e026 	beq	r3,zero,804a28 <_dtoa_r+0x10a0>
  8042a8:	d8800517 	ldw	r2,20(sp)
  8042ac:	153fffc4 	addi	r20,r2,-1
  8042b0:	d8800817 	ldw	r2,32(sp)
  8042b4:	1501bc0e 	bge	r2,r20,8049a8 <_dtoa_r+0x1020>
  8042b8:	d8800817 	ldw	r2,32(sp)
  8042bc:	d8c00317 	ldw	r3,12(sp)
  8042c0:	dd000815 	stw	r20,32(sp)
  8042c4:	a085c83a 	sub	r2,r20,r2
  8042c8:	1885883a 	add	r2,r3,r2
  8042cc:	d8800315 	stw	r2,12(sp)
  8042d0:	0029883a 	mov	r20,zero
  8042d4:	d8800517 	ldw	r2,20(sp)
  8042d8:	10028b16 	blt	r2,zero,804d08 <_dtoa_r+0x1380>
  8042dc:	d8c00617 	ldw	r3,24(sp)
  8042e0:	b0ad883a 	add	r22,r22,r2
  8042e4:	1885883a 	add	r2,r3,r2
  8042e8:	1825883a 	mov	r18,r3
  8042ec:	d8800615 	stw	r2,24(sp)
  8042f0:	01400044 	movi	r5,1
  8042f4:	b809883a 	mov	r4,r23
  8042f8:	080744c0 	call	80744c <__i2b>
  8042fc:	1021883a 	mov	r16,r2
  804300:	0480080e 	bge	zero,r18,804324 <_dtoa_r+0x99c>
  804304:	0580070e 	bge	zero,r22,804324 <_dtoa_r+0x99c>
  804308:	9005883a 	mov	r2,r18
  80430c:	b4819e16 	blt	r22,r18,804988 <_dtoa_r+0x1000>
  804310:	d8c00617 	ldw	r3,24(sp)
  804314:	90a5c83a 	sub	r18,r18,r2
  804318:	b0adc83a 	sub	r22,r22,r2
  80431c:	1887c83a 	sub	r3,r3,r2
  804320:	d8c00615 	stw	r3,24(sp)
  804324:	d8800817 	ldw	r2,32(sp)
  804328:	10001426 	beq	r2,zero,80437c <_dtoa_r+0x9f4>
  80432c:	d8800717 	ldw	r2,28(sp)
  804330:	1001ee26 	beq	r2,zero,804aec <_dtoa_r+0x1164>
  804334:	05000e0e 	bge	zero,r20,804370 <_dtoa_r+0x9e8>
  804338:	800b883a 	mov	r5,r16
  80433c:	a00d883a 	mov	r6,r20
  804340:	b809883a 	mov	r4,r23
  804344:	08077c00 	call	8077c0 <__pow5mult>
  804348:	e00d883a 	mov	r6,fp
  80434c:	100b883a 	mov	r5,r2
  804350:	b809883a 	mov	r4,r23
  804354:	1021883a 	mov	r16,r2
  804358:	08074fc0 	call	8074fc <__multiply>
  80435c:	102b883a 	mov	r21,r2
  804360:	e00b883a 	mov	r5,fp
  804364:	b809883a 	mov	r4,r23
  804368:	08070800 	call	807080 <_Bfree>
  80436c:	a839883a 	mov	fp,r21
  804370:	d8800817 	ldw	r2,32(sp)
  804374:	150dc83a 	sub	r6,r2,r20
  804378:	15025e1e 	bne	r2,r20,804cf4 <_dtoa_r+0x136c>
  80437c:	01400044 	movi	r5,1
  804380:	b809883a 	mov	r4,r23
  804384:	080744c0 	call	80744c <__i2b>
  804388:	d9800317 	ldw	r6,12(sp)
  80438c:	1029883a 	mov	r20,r2
  804390:	0180b716 	blt	zero,r6,804670 <_dtoa_r+0xce8>
  804394:	d8800217 	ldw	r2,8(sp)
  804398:	10800088 	cmpgei	r2,r2,2
  80439c:	10014d26 	beq	r2,zero,8048d4 <_dtoa_r+0xf4c>
  8043a0:	0023883a 	mov	r17,zero
  8043a4:	d8c00317 	ldw	r3,12(sp)
  8043a8:	00800044 	movi	r2,1
  8043ac:	1800b81e 	bne	r3,zero,804690 <_dtoa_r+0xd08>
  8043b0:	1585883a 	add	r2,r2,r22
  8043b4:	108007cc 	andi	r2,r2,31
  8043b8:	1000a526 	beq	r2,zero,804650 <_dtoa_r+0xcc8>
  8043bc:	00c00804 	movi	r3,32
  8043c0:	1887c83a 	sub	r3,r3,r2
  8043c4:	19000150 	cmplti	r4,r3,5
  8043c8:	20033c1e 	bne	r4,zero,8050bc <_dtoa_r+0x1734>
  8043cc:	00c00704 	movi	r3,28
  8043d0:	1885c83a 	sub	r2,r3,r2
  8043d4:	d8c00617 	ldw	r3,24(sp)
  8043d8:	90a5883a 	add	r18,r18,r2
  8043dc:	b0ad883a 	add	r22,r22,r2
  8043e0:	1887883a 	add	r3,r3,r2
  8043e4:	d8c00615 	stw	r3,24(sp)
  8043e8:	d8800617 	ldw	r2,24(sp)
  8043ec:	00809216 	blt	zero,r2,804638 <_dtoa_r+0xcb0>
  8043f0:	0580050e 	bge	zero,r22,804408 <_dtoa_r+0xa80>
  8043f4:	a00b883a 	mov	r5,r20
  8043f8:	b00d883a 	mov	r6,r22
  8043fc:	b809883a 	mov	r4,r23
  804400:	08079080 	call	807908 <__lshift>
  804404:	1029883a 	mov	r20,r2
  804408:	d8800917 	ldw	r2,36(sp)
  80440c:	1001151e 	bne	r2,zero,804864 <_dtoa_r+0xedc>
  804410:	d8800517 	ldw	r2,20(sp)
  804414:	0081020e 	bge	zero,r2,804820 <_dtoa_r+0xe98>
  804418:	d8800717 	ldw	r2,28(sp)
  80441c:	1000af1e 	bne	r2,zero,8046dc <_dtoa_r+0xd54>
  804420:	d8800417 	ldw	r2,16(sp)
  804424:	10800044 	addi	r2,r2,1
  804428:	d8800415 	stw	r2,16(sp)
  80442c:	dc800517 	ldw	r18,20(sp)
  804430:	dd400117 	ldw	r21,4(sp)
  804434:	04400044 	movi	r17,1
  804438:	00000706 	br	804458 <_dtoa_r+0xad0>
  80443c:	e00b883a 	mov	r5,fp
  804440:	000f883a 	mov	r7,zero
  804444:	01800284 	movi	r6,10
  804448:	b809883a 	mov	r4,r23
  80444c:	08070a40 	call	8070a4 <__multadd>
  804450:	1039883a 	mov	fp,r2
  804454:	8c400044 	addi	r17,r17,1
  804458:	a00b883a 	mov	r5,r20
  80445c:	e009883a 	mov	r4,fp
  804460:	08037680 	call	803768 <quorem>
  804464:	14c00c04 	addi	r19,r2,48
  804468:	ac45883a 	add	r2,r21,r17
  80446c:	14ffffc5 	stb	r19,-1(r2)
  804470:	8cbff216 	blt	r17,r18,80443c <_dtoa_r+0xab4>
  804474:	d8800517 	ldw	r2,20(sp)
  804478:	0081510e 	bge	zero,r2,8049c0 <_dtoa_r+0x1038>
  80447c:	d8c00117 	ldw	r3,4(sp)
  804480:	0023883a 	mov	r17,zero
  804484:	18ab883a 	add	r21,r3,r2
  804488:	e00b883a 	mov	r5,fp
  80448c:	01800044 	movi	r6,1
  804490:	b809883a 	mov	r4,r23
  804494:	08079080 	call	807908 <__lshift>
  804498:	1009883a 	mov	r4,r2
  80449c:	a00b883a 	mov	r5,r20
  8044a0:	1039883a 	mov	fp,r2
  8044a4:	0807a900 	call	807a90 <__mcmp>
  8044a8:	a93fffc3 	ldbu	r4,-1(r21)
  8044ac:	0081490e 	bge	zero,r2,8049d4 <_dtoa_r+0x104c>
  8044b0:	d9400117 	ldw	r5,4(sp)
  8044b4:	00000306 	br	8044c4 <_dtoa_r+0xb3c>
  8044b8:	19415426 	beq	r3,r5,804a0c <_dtoa_r+0x1084>
  8044bc:	193fffc3 	ldbu	r4,-1(r3)
  8044c0:	182b883a 	mov	r21,r3
  8044c4:	20803fcc 	andi	r2,r4,255
  8044c8:	1080201c 	xori	r2,r2,128
  8044cc:	10bfe004 	addi	r2,r2,-128
  8044d0:	10800e60 	cmpeqi	r2,r2,57
  8044d4:	a8ffffc4 	addi	r3,r21,-1
  8044d8:	103ff71e 	bne	r2,zero,8044b8 <_dtoa_r+0xb30>
  8044dc:	21000044 	addi	r4,r4,1
  8044e0:	19000005 	stb	r4,0(r3)
  8044e4:	a00b883a 	mov	r5,r20
  8044e8:	b809883a 	mov	r4,r23
  8044ec:	08070800 	call	807080 <_Bfree>
  8044f0:	80000826 	beq	r16,zero,804514 <_dtoa_r+0xb8c>
  8044f4:	88000426 	beq	r17,zero,804508 <_dtoa_r+0xb80>
  8044f8:	8c000326 	beq	r17,r16,804508 <_dtoa_r+0xb80>
  8044fc:	880b883a 	mov	r5,r17
  804500:	b809883a 	mov	r4,r23
  804504:	08070800 	call	807080 <_Bfree>
  804508:	800b883a 	mov	r5,r16
  80450c:	b809883a 	mov	r4,r23
  804510:	08070800 	call	807080 <_Bfree>
  804514:	e00b883a 	mov	r5,fp
  804518:	b809883a 	mov	r4,r23
  80451c:	08070800 	call	807080 <_Bfree>
  804520:	d8801f17 	ldw	r2,124(sp)
  804524:	d8c00417 	ldw	r3,16(sp)
  804528:	a8000005 	stb	zero,0(r21)
  80452c:	10c00015 	stw	r3,0(r2)
  804530:	d8802117 	ldw	r2,132(sp)
  804534:	103d4626 	beq	r2,zero,803a50 <_dtoa_r+0xc8>
  804538:	15400015 	stw	r21,0(r2)
  80453c:	003d4406 	br	803a50 <_dtoa_r+0xc8>
  804540:	d8000915 	stw	zero,36(sp)
  804544:	b0002416 	blt	r22,zero,8045d8 <_dtoa_r+0xc50>
  804548:	d8000615 	stw	zero,24(sp)
  80454c:	d8800317 	ldw	r2,12(sp)
  804550:	d8c00217 	ldw	r3,8(sp)
  804554:	d8000815 	stw	zero,32(sp)
  804558:	b0ad883a 	add	r22,r22,r2
  80455c:	d8800415 	stw	r2,16(sp)
  804560:	188002a8 	cmpgeui	r2,r3,10
  804564:	103db326 	beq	r2,zero,803c34 <_dtoa_r+0x2ac>
  804568:	00800044 	movi	r2,1
  80456c:	d8800715 	stw	r2,28(sp)
  804570:	00bfffc4 	movi	r2,-1
  804574:	04000044 	movi	r16,1
  804578:	d8000215 	stw	zero,8(sp)
  80457c:	d8800515 	stw	r2,20(sp)
  804580:	d8001e15 	stw	zero,120(sp)
  804584:	d8800517 	ldw	r2,20(sp)
  804588:	b8001115 	stw	zero,68(r23)
  80458c:	000b883a 	mov	r5,zero
  804590:	d8800b15 	stw	r2,44(sp)
  804594:	003dc406 	br	803ca8 <_dtoa_r+0x320>
  804598:	188000e0 	cmpeqi	r2,r3,3
  80459c:	d8000715 	stw	zero,28(sp)
  8045a0:	1002ac26 	beq	r2,zero,805054 <_dtoa_r+0x16cc>
  8045a4:	d8801e17 	ldw	r2,120(sp)
  8045a8:	d8c00417 	ldw	r3,16(sp)
  8045ac:	10c5883a 	add	r2,r2,r3
  8045b0:	d8800b15 	stw	r2,44(sp)
  8045b4:	10800044 	addi	r2,r2,1
  8045b8:	d8800515 	stw	r2,20(sp)
  8045bc:	100d883a 	mov	r6,r2
  8045c0:	00bdae16 	blt	zero,r2,803c7c <_dtoa_r+0x2f4>
  8045c4:	01800044 	movi	r6,1
  8045c8:	003dac06 	br	803c7c <_dtoa_r+0x2f4>
  8045cc:	00800044 	movi	r2,1
  8045d0:	d8800915 	stw	r2,36(sp)
  8045d4:	b03d890e 	bge	r22,zero,803bfc <_dtoa_r+0x274>
  8045d8:	00800044 	movi	r2,1
  8045dc:	1405c83a 	sub	r2,r2,r16
  8045e0:	d8800615 	stw	r2,24(sp)
  8045e4:	002d883a 	mov	r22,zero
  8045e8:	003d8506 	br	803c00 <_dtoa_r+0x278>
  8045ec:	a809883a 	mov	r4,r21
  8045f0:	080e2980 	call	80e298 <__floatsidf>
  8045f4:	900d883a 	mov	r6,r18
  8045f8:	b00f883a 	mov	r7,r22
  8045fc:	1009883a 	mov	r4,r2
  804600:	180b883a 	mov	r5,r3
  804604:	080cf140 	call	80cf14 <__eqdf2>
  804608:	103d6926 	beq	r2,zero,803bb0 <_dtoa_r+0x228>
  80460c:	a8bfffc4 	addi	r2,r21,-1
  804610:	d8800315 	stw	r2,12(sp)
  804614:	003d6606 	br	803bb0 <_dtoa_r+0x228>
  804618:	00802074 	movhi	r2,129
  80461c:	1083c904 	addi	r2,r2,3876
  804620:	d8800115 	stw	r2,4(sp)
  804624:	003d0a06 	br	803a50 <_dtoa_r+0xc8>
  804628:	dd000817 	ldw	r20,32(sp)
  80462c:	dc800617 	ldw	r18,24(sp)
  804630:	0021883a 	mov	r16,zero
  804634:	003f3206 	br	804300 <_dtoa_r+0x978>
  804638:	e00b883a 	mov	r5,fp
  80463c:	100d883a 	mov	r6,r2
  804640:	b809883a 	mov	r4,r23
  804644:	08079080 	call	807908 <__lshift>
  804648:	1039883a 	mov	fp,r2
  80464c:	003f6806 	br	8043f0 <_dtoa_r+0xa68>
  804650:	00800704 	movi	r2,28
  804654:	003f5f06 	br	8043d4 <_dtoa_r+0xa4c>
  804658:	01000804 	movi	r4,32
  80465c:	2089c83a 	sub	r4,r4,r2
  804660:	9908983a 	sll	r4,r19,r4
  804664:	003d1d06 	br	803adc <_dtoa_r+0x154>
  804668:	04000044 	movi	r16,1
  80466c:	003d7606 	br	803c48 <_dtoa_r+0x2c0>
  804670:	100b883a 	mov	r5,r2
  804674:	b809883a 	mov	r4,r23
  804678:	08077c00 	call	8077c0 <__pow5mult>
  80467c:	d8c00217 	ldw	r3,8(sp)
  804680:	1029883a 	mov	r20,r2
  804684:	18c00090 	cmplti	r3,r3,2
  804688:	1801511e 	bne	r3,zero,804bd0 <_dtoa_r+0x1248>
  80468c:	0023883a 	mov	r17,zero
  804690:	a0800417 	ldw	r2,16(r20)
  804694:	10800104 	addi	r2,r2,4
  804698:	100490ba 	slli	r2,r2,2
  80469c:	a085883a 	add	r2,r20,r2
  8046a0:	11000017 	ldw	r4,0(r2)
  8046a4:	08073380 	call	807338 <__hi0bits>
  8046a8:	00c00804 	movi	r3,32
  8046ac:	1885c83a 	sub	r2,r3,r2
  8046b0:	003f3f06 	br	8043b0 <_dtoa_r+0xa28>
  8046b4:	800b883a 	mov	r5,r16
  8046b8:	000f883a 	mov	r7,zero
  8046bc:	01800284 	movi	r6,10
  8046c0:	b809883a 	mov	r4,r23
  8046c4:	08070a40 	call	8070a4 <__multadd>
  8046c8:	1021883a 	mov	r16,r2
  8046cc:	d8800b17 	ldw	r2,44(sp)
  8046d0:	00824b0e 	bge	zero,r2,805000 <_dtoa_r+0x1678>
  8046d4:	dd400415 	stw	r21,16(sp)
  8046d8:	d8800515 	stw	r2,20(sp)
  8046dc:	0480ac16 	blt	zero,r18,804990 <_dtoa_r+0x1008>
  8046e0:	8801731e 	bne	r17,zero,804cb0 <_dtoa_r+0x1328>
  8046e4:	8025883a 	mov	r18,r16
  8046e8:	dd800117 	ldw	r22,4(sp)
  8046ec:	d9000517 	ldw	r4,20(sp)
  8046f0:	98c0004c 	andi	r3,r19,1
  8046f4:	b0bfffc4 	addi	r2,r22,-1
  8046f8:	1105883a 	add	r2,r2,r4
  8046fc:	d8800515 	stw	r2,20(sp)
  804700:	d8800217 	ldw	r2,8(sp)
  804704:	d8c00815 	stw	r3,32(sp)
  804708:	1884b03a 	or	r2,r3,r2
  80470c:	d8800715 	stw	r2,28(sp)
  804710:	00002906 	br	8047b8 <_dtoa_r+0xe30>
  804714:	e009883a 	mov	r4,fp
  804718:	0807a900 	call	807a90 <__mcmp>
  80471c:	980b883a 	mov	r5,r19
  804720:	b809883a 	mov	r4,r23
  804724:	d8800315 	stw	r2,12(sp)
  804728:	08070800 	call	807080 <_Bfree>
  80472c:	d8800317 	ldw	r2,12(sp)
  804730:	1000021e 	bne	r2,zero,80473c <_dtoa_r+0xdb4>
  804734:	d8c00717 	ldw	r3,28(sp)
  804738:	18022326 	beq	r3,zero,804fc8 <_dtoa_r+0x1640>
  80473c:	b4c00044 	addi	r19,r22,1
  804740:	88012916 	blt	r17,zero,804be8 <_dtoa_r+0x1260>
  804744:	d8c00217 	ldw	r3,8(sp)
  804748:	88e2b03a 	or	r17,r17,r3
  80474c:	d8c00817 	ldw	r3,32(sp)
  804750:	1c62b03a 	or	r17,r3,r17
  804754:	88012426 	beq	r17,zero,804be8 <_dtoa_r+0x1260>
  804758:	00816f16 	blt	zero,r2,804d18 <_dtoa_r+0x1390>
  80475c:	d8800517 	ldw	r2,20(sp)
  804760:	b5400005 	stb	r21,0(r22)
  804764:	15817926 	beq	r2,r22,804d4c <_dtoa_r+0x13c4>
  804768:	e00b883a 	mov	r5,fp
  80476c:	000f883a 	mov	r7,zero
  804770:	01800284 	movi	r6,10
  804774:	b809883a 	mov	r4,r23
  804778:	08070a40 	call	8070a4 <__multadd>
  80477c:	1039883a 	mov	fp,r2
  804780:	800b883a 	mov	r5,r16
  804784:	000f883a 	mov	r7,zero
  804788:	01800284 	movi	r6,10
  80478c:	b809883a 	mov	r4,r23
  804790:	84801f26 	beq	r16,r18,804810 <_dtoa_r+0xe88>
  804794:	08070a40 	call	8070a4 <__multadd>
  804798:	900b883a 	mov	r5,r18
  80479c:	000f883a 	mov	r7,zero
  8047a0:	01800284 	movi	r6,10
  8047a4:	b809883a 	mov	r4,r23
  8047a8:	1021883a 	mov	r16,r2
  8047ac:	08070a40 	call	8070a4 <__multadd>
  8047b0:	1025883a 	mov	r18,r2
  8047b4:	982d883a 	mov	r22,r19
  8047b8:	a00b883a 	mov	r5,r20
  8047bc:	e009883a 	mov	r4,fp
  8047c0:	08037680 	call	803768 <quorem>
  8047c4:	800b883a 	mov	r5,r16
  8047c8:	e009883a 	mov	r4,fp
  8047cc:	102b883a 	mov	r21,r2
  8047d0:	d8800615 	stw	r2,24(sp)
  8047d4:	0807a900 	call	807a90 <__mcmp>
  8047d8:	a00b883a 	mov	r5,r20
  8047dc:	900d883a 	mov	r6,r18
  8047e0:	b809883a 	mov	r4,r23
  8047e4:	1023883a 	mov	r17,r2
  8047e8:	0807ae80 	call	807ae8 <__mdiff>
  8047ec:	1027883a 	mov	r19,r2
  8047f0:	10800317 	ldw	r2,12(r2)
  8047f4:	ad400c04 	addi	r21,r21,48
  8047f8:	980b883a 	mov	r5,r19
  8047fc:	103fc526 	beq	r2,zero,804714 <_dtoa_r+0xd8c>
  804800:	b809883a 	mov	r4,r23
  804804:	08070800 	call	807080 <_Bfree>
  804808:	00800044 	movi	r2,1
  80480c:	003fcb06 	br	80473c <_dtoa_r+0xdb4>
  804810:	08070a40 	call	8070a4 <__multadd>
  804814:	1021883a 	mov	r16,r2
  804818:	1025883a 	mov	r18,r2
  80481c:	003fe506 	br	8047b4 <_dtoa_r+0xe2c>
  804820:	d8800217 	ldw	r2,8(sp)
  804824:	108000d0 	cmplti	r2,r2,3
  804828:	10003e26 	beq	r2,zero,804924 <_dtoa_r+0xf9c>
  80482c:	d8800717 	ldw	r2,28(sp)
  804830:	103faa1e 	bne	r2,zero,8046dc <_dtoa_r+0xd54>
  804834:	a00b883a 	mov	r5,r20
  804838:	e009883a 	mov	r4,fp
  80483c:	08037680 	call	803768 <quorem>
  804840:	14c00c04 	addi	r19,r2,48
  804844:	d8800117 	ldw	r2,4(sp)
  804848:	0023883a 	mov	r17,zero
  80484c:	15400044 	addi	r21,r2,1
  804850:	14c00005 	stb	r19,0(r2)
  804854:	d8800417 	ldw	r2,16(sp)
  804858:	10800044 	addi	r2,r2,1
  80485c:	d8800415 	stw	r2,16(sp)
  804860:	003f0906 	br	804488 <_dtoa_r+0xb00>
  804864:	a00b883a 	mov	r5,r20
  804868:	e009883a 	mov	r4,fp
  80486c:	0807a900 	call	807a90 <__mcmp>
  804870:	103ee70e 	bge	r2,zero,804410 <_dtoa_r+0xa88>
  804874:	e00b883a 	mov	r5,fp
  804878:	000f883a 	mov	r7,zero
  80487c:	01800284 	movi	r6,10
  804880:	b809883a 	mov	r4,r23
  804884:	08070a40 	call	8070a4 <__multadd>
  804888:	d8c00417 	ldw	r3,16(sp)
  80488c:	1039883a 	mov	fp,r2
  804890:	d8800717 	ldw	r2,28(sp)
  804894:	1d7fffc4 	addi	r21,r3,-1
  804898:	103f861e 	bne	r2,zero,8046b4 <_dtoa_r+0xd2c>
  80489c:	d8800b17 	ldw	r2,44(sp)
  8048a0:	0081d20e 	bge	zero,r2,804fec <_dtoa_r+0x1664>
  8048a4:	d8800515 	stw	r2,20(sp)
  8048a8:	003ee006 	br	80442c <_dtoa_r+0xaa4>
  8048ac:	00802074 	movhi	r2,129
  8048b0:	1007883a 	mov	r3,r2
  8048b4:	18c3d204 	addi	r3,r3,3912
  8048b8:	00802074 	movhi	r2,129
  8048bc:	d8c00115 	stw	r3,4(sp)
  8048c0:	1083d2c4 	addi	r2,r2,3915
  8048c4:	003ded06 	br	80407c <_dtoa_r+0x6f4>
  8048c8:	00800044 	movi	r2,1
  8048cc:	d8800715 	stw	r2,28(sp)
  8048d0:	003f3406 	br	8045a4 <_dtoa_r+0xc1c>
  8048d4:	983eb21e 	bne	r19,zero,8043a0 <_dtoa_r+0xa18>
  8048d8:	00800434 	movhi	r2,16
  8048dc:	10bfffc4 	addi	r2,r2,-1
  8048e0:	8884703a 	and	r2,r17,r2
  8048e4:	103eae1e 	bne	r2,zero,8043a0 <_dtoa_r+0xa18>
  8048e8:	8c5ffc2c 	andhi	r17,r17,32752
  8048ec:	883eac26 	beq	r17,zero,8043a0 <_dtoa_r+0xa18>
  8048f0:	d8800617 	ldw	r2,24(sp)
  8048f4:	b5800044 	addi	r22,r22,1
  8048f8:	04400044 	movi	r17,1
  8048fc:	10800044 	addi	r2,r2,1
  804900:	d8800615 	stw	r2,24(sp)
  804904:	003ea706 	br	8043a4 <_dtoa_r+0xa1c>
  804908:	00800044 	movi	r2,1
  80490c:	d8800515 	stw	r2,20(sp)
  804910:	d8801e15 	stw	r2,120(sp)
  804914:	003f1b06 	br	804584 <_dtoa_r+0xbfc>
  804918:	d8800b17 	ldw	r2,44(sp)
  80491c:	dd400415 	stw	r21,16(sp)
  804920:	d8800515 	stw	r2,20(sp)
  804924:	d8800517 	ldw	r2,20(sp)
  804928:	103e081e 	bne	r2,zero,80414c <_dtoa_r+0x7c4>
  80492c:	a00b883a 	mov	r5,r20
  804930:	b809883a 	mov	r4,r23
  804934:	000f883a 	mov	r7,zero
  804938:	01800144 	movi	r6,5
  80493c:	08070a40 	call	8070a4 <__multadd>
  804940:	100b883a 	mov	r5,r2
  804944:	e009883a 	mov	r4,fp
  804948:	1029883a 	mov	r20,r2
  80494c:	0807a900 	call	807a90 <__mcmp>
  804950:	00bdfe0e 	bge	zero,r2,80414c <_dtoa_r+0x7c4>
  804954:	d8c00117 	ldw	r3,4(sp)
  804958:	00800c44 	movi	r2,49
  80495c:	18800005 	stb	r2,0(r3)
  804960:	d8800417 	ldw	r2,16(sp)
  804964:	1d400044 	addi	r21,r3,1
  804968:	14400044 	addi	r17,r2,1
  80496c:	a00b883a 	mov	r5,r20
  804970:	b809883a 	mov	r4,r23
  804974:	08070800 	call	807080 <_Bfree>
  804978:	88800044 	addi	r2,r17,1
  80497c:	d8800415 	stw	r2,16(sp)
  804980:	803ee11e 	bne	r16,zero,804508 <_dtoa_r+0xb80>
  804984:	003ee306 	br	804514 <_dtoa_r+0xb8c>
  804988:	b005883a 	mov	r2,r22
  80498c:	003e6006 	br	804310 <_dtoa_r+0x988>
  804990:	800b883a 	mov	r5,r16
  804994:	900d883a 	mov	r6,r18
  804998:	b809883a 	mov	r4,r23
  80499c:	08079080 	call	807908 <__lshift>
  8049a0:	1021883a 	mov	r16,r2
  8049a4:	003f4e06 	br	8046e0 <_dtoa_r+0xd58>
  8049a8:	1529c83a 	sub	r20,r2,r20
  8049ac:	003e4906 	br	8042d4 <_dtoa_r+0x94c>
  8049b0:	dcc00c15 	stw	r19,48(sp)
  8049b4:	8825883a 	mov	r18,r17
  8049b8:	05400084 	movi	r21,2
  8049bc:	003cdf06 	br	803d3c <_dtoa_r+0x3b4>
  8049c0:	00800044 	movi	r2,1
  8049c4:	003ead06 	br	80447c <_dtoa_r+0xaf4>
  8049c8:	00800044 	movi	r2,1
  8049cc:	d8800715 	stw	r2,28(sp)
  8049d0:	003ca506 	br	803c68 <_dtoa_r+0x2e0>
  8049d4:	1000021e 	bne	r2,zero,8049e0 <_dtoa_r+0x1058>
  8049d8:	98c0004c 	andi	r3,r19,1
  8049dc:	183eb41e 	bne	r3,zero,8044b0 <_dtoa_r+0xb28>
  8049e0:	2005883a 	mov	r2,r4
  8049e4:	00000206 	br	8049f0 <_dtoa_r+0x1068>
  8049e8:	a8bfff83 	ldbu	r2,-2(r21)
  8049ec:	182b883a 	mov	r21,r3
  8049f0:	10803fcc 	andi	r2,r2,255
  8049f4:	1080201c 	xori	r2,r2,128
  8049f8:	10bfe004 	addi	r2,r2,-128
  8049fc:	10800c18 	cmpnei	r2,r2,48
  804a00:	a8ffffc4 	addi	r3,r21,-1
  804a04:	103ff826 	beq	r2,zero,8049e8 <_dtoa_r+0x1060>
  804a08:	003eb606 	br	8044e4 <_dtoa_r+0xb5c>
  804a0c:	d8c00117 	ldw	r3,4(sp)
  804a10:	00800c44 	movi	r2,49
  804a14:	18800005 	stb	r2,0(r3)
  804a18:	d8800417 	ldw	r2,16(sp)
  804a1c:	10800044 	addi	r2,r2,1
  804a20:	d8800415 	stw	r2,16(sp)
  804a24:	003eaf06 	br	8044e4 <_dtoa_r+0xb5c>
  804a28:	d8c00a17 	ldw	r3,40(sp)
  804a2c:	18011826 	beq	r3,zero,804e90 <_dtoa_r+0x1508>
  804a30:	d8c00617 	ldw	r3,24(sp)
  804a34:	10810cc4 	addi	r2,r2,1075
  804a38:	b0ad883a 	add	r22,r22,r2
  804a3c:	1885883a 	add	r2,r3,r2
  804a40:	dd000817 	ldw	r20,32(sp)
  804a44:	1825883a 	mov	r18,r3
  804a48:	d8800615 	stw	r2,24(sp)
  804a4c:	003e2806 	br	8042f0 <_dtoa_r+0x968>
  804a50:	a809883a 	mov	r4,r21
  804a54:	080e2980 	call	80e298 <__floatsidf>
  804a58:	800d883a 	mov	r6,r16
  804a5c:	900f883a 	mov	r7,r18
  804a60:	1009883a 	mov	r4,r2
  804a64:	180b883a 	mov	r5,r3
  804a68:	080d1640 	call	80d164 <__muldf3>
  804a6c:	000d883a 	mov	r6,zero
  804a70:	01d00734 	movhi	r7,16412
  804a74:	1009883a 	mov	r4,r2
  804a78:	180b883a 	mov	r5,r3
  804a7c:	080bcf40 	call	80bcf4 <__adddf3>
  804a80:	1029883a 	mov	r20,r2
  804a84:	00bf3034 	movhi	r2,64704
  804a88:	1885883a 	add	r2,r3,r2
  804a8c:	d8800c15 	stw	r2,48(sp)
  804a90:	8009883a 	mov	r4,r16
  804a94:	900b883a 	mov	r5,r18
  804a98:	000d883a 	mov	r6,zero
  804a9c:	01d00534 	movhi	r7,16404
  804aa0:	080d9100 	call	80d910 <__subdf3>
  804aa4:	dd400c17 	ldw	r21,48(sp)
  804aa8:	a00d883a 	mov	r6,r20
  804aac:	1009883a 	mov	r4,r2
  804ab0:	a80f883a 	mov	r7,r21
  804ab4:	180b883a 	mov	r5,r3
  804ab8:	1025883a 	mov	r18,r2
  804abc:	1821883a 	mov	r16,r3
  804ac0:	080cf940 	call	80cf94 <__gedf2>
  804ac4:	00812f16 	blt	zero,r2,804f84 <_dtoa_r+0x15fc>
  804ac8:	a9e0003c 	xorhi	r7,r21,32768
  804acc:	a00d883a 	mov	r6,r20
  804ad0:	9009883a 	mov	r4,r18
  804ad4:	800b883a 	mov	r5,r16
  804ad8:	080d07c0 	call	80d07c <__ledf2>
  804adc:	103d7d0e 	bge	r2,zero,8040d4 <_dtoa_r+0x74c>
  804ae0:	0029883a 	mov	r20,zero
  804ae4:	0021883a 	mov	r16,zero
  804ae8:	003d9806 	br	80414c <_dtoa_r+0x7c4>
  804aec:	d9800817 	ldw	r6,32(sp)
  804af0:	e00b883a 	mov	r5,fp
  804af4:	b809883a 	mov	r4,r23
  804af8:	08077c00 	call	8077c0 <__pow5mult>
  804afc:	1039883a 	mov	fp,r2
  804b00:	003e1e06 	br	80437c <_dtoa_r+0x9f4>
  804b04:	d8800417 	ldw	r2,16(sp)
  804b08:	1000ed26 	beq	r2,zero,804ec0 <_dtoa_r+0x1538>
  804b0c:	00a9c83a 	sub	r20,zero,r2
  804b10:	a08003cc 	andi	r2,r20,15
  804b14:	100690fa 	slli	r3,r2,3
  804b18:	00802074 	movhi	r2,129
  804b1c:	10841204 	addi	r2,r2,4168
  804b20:	10c5883a 	add	r2,r2,r3
  804b24:	11800017 	ldw	r6,0(r2)
  804b28:	11c00117 	ldw	r7,4(r2)
  804b2c:	a029d13a 	srai	r20,r20,4
  804b30:	9809883a 	mov	r4,r19
  804b34:	880b883a 	mov	r5,r17
  804b38:	080d1640 	call	80d164 <__muldf3>
  804b3c:	1021883a 	mov	r16,r2
  804b40:	1825883a 	mov	r18,r3
  804b44:	a0013826 	beq	r20,zero,805028 <_dtoa_r+0x16a0>
  804b48:	02002074 	movhi	r8,129
  804b4c:	05400084 	movi	r21,2
  804b50:	42040804 	addi	r8,r8,4128
  804b54:	1009883a 	mov	r4,r2
  804b58:	9805883a 	mov	r2,r19
  804b5c:	180b883a 	mov	r5,r3
  804b60:	dc000c15 	stw	r16,48(sp)
  804b64:	8827883a 	mov	r19,r17
  804b68:	0007883a 	mov	r3,zero
  804b6c:	a823883a 	mov	r17,r21
  804b70:	4021883a 	mov	r16,r8
  804b74:	102b883a 	mov	r21,r2
  804b78:	a180004c 	andi	r6,r20,1
  804b7c:	30000726 	beq	r6,zero,804b9c <_dtoa_r+0x1214>
  804b80:	81800017 	ldw	r6,0(r16)
  804b84:	81c00117 	ldw	r7,4(r16)
  804b88:	8c400044 	addi	r17,r17,1
  804b8c:	080d1640 	call	80d164 <__muldf3>
  804b90:	180b883a 	mov	r5,r3
  804b94:	1009883a 	mov	r4,r2
  804b98:	00c00044 	movi	r3,1
  804b9c:	a029d07a 	srai	r20,r20,1
  804ba0:	84000204 	addi	r16,r16,8
  804ba4:	a03ff41e 	bne	r20,zero,804b78 <_dtoa_r+0x11f0>
  804ba8:	a805883a 	mov	r2,r21
  804bac:	18c03fcc 	andi	r3,r3,255
  804bb0:	882b883a 	mov	r21,r17
  804bb4:	dc000c17 	ldw	r16,48(sp)
  804bb8:	9823883a 	mov	r17,r19
  804bbc:	1027883a 	mov	r19,r2
  804bc0:	183c7726 	beq	r3,zero,803da0 <_dtoa_r+0x418>
  804bc4:	2021883a 	mov	r16,r4
  804bc8:	2825883a 	mov	r18,r5
  804bcc:	003c7406 	br	803da0 <_dtoa_r+0x418>
  804bd0:	983eae1e 	bne	r19,zero,80468c <_dtoa_r+0xd04>
  804bd4:	00800434 	movhi	r2,16
  804bd8:	10bfffc4 	addi	r2,r2,-1
  804bdc:	8884703a 	and	r2,r17,r2
  804be0:	103f4126 	beq	r2,zero,8048e8 <_dtoa_r+0xf60>
  804be4:	003ea906 	br	80468c <_dtoa_r+0xd04>
  804be8:	9807883a 	mov	r3,r19
  804bec:	a827883a 	mov	r19,r21
  804bf0:	182b883a 	mov	r21,r3
  804bf4:	d8c00417 	ldw	r3,16(sp)
  804bf8:	18c00044 	addi	r3,r3,1
  804bfc:	d8c00415 	stw	r3,16(sp)
  804c00:	00800d0e 	bge	zero,r2,804c38 <_dtoa_r+0x12b0>
  804c04:	e00b883a 	mov	r5,fp
  804c08:	b809883a 	mov	r4,r23
  804c0c:	01800044 	movi	r6,1
  804c10:	08079080 	call	807908 <__lshift>
  804c14:	a00b883a 	mov	r5,r20
  804c18:	1009883a 	mov	r4,r2
  804c1c:	1039883a 	mov	fp,r2
  804c20:	0807a900 	call	807a90 <__mcmp>
  804c24:	0080df0e 	bge	zero,r2,804fa4 <_dtoa_r+0x161c>
  804c28:	98c00e60 	cmpeqi	r3,r19,57
  804c2c:	1800ce1e 	bne	r3,zero,804f68 <_dtoa_r+0x15e0>
  804c30:	d8800617 	ldw	r2,24(sp)
  804c34:	14c00c44 	addi	r19,r2,49
  804c38:	8023883a 	mov	r17,r16
  804c3c:	b4c00005 	stb	r19,0(r22)
  804c40:	9021883a 	mov	r16,r18
  804c44:	003e2706 	br	8044e4 <_dtoa_r+0xb5c>
  804c48:	b82b883a 	mov	r21,r23
  804c4c:	ddc00217 	ldw	r23,8(sp)
  804c50:	200d883a 	mov	r6,r4
  804c54:	280f883a 	mov	r7,r5
  804c58:	080bcf40 	call	80bcf4 <__adddf3>
  804c5c:	180b883a 	mov	r5,r3
  804c60:	800d883a 	mov	r6,r16
  804c64:	900f883a 	mov	r7,r18
  804c68:	1009883a 	mov	r4,r2
  804c6c:	1823883a 	mov	r17,r3
  804c70:	1027883a 	mov	r19,r2
  804c74:	080cf940 	call	80cf94 <__gedf2>
  804c78:	d8c00417 	ldw	r3,16(sp)
  804c7c:	18c00044 	addi	r3,r3,1
  804c80:	d8c00415 	stw	r3,16(sp)
  804c84:	00808c16 	blt	zero,r2,804eb8 <_dtoa_r+0x1530>
  804c88:	800d883a 	mov	r6,r16
  804c8c:	900f883a 	mov	r7,r18
  804c90:	9809883a 	mov	r4,r19
  804c94:	880b883a 	mov	r5,r17
  804c98:	080cf140 	call	80cf14 <__eqdf2>
  804c9c:	1000021e 	bne	r2,zero,804ca8 <_dtoa_r+0x1320>
  804ca0:	ad40004c 	andi	r21,r21,1
  804ca4:	a800841e 	bne	r21,zero,804eb8 <_dtoa_r+0x1530>
  804ca8:	a02b883a 	mov	r21,r20
  804cac:	003e1906 	br	804514 <_dtoa_r+0xb8c>
  804cb0:	81400117 	ldw	r5,4(r16)
  804cb4:	b809883a 	mov	r4,r23
  804cb8:	0806fdc0 	call	806fdc <_Balloc>
  804cbc:	1023883a 	mov	r17,r2
  804cc0:	1000f326 	beq	r2,zero,805090 <_dtoa_r+0x1708>
  804cc4:	81800417 	ldw	r6,16(r16)
  804cc8:	81400304 	addi	r5,r16,12
  804ccc:	11000304 	addi	r4,r2,12
  804cd0:	31800084 	addi	r6,r6,2
  804cd4:	300c90ba 	slli	r6,r6,2
  804cd8:	0806cc00 	call	806cc0 <memcpy>
  804cdc:	01800044 	movi	r6,1
  804ce0:	880b883a 	mov	r5,r17
  804ce4:	b809883a 	mov	r4,r23
  804ce8:	08079080 	call	807908 <__lshift>
  804cec:	1025883a 	mov	r18,r2
  804cf0:	003e7d06 	br	8046e8 <_dtoa_r+0xd60>
  804cf4:	e00b883a 	mov	r5,fp
  804cf8:	b809883a 	mov	r4,r23
  804cfc:	08077c00 	call	8077c0 <__pow5mult>
  804d00:	1039883a 	mov	fp,r2
  804d04:	003d9d06 	br	80437c <_dtoa_r+0x9f4>
  804d08:	d8800617 	ldw	r2,24(sp)
  804d0c:	d8c00517 	ldw	r3,20(sp)
  804d10:	10e5c83a 	sub	r18,r2,r3
  804d14:	003d7606 	br	8042f0 <_dtoa_r+0x968>
  804d18:	d8c00417 	ldw	r3,16(sp)
  804d1c:	9805883a 	mov	r2,r19
  804d20:	a827883a 	mov	r19,r21
  804d24:	18c00044 	addi	r3,r3,1
  804d28:	102b883a 	mov	r21,r2
  804d2c:	d8c00415 	stw	r3,16(sp)
  804d30:	98800e58 	cmpnei	r2,r19,57
  804d34:	10008c26 	beq	r2,zero,804f68 <_dtoa_r+0x15e0>
  804d38:	98c00044 	addi	r3,r19,1
  804d3c:	8023883a 	mov	r17,r16
  804d40:	b0c00005 	stb	r3,0(r22)
  804d44:	9021883a 	mov	r16,r18
  804d48:	003de606 	br	8044e4 <_dtoa_r+0xb5c>
  804d4c:	9805883a 	mov	r2,r19
  804d50:	a827883a 	mov	r19,r21
  804d54:	102b883a 	mov	r21,r2
  804d58:	d8800417 	ldw	r2,16(sp)
  804d5c:	8023883a 	mov	r17,r16
  804d60:	9021883a 	mov	r16,r18
  804d64:	10800044 	addi	r2,r2,1
  804d68:	d8800415 	stw	r2,16(sp)
  804d6c:	003dc606 	br	804488 <_dtoa_r+0xb00>
  804d70:	d9400c17 	ldw	r5,48(sp)
  804d74:	a009883a 	mov	r4,r20
  804d78:	080d1640 	call	80d164 <__muldf3>
  804d7c:	d9800d17 	ldw	r6,52(sp)
  804d80:	d9400117 	ldw	r5,4(sp)
  804d84:	d9001017 	ldw	r4,64(sp)
  804d88:	d8800c15 	stw	r2,48(sp)
  804d8c:	d8c00d15 	stw	r3,52(sp)
  804d90:	29000005 	stb	r4,0(r5)
  804d94:	31000058 	cmpnei	r4,r6,1
  804d98:	29a9883a 	add	r20,r5,r6
  804d9c:	2000a026 	beq	r4,zero,805020 <_dtoa_r+0x1698>
  804da0:	dc400e15 	stw	r17,56(sp)
  804da4:	8009883a 	mov	r4,r16
  804da8:	900b883a 	mov	r5,r18
  804dac:	a823883a 	mov	r17,r21
  804db0:	000d883a 	mov	r6,zero
  804db4:	01d00934 	movhi	r7,16420
  804db8:	080d1640 	call	80d164 <__muldf3>
  804dbc:	180b883a 	mov	r5,r3
  804dc0:	1009883a 	mov	r4,r2
  804dc4:	1825883a 	mov	r18,r3
  804dc8:	102b883a 	mov	r21,r2
  804dcc:	080e2180 	call	80e218 <__fixdfsi>
  804dd0:	1009883a 	mov	r4,r2
  804dd4:	1021883a 	mov	r16,r2
  804dd8:	080e2980 	call	80e298 <__floatsidf>
  804ddc:	a809883a 	mov	r4,r21
  804de0:	900b883a 	mov	r5,r18
  804de4:	100d883a 	mov	r6,r2
  804de8:	180f883a 	mov	r7,r3
  804dec:	8c400044 	addi	r17,r17,1
  804df0:	84000c04 	addi	r16,r16,48
  804df4:	080d9100 	call	80d910 <__subdf3>
  804df8:	8c3fffc5 	stb	r16,-1(r17)
  804dfc:	1009883a 	mov	r4,r2
  804e00:	180b883a 	mov	r5,r3
  804e04:	a47fea1e 	bne	r20,r17,804db0 <_dtoa_r+0x1428>
  804e08:	dc400e17 	ldw	r17,56(sp)
  804e0c:	1021883a 	mov	r16,r2
  804e10:	1825883a 	mov	r18,r3
  804e14:	d9000c17 	ldw	r4,48(sp)
  804e18:	d9400d17 	ldw	r5,52(sp)
  804e1c:	000d883a 	mov	r6,zero
  804e20:	01cff834 	movhi	r7,16352
  804e24:	080bcf40 	call	80bcf4 <__adddf3>
  804e28:	800d883a 	mov	r6,r16
  804e2c:	900f883a 	mov	r7,r18
  804e30:	1009883a 	mov	r4,r2
  804e34:	180b883a 	mov	r5,r3
  804e38:	080d07c0 	call	80d07c <__ledf2>
  804e3c:	10005416 	blt	r2,zero,804f90 <_dtoa_r+0x1608>
  804e40:	d9800c17 	ldw	r6,48(sp)
  804e44:	d9c00d17 	ldw	r7,52(sp)
  804e48:	0009883a 	mov	r4,zero
  804e4c:	014ff834 	movhi	r5,16352
  804e50:	080d9100 	call	80d910 <__subdf3>
  804e54:	800d883a 	mov	r6,r16
  804e58:	900f883a 	mov	r7,r18
  804e5c:	1009883a 	mov	r4,r2
  804e60:	180b883a 	mov	r5,r3
  804e64:	080cf940 	call	80cf94 <__gedf2>
  804e68:	00bc9a0e 	bge	zero,r2,8040d4 <_dtoa_r+0x74c>
  804e6c:	a0bfffc7 	ldb	r2,-1(r20)
  804e70:	a02b883a 	mov	r21,r20
  804e74:	a53fffc4 	addi	r20,r20,-1
  804e78:	10800c20 	cmpeqi	r2,r2,48
  804e7c:	103ffb1e 	bne	r2,zero,804e6c <_dtoa_r+0x14e4>
  804e80:	d8801117 	ldw	r2,68(sp)
  804e84:	10800044 	addi	r2,r2,1
  804e88:	d8800415 	stw	r2,16(sp)
  804e8c:	003da106 	br	804514 <_dtoa_r+0xb8c>
  804e90:	d8c01217 	ldw	r3,72(sp)
  804e94:	d9000617 	ldw	r4,24(sp)
  804e98:	00800d84 	movi	r2,54
  804e9c:	10c5c83a 	sub	r2,r2,r3
  804ea0:	b0ad883a 	add	r22,r22,r2
  804ea4:	2085883a 	add	r2,r4,r2
  804ea8:	dd000817 	ldw	r20,32(sp)
  804eac:	2025883a 	mov	r18,r4
  804eb0:	d8800615 	stw	r2,24(sp)
  804eb4:	003d0e06 	br	8042f0 <_dtoa_r+0x968>
  804eb8:	d9000117 	ldw	r4,4(sp)
  804ebc:	003c4b06 	br	803fec <_dtoa_r+0x664>
  804ec0:	9821883a 	mov	r16,r19
  804ec4:	8825883a 	mov	r18,r17
  804ec8:	05400084 	movi	r21,2
  804ecc:	003bb406 	br	803da0 <_dtoa_r+0x418>
  804ed0:	d8800517 	ldw	r2,20(sp)
  804ed4:	103ede26 	beq	r2,zero,804a50 <_dtoa_r+0x10c8>
  804ed8:	d8800b17 	ldw	r2,44(sp)
  804edc:	00bc7d0e 	bge	zero,r2,8040d4 <_dtoa_r+0x74c>
  804ee0:	900b883a 	mov	r5,r18
  804ee4:	8009883a 	mov	r4,r16
  804ee8:	000d883a 	mov	r6,zero
  804eec:	01d00934 	movhi	r7,16420
  804ef0:	080d1640 	call	80d164 <__muldf3>
  804ef4:	a9000044 	addi	r4,r21,1
  804ef8:	1021883a 	mov	r16,r2
  804efc:	1825883a 	mov	r18,r3
  804f00:	080e2980 	call	80e298 <__floatsidf>
  804f04:	800d883a 	mov	r6,r16
  804f08:	900f883a 	mov	r7,r18
  804f0c:	1009883a 	mov	r4,r2
  804f10:	180b883a 	mov	r5,r3
  804f14:	080d1640 	call	80d164 <__muldf3>
  804f18:	1009883a 	mov	r4,r2
  804f1c:	000d883a 	mov	r6,zero
  804f20:	01d00734 	movhi	r7,16412
  804f24:	180b883a 	mov	r5,r3
  804f28:	080bcf40 	call	80bcf4 <__adddf3>
  804f2c:	d9000417 	ldw	r4,16(sp)
  804f30:	1029883a 	mov	r20,r2
  804f34:	00bf3034 	movhi	r2,64704
  804f38:	1887883a 	add	r3,r3,r2
  804f3c:	d8800b17 	ldw	r2,44(sp)
  804f40:	213fffc4 	addi	r4,r4,-1
  804f44:	d9001115 	stw	r4,68(sp)
  804f48:	d8c00c15 	stw	r3,48(sp)
  804f4c:	d8800d15 	stw	r2,52(sp)
  804f50:	003bb106 	br	803e18 <_dtoa_r+0x490>
  804f54:	d8800417 	ldw	r2,16(sp)
  804f58:	00c00c44 	movi	r3,49
  804f5c:	10800044 	addi	r2,r2,1
  804f60:	d8800415 	stw	r2,16(sp)
  804f64:	003c2a06 	br	804010 <_dtoa_r+0x688>
  804f68:	00800e44 	movi	r2,57
  804f6c:	8023883a 	mov	r17,r16
  804f70:	d9400117 	ldw	r5,4(sp)
  804f74:	b0800005 	stb	r2,0(r22)
  804f78:	9021883a 	mov	r16,r18
  804f7c:	01000e44 	movi	r4,57
  804f80:	003d5006 	br	8044c4 <_dtoa_r+0xb3c>
  804f84:	0029883a 	mov	r20,zero
  804f88:	0021883a 	mov	r16,zero
  804f8c:	003e7106 	br	804954 <_dtoa_r+0xfcc>
  804f90:	d8801117 	ldw	r2,68(sp)
  804f94:	d9000117 	ldw	r4,4(sp)
  804f98:	10800044 	addi	r2,r2,1
  804f9c:	d8800415 	stw	r2,16(sp)
  804fa0:	003c1206 	br	803fec <_dtoa_r+0x664>
  804fa4:	103f241e 	bne	r2,zero,804c38 <_dtoa_r+0x12b0>
  804fa8:	9880004c 	andi	r2,r19,1
  804fac:	103f1e1e 	bne	r2,zero,804c28 <_dtoa_r+0x12a0>
  804fb0:	003f2106 	br	804c38 <_dtoa_r+0x12b0>
  804fb4:	d8801117 	ldw	r2,68(sp)
  804fb8:	ddc00d17 	ldw	r23,52(sp)
  804fbc:	10800044 	addi	r2,r2,1
  804fc0:	d8800415 	stw	r2,16(sp)
  804fc4:	003d5306 	br	804514 <_dtoa_r+0xb8c>
  804fc8:	d8c00417 	ldw	r3,16(sp)
  804fcc:	a8800e60 	cmpeqi	r2,r21,57
  804fd0:	a827883a 	mov	r19,r21
  804fd4:	18c00044 	addi	r3,r3,1
  804fd8:	d8c00415 	stw	r3,16(sp)
  804fdc:	b5400044 	addi	r21,r22,1
  804fe0:	103fe11e 	bne	r2,zero,804f68 <_dtoa_r+0x15e0>
  804fe4:	047f1216 	blt	zero,r17,804c30 <_dtoa_r+0x12a8>
  804fe8:	003f1306 	br	804c38 <_dtoa_r+0x12b0>
  804fec:	d8800217 	ldw	r2,8(sp)
  804ff0:	108000c8 	cmpgei	r2,r2,3
  804ff4:	103e481e 	bne	r2,zero,804918 <_dtoa_r+0xf90>
  804ff8:	dd400415 	stw	r21,16(sp)
  804ffc:	003e0d06 	br	804834 <_dtoa_r+0xeac>
  805000:	d8800217 	ldw	r2,8(sp)
  805004:	108000c8 	cmpgei	r2,r2,3
  805008:	103e431e 	bne	r2,zero,804918 <_dtoa_r+0xf90>
  80500c:	d8800b17 	ldw	r2,44(sp)
  805010:	dd400415 	stw	r21,16(sp)
  805014:	d8800515 	stw	r2,20(sp)
  805018:	04bdb10e 	bge	zero,r18,8046e0 <_dtoa_r+0xd58>
  80501c:	003e5c06 	br	804990 <_dtoa_r+0x1008>
  805020:	a829883a 	mov	r20,r21
  805024:	003f7b06 	br	804e14 <_dtoa_r+0x148c>
  805028:	05400084 	movi	r21,2
  80502c:	003b5c06 	br	803da0 <_dtoa_r+0x418>
  805030:	01c02074 	movhi	r7,129
  805034:	01002074 	movhi	r4,129
  805038:	39c3d604 	addi	r7,r7,3928
  80503c:	000d883a 	mov	r6,zero
  805040:	01406a84 	movi	r5,426
  805044:	2103db04 	addi	r4,r4,3948
  805048:	0809eb00 	call	809eb0 <__assert_func>
  80504c:	000b883a 	mov	r5,zero
  805050:	003b1506 	br	803ca8 <_dtoa_r+0x320>
  805054:	b8001115 	stw	zero,68(r23)
  805058:	000b883a 	mov	r5,zero
  80505c:	b809883a 	mov	r4,r23
  805060:	0806fdc0 	call	806fdc <_Balloc>
  805064:	d8800115 	stw	r2,4(sp)
  805068:	103ff126 	beq	r2,zero,805030 <_dtoa_r+0x16a8>
  80506c:	d8800117 	ldw	r2,4(sp)
  805070:	d8001e15 	stw	zero,120(sp)
  805074:	b8801015 	stw	r2,64(r23)
  805078:	00bfffc4 	movi	r2,-1
  80507c:	d8800515 	stw	r2,20(sp)
  805080:	d8800b15 	stw	r2,44(sp)
  805084:	00800044 	movi	r2,1
  805088:	d8800715 	stw	r2,28(sp)
  80508c:	003c1106 	br	8040d4 <_dtoa_r+0x74c>
  805090:	01c02074 	movhi	r7,129
  805094:	01002074 	movhi	r4,129
  805098:	39c3d604 	addi	r7,r7,3928
  80509c:	000d883a 	mov	r6,zero
  8050a0:	0140ba84 	movi	r5,746
  8050a4:	2103db04 	addi	r4,r4,3948
  8050a8:	0809eb00 	call	809eb0 <__assert_func>
  8050ac:	00802074 	movhi	r2,129
  8050b0:	1083d304 	addi	r2,r2,3916
  8050b4:	d8800115 	stw	r2,4(sp)
  8050b8:	003a6506 	br	803a50 <_dtoa_r+0xc8>
  8050bc:	18c00120 	cmpeqi	r3,r3,4
  8050c0:	183cc91e 	bne	r3,zero,8043e8 <_dtoa_r+0xa60>
  8050c4:	00c00f04 	movi	r3,60
  8050c8:	1885c83a 	sub	r2,r3,r2
  8050cc:	003cc106 	br	8043d4 <_dtoa_r+0xa4c>

008050d0 <__sflush_r>:
  8050d0:	2880030b 	ldhu	r2,12(r5)
  8050d4:	defffb04 	addi	sp,sp,-20
  8050d8:	dcc00315 	stw	r19,12(sp)
  8050dc:	dc000015 	stw	r16,0(sp)
  8050e0:	dfc00415 	stw	ra,16(sp)
  8050e4:	dc800215 	stw	r18,8(sp)
  8050e8:	dc400115 	stw	r17,4(sp)
  8050ec:	10c0020c 	andi	r3,r2,8
  8050f0:	2821883a 	mov	r16,r5
  8050f4:	2027883a 	mov	r19,r4
  8050f8:	18003f1e 	bne	r3,zero,8051f8 <__sflush_r+0x128>
  8050fc:	28c00117 	ldw	r3,4(r5)
  805100:	10820014 	ori	r2,r2,2048
  805104:	2880030d 	sth	r2,12(r5)
  805108:	00c0550e 	bge	zero,r3,805260 <__sflush_r+0x190>
  80510c:	82000a17 	ldw	r8,40(r16)
  805110:	40003126 	beq	r8,zero,8051d8 <__sflush_r+0x108>
  805114:	9c400017 	ldw	r17,0(r19)
  805118:	1104000c 	andi	r4,r2,4096
  80511c:	98000015 	stw	zero,0(r19)
  805120:	81400717 	ldw	r5,28(r16)
  805124:	1007883a 	mov	r3,r2
  805128:	2000521e 	bne	r4,zero,805274 <__sflush_r+0x1a4>
  80512c:	01c00044 	movi	r7,1
  805130:	000d883a 	mov	r6,zero
  805134:	9809883a 	mov	r4,r19
  805138:	403ee83a 	callr	r8
  80513c:	10ffffd8 	cmpnei	r3,r2,-1
  805140:	18005826 	beq	r3,zero,8052a4 <__sflush_r+0x1d4>
  805144:	80c0030b 	ldhu	r3,12(r16)
  805148:	82000a17 	ldw	r8,40(r16)
  80514c:	81400717 	ldw	r5,28(r16)
  805150:	18c0010c 	andi	r3,r3,4
  805154:	18000626 	beq	r3,zero,805170 <__sflush_r+0xa0>
  805158:	81000117 	ldw	r4,4(r16)
  80515c:	80c00c17 	ldw	r3,48(r16)
  805160:	1105c83a 	sub	r2,r2,r4
  805164:	18000226 	beq	r3,zero,805170 <__sflush_r+0xa0>
  805168:	80c00f17 	ldw	r3,60(r16)
  80516c:	10c5c83a 	sub	r2,r2,r3
  805170:	100d883a 	mov	r6,r2
  805174:	000f883a 	mov	r7,zero
  805178:	9809883a 	mov	r4,r19
  80517c:	403ee83a 	callr	r8
  805180:	10ffffd8 	cmpnei	r3,r2,-1
  805184:	18003d1e 	bne	r3,zero,80527c <__sflush_r+0x1ac>
  805188:	99000017 	ldw	r4,0(r19)
  80518c:	80c0030b 	ldhu	r3,12(r16)
  805190:	20004e26 	beq	r4,zero,8052cc <__sflush_r+0x1fc>
  805194:	21400760 	cmpeqi	r5,r4,29
  805198:	2800021e 	bne	r5,zero,8051a4 <__sflush_r+0xd4>
  80519c:	210005a0 	cmpeqi	r4,r4,22
  8051a0:	20002c26 	beq	r4,zero,805254 <__sflush_r+0x184>
  8051a4:	80800417 	ldw	r2,16(r16)
  8051a8:	18fdffcc 	andi	r3,r3,63487
  8051ac:	80c0030d 	sth	r3,12(r16)
  8051b0:	80000115 	stw	zero,4(r16)
  8051b4:	80800015 	stw	r2,0(r16)
  8051b8:	81400c17 	ldw	r5,48(r16)
  8051bc:	9c400015 	stw	r17,0(r19)
  8051c0:	28000526 	beq	r5,zero,8051d8 <__sflush_r+0x108>
  8051c4:	80801004 	addi	r2,r16,64
  8051c8:	28800226 	beq	r5,r2,8051d4 <__sflush_r+0x104>
  8051cc:	9809883a 	mov	r4,r19
  8051d0:	08058a40 	call	8058a4 <_free_r>
  8051d4:	80000c15 	stw	zero,48(r16)
  8051d8:	0005883a 	mov	r2,zero
  8051dc:	dfc00417 	ldw	ra,16(sp)
  8051e0:	dcc00317 	ldw	r19,12(sp)
  8051e4:	dc800217 	ldw	r18,8(sp)
  8051e8:	dc400117 	ldw	r17,4(sp)
  8051ec:	dc000017 	ldw	r16,0(sp)
  8051f0:	dec00504 	addi	sp,sp,20
  8051f4:	f800283a 	ret
  8051f8:	2c800417 	ldw	r18,16(r5)
  8051fc:	903ff626 	beq	r18,zero,8051d8 <__sflush_r+0x108>
  805200:	2c400017 	ldw	r17,0(r5)
  805204:	108000cc 	andi	r2,r2,3
  805208:	2c800015 	stw	r18,0(r5)
  80520c:	8ca3c83a 	sub	r17,r17,r18
  805210:	1000161e 	bne	r2,zero,80526c <__sflush_r+0x19c>
  805214:	28800517 	ldw	r2,20(r5)
  805218:	80800215 	stw	r2,8(r16)
  80521c:	04400316 	blt	zero,r17,80522c <__sflush_r+0x15c>
  805220:	003fed06 	br	8051d8 <__sflush_r+0x108>
  805224:	90a5883a 	add	r18,r18,r2
  805228:	047feb0e 	bge	zero,r17,8051d8 <__sflush_r+0x108>
  80522c:	80800917 	ldw	r2,36(r16)
  805230:	81400717 	ldw	r5,28(r16)
  805234:	880f883a 	mov	r7,r17
  805238:	900d883a 	mov	r6,r18
  80523c:	9809883a 	mov	r4,r19
  805240:	103ee83a 	callr	r2
  805244:	88a3c83a 	sub	r17,r17,r2
  805248:	00bff616 	blt	zero,r2,805224 <__sflush_r+0x154>
  80524c:	80c0030b 	ldhu	r3,12(r16)
  805250:	00bfffc4 	movi	r2,-1
  805254:	18c01014 	ori	r3,r3,64
  805258:	80c0030d 	sth	r3,12(r16)
  80525c:	003fdf06 	br	8051dc <__sflush_r+0x10c>
  805260:	28c00f17 	ldw	r3,60(r5)
  805264:	00ffa916 	blt	zero,r3,80510c <__sflush_r+0x3c>
  805268:	003fdb06 	br	8051d8 <__sflush_r+0x108>
  80526c:	0005883a 	mov	r2,zero
  805270:	003fe906 	br	805218 <__sflush_r+0x148>
  805274:	80801417 	ldw	r2,80(r16)
  805278:	003fb506 	br	805150 <__sflush_r+0x80>
  80527c:	80c0030b 	ldhu	r3,12(r16)
  805280:	81000417 	ldw	r4,16(r16)
  805284:	80000115 	stw	zero,4(r16)
  805288:	197dffcc 	andi	r5,r3,63487
  80528c:	8140030d 	sth	r5,12(r16)
  805290:	81000015 	stw	r4,0(r16)
  805294:	18c4000c 	andi	r3,r3,4096
  805298:	183fc726 	beq	r3,zero,8051b8 <__sflush_r+0xe8>
  80529c:	80801415 	stw	r2,80(r16)
  8052a0:	003fc506 	br	8051b8 <__sflush_r+0xe8>
  8052a4:	98c00017 	ldw	r3,0(r19)
  8052a8:	183fa626 	beq	r3,zero,805144 <__sflush_r+0x74>
  8052ac:	19000760 	cmpeqi	r4,r3,29
  8052b0:	20000e1e 	bne	r4,zero,8052ec <__sflush_r+0x21c>
  8052b4:	18c00598 	cmpnei	r3,r3,22
  8052b8:	18000c26 	beq	r3,zero,8052ec <__sflush_r+0x21c>
  8052bc:	80c0030b 	ldhu	r3,12(r16)
  8052c0:	18c01014 	ori	r3,r3,64
  8052c4:	80c0030d 	sth	r3,12(r16)
  8052c8:	003fc406 	br	8051dc <__sflush_r+0x10c>
  8052cc:	81000417 	ldw	r4,16(r16)
  8052d0:	197dffcc 	andi	r5,r3,63487
  8052d4:	8140030d 	sth	r5,12(r16)
  8052d8:	80000115 	stw	zero,4(r16)
  8052dc:	81000015 	stw	r4,0(r16)
  8052e0:	18c4000c 	andi	r3,r3,4096
  8052e4:	183fb426 	beq	r3,zero,8051b8 <__sflush_r+0xe8>
  8052e8:	003fec06 	br	80529c <__sflush_r+0x1cc>
  8052ec:	9c400015 	stw	r17,0(r19)
  8052f0:	0005883a 	mov	r2,zero
  8052f4:	003fb906 	br	8051dc <__sflush_r+0x10c>

008052f8 <_fflush_r>:
  8052f8:	defffd04 	addi	sp,sp,-12
  8052fc:	dc000115 	stw	r16,4(sp)
  805300:	dfc00215 	stw	ra,8(sp)
  805304:	2021883a 	mov	r16,r4
  805308:	20000226 	beq	r4,zero,805314 <_fflush_r+0x1c>
  80530c:	20800e17 	ldw	r2,56(r4)
  805310:	10000726 	beq	r2,zero,805330 <_fflush_r+0x38>
  805314:	2880030f 	ldh	r2,12(r5)
  805318:	10000a1e 	bne	r2,zero,805344 <_fflush_r+0x4c>
  80531c:	0005883a 	mov	r2,zero
  805320:	dfc00217 	ldw	ra,8(sp)
  805324:	dc000117 	ldw	r16,4(sp)
  805328:	dec00304 	addi	sp,sp,12
  80532c:	f800283a 	ret
  805330:	d9400015 	stw	r5,0(sp)
  805334:	08057400 	call	805740 <__sinit>
  805338:	d9400017 	ldw	r5,0(sp)
  80533c:	2880030f 	ldh	r2,12(r5)
  805340:	103ff626 	beq	r2,zero,80531c <_fflush_r+0x24>
  805344:	8009883a 	mov	r4,r16
  805348:	dfc00217 	ldw	ra,8(sp)
  80534c:	dc000117 	ldw	r16,4(sp)
  805350:	dec00304 	addi	sp,sp,12
  805354:	08050d01 	jmpi	8050d0 <__sflush_r>

00805358 <fflush>:
  805358:	20001726 	beq	r4,zero,8053b8 <fflush+0x60>
  80535c:	00802074 	movhi	r2,129
  805360:	200b883a 	mov	r5,r4
  805364:	110bf517 	ldw	r4,12244(r2)
  805368:	20000226 	beq	r4,zero,805374 <fflush+0x1c>
  80536c:	20800e17 	ldw	r2,56(r4)
  805370:	10000526 	beq	r2,zero,805388 <fflush+0x30>
  805374:	2880030f 	ldh	r2,12(r5)
  805378:	1000021e 	bne	r2,zero,805384 <fflush+0x2c>
  80537c:	0005883a 	mov	r2,zero
  805380:	f800283a 	ret
  805384:	08050d01 	jmpi	8050d0 <__sflush_r>
  805388:	defffd04 	addi	sp,sp,-12
  80538c:	d9400115 	stw	r5,4(sp)
  805390:	d9000015 	stw	r4,0(sp)
  805394:	dfc00215 	stw	ra,8(sp)
  805398:	08057400 	call	805740 <__sinit>
  80539c:	d9400117 	ldw	r5,4(sp)
  8053a0:	d9000017 	ldw	r4,0(sp)
  8053a4:	2880030f 	ldh	r2,12(r5)
  8053a8:	10000826 	beq	r2,zero,8053cc <fflush+0x74>
  8053ac:	dfc00217 	ldw	ra,8(sp)
  8053b0:	dec00304 	addi	sp,sp,12
  8053b4:	08050d01 	jmpi	8050d0 <__sflush_r>
  8053b8:	00802074 	movhi	r2,129
  8053bc:	110bf417 	ldw	r4,12240(r2)
  8053c0:	01402034 	movhi	r5,128
  8053c4:	2954be04 	addi	r5,r5,21240
  8053c8:	08061001 	jmpi	806100 <_fwalk_reent>
  8053cc:	0005883a 	mov	r2,zero
  8053d0:	dfc00217 	ldw	ra,8(sp)
  8053d4:	dec00304 	addi	sp,sp,12
  8053d8:	f800283a 	ret

008053dc <__fp_lock>:
  8053dc:	0005883a 	mov	r2,zero
  8053e0:	f800283a 	ret

008053e4 <_cleanup_r>:
  8053e4:	01402074 	movhi	r5,129
  8053e8:	29682b04 	addi	r5,r5,-24404
  8053ec:	08061001 	jmpi	806100 <_fwalk_reent>

008053f0 <__fp_unlock>:
  8053f0:	0005883a 	mov	r2,zero
  8053f4:	f800283a 	ret

008053f8 <__sinit.part.0>:
  8053f8:	00c02034 	movhi	r3,128
  8053fc:	20800117 	ldw	r2,4(r4)
  805400:	18d4f904 	addi	r3,r3,21476
  805404:	20c00f15 	stw	r3,60(r4)
  805408:	2140bb04 	addi	r5,r4,748
  80540c:	00c000c4 	movi	r3,3
  805410:	20c0b915 	stw	r3,740(r4)
  805414:	2140ba15 	stw	r5,744(r4)
  805418:	2000b815 	stw	zero,736(r4)
  80541c:	10001705 	stb	zero,92(r2)
  805420:	10001745 	stb	zero,93(r2)
  805424:	10001785 	stb	zero,94(r2)
  805428:	100017c5 	stb	zero,95(r2)
  80542c:	10001805 	stb	zero,96(r2)
  805430:	10001845 	stb	zero,97(r2)
  805434:	10001885 	stb	zero,98(r2)
  805438:	100018c5 	stb	zero,99(r2)
  80543c:	00c00104 	movi	r3,4
  805440:	10c00315 	stw	r3,12(r2)
  805444:	02002074 	movhi	r8,129
  805448:	20c00217 	ldw	r3,8(r4)
  80544c:	01c02074 	movhi	r7,129
  805450:	01802074 	movhi	r6,129
  805454:	01402074 	movhi	r5,129
  805458:	4221e204 	addi	r8,r8,-30840
  80545c:	39e1f904 	addi	r7,r7,-30748
  805460:	31a21904 	addi	r6,r6,-30620
  805464:	29623004 	addi	r5,r5,-30528
  805468:	02400074 	movhi	r9,1
  80546c:	10001915 	stw	zero,100(r2)
  805470:	10000015 	stw	zero,0(r2)
  805474:	10000115 	stw	zero,4(r2)
  805478:	10000215 	stw	zero,8(r2)
  80547c:	10000415 	stw	zero,16(r2)
  805480:	10000515 	stw	zero,20(r2)
  805484:	10000615 	stw	zero,24(r2)
  805488:	10800715 	stw	r2,28(r2)
  80548c:	12000815 	stw	r8,32(r2)
  805490:	11c00915 	stw	r7,36(r2)
  805494:	11800a15 	stw	r6,40(r2)
  805498:	11400b15 	stw	r5,44(r2)
  80549c:	4a400284 	addi	r9,r9,10
  8054a0:	1a400315 	stw	r9,12(r3)
  8054a4:	18001915 	stw	zero,100(r3)
  8054a8:	18000015 	stw	zero,0(r3)
  8054ac:	18000115 	stw	zero,4(r3)
  8054b0:	18000215 	stw	zero,8(r3)
  8054b4:	18000415 	stw	zero,16(r3)
  8054b8:	18001705 	stb	zero,92(r3)
  8054bc:	18001745 	stb	zero,93(r3)
  8054c0:	18001785 	stb	zero,94(r3)
  8054c4:	180017c5 	stb	zero,95(r3)
  8054c8:	18001805 	stb	zero,96(r3)
  8054cc:	18001845 	stb	zero,97(r3)
  8054d0:	18001885 	stb	zero,98(r3)
  8054d4:	180018c5 	stb	zero,99(r3)
  8054d8:	20800317 	ldw	r2,12(r4)
  8054dc:	024000b4 	movhi	r9,2
  8054e0:	18000515 	stw	zero,20(r3)
  8054e4:	18000615 	stw	zero,24(r3)
  8054e8:	18c00715 	stw	r3,28(r3)
  8054ec:	1a000815 	stw	r8,32(r3)
  8054f0:	19c00915 	stw	r7,36(r3)
  8054f4:	19800a15 	stw	r6,40(r3)
  8054f8:	19400b15 	stw	r5,44(r3)
  8054fc:	4a400484 	addi	r9,r9,18
  805500:	10001915 	stw	zero,100(r2)
  805504:	10000015 	stw	zero,0(r2)
  805508:	10000115 	stw	zero,4(r2)
  80550c:	10000215 	stw	zero,8(r2)
  805510:	12400315 	stw	r9,12(r2)
  805514:	10000415 	stw	zero,16(r2)
  805518:	10000515 	stw	zero,20(r2)
  80551c:	10000615 	stw	zero,24(r2)
  805520:	10001705 	stb	zero,92(r2)
  805524:	10001745 	stb	zero,93(r2)
  805528:	10001785 	stb	zero,94(r2)
  80552c:	100017c5 	stb	zero,95(r2)
  805530:	10001805 	stb	zero,96(r2)
  805534:	10001845 	stb	zero,97(r2)
  805538:	10001885 	stb	zero,98(r2)
  80553c:	100018c5 	stb	zero,99(r2)
  805540:	10800715 	stw	r2,28(r2)
  805544:	12000815 	stw	r8,32(r2)
  805548:	11c00915 	stw	r7,36(r2)
  80554c:	11800a15 	stw	r6,40(r2)
  805550:	11400b15 	stw	r5,44(r2)
  805554:	00800044 	movi	r2,1
  805558:	20800e15 	stw	r2,56(r4)
  80555c:	f800283a 	ret

00805560 <__sfmoreglue>:
  805560:	defffc04 	addi	sp,sp,-16
  805564:	dc800215 	stw	r18,8(sp)
  805568:	2825883a 	mov	r18,r5
  80556c:	dc000015 	stw	r16,0(sp)
  805570:	01401a04 	movi	r5,104
  805574:	2021883a 	mov	r16,r4
  805578:	913fffc4 	addi	r4,r18,-1
  80557c:	dfc00315 	stw	ra,12(sp)
  805580:	dc400115 	stw	r17,4(sp)
  805584:	08012200 	call	801220 <__mulsi3>
  805588:	8009883a 	mov	r4,r16
  80558c:	11401d04 	addi	r5,r2,116
  805590:	1023883a 	mov	r17,r2
  805594:	08064100 	call	806410 <_malloc_r>
  805598:	1021883a 	mov	r16,r2
  80559c:	10000726 	beq	r2,zero,8055bc <__sfmoreglue+0x5c>
  8055a0:	11000304 	addi	r4,r2,12
  8055a4:	10000015 	stw	zero,0(r2)
  8055a8:	14800115 	stw	r18,4(r2)
  8055ac:	11000215 	stw	r4,8(r2)
  8055b0:	89801a04 	addi	r6,r17,104
  8055b4:	000b883a 	mov	r5,zero
  8055b8:	0806eec0 	call	806eec <memset>
  8055bc:	8005883a 	mov	r2,r16
  8055c0:	dfc00317 	ldw	ra,12(sp)
  8055c4:	dc800217 	ldw	r18,8(sp)
  8055c8:	dc400117 	ldw	r17,4(sp)
  8055cc:	dc000017 	ldw	r16,0(sp)
  8055d0:	dec00404 	addi	sp,sp,16
  8055d4:	f800283a 	ret

008055d8 <__sfp>:
  8055d8:	defffb04 	addi	sp,sp,-20
  8055dc:	00802074 	movhi	r2,129
  8055e0:	dc000015 	stw	r16,0(sp)
  8055e4:	140bf417 	ldw	r16,12240(r2)
  8055e8:	dc400115 	stw	r17,4(sp)
  8055ec:	dfc00415 	stw	ra,16(sp)
  8055f0:	80800e17 	ldw	r2,56(r16)
  8055f4:	dcc00315 	stw	r19,12(sp)
  8055f8:	dc800215 	stw	r18,8(sp)
  8055fc:	2023883a 	mov	r17,r4
  805600:	10003126 	beq	r2,zero,8056c8 <__sfp+0xf0>
  805604:	8100ba17 	ldw	r4,744(r16)
  805608:	8140b917 	ldw	r5,740(r16)
  80560c:	04c00104 	movi	r19,4
  805610:	8400b804 	addi	r16,r16,736
  805614:	297fffc4 	addi	r5,r5,-1
  805618:	2800050e 	bge	r5,zero,805630 <__sfp+0x58>
  80561c:	00002406 	br	8056b0 <__sfp+0xd8>
  805620:	297fffc4 	addi	r5,r5,-1
  805624:	28bfffd8 	cmpnei	r2,r5,-1
  805628:	21001a04 	addi	r4,r4,104
  80562c:	10002026 	beq	r2,zero,8056b0 <__sfp+0xd8>
  805630:	2080030f 	ldh	r2,12(r4)
  805634:	103ffa1e 	bne	r2,zero,805620 <__sfp+0x48>
  805638:	00bffff4 	movhi	r2,65535
  80563c:	10800044 	addi	r2,r2,1
  805640:	20001915 	stw	zero,100(r4)
  805644:	20000015 	stw	zero,0(r4)
  805648:	20000115 	stw	zero,4(r4)
  80564c:	20000215 	stw	zero,8(r4)
  805650:	20800315 	stw	r2,12(r4)
  805654:	20000415 	stw	zero,16(r4)
  805658:	20000515 	stw	zero,20(r4)
  80565c:	20000615 	stw	zero,24(r4)
  805660:	20001705 	stb	zero,92(r4)
  805664:	20001745 	stb	zero,93(r4)
  805668:	20001785 	stb	zero,94(r4)
  80566c:	200017c5 	stb	zero,95(r4)
  805670:	20001805 	stb	zero,96(r4)
  805674:	20001845 	stb	zero,97(r4)
  805678:	20001885 	stb	zero,98(r4)
  80567c:	200018c5 	stb	zero,99(r4)
  805680:	20000c15 	stw	zero,48(r4)
  805684:	20000d15 	stw	zero,52(r4)
  805688:	20001115 	stw	zero,68(r4)
  80568c:	20001215 	stw	zero,72(r4)
  805690:	2005883a 	mov	r2,r4
  805694:	dfc00417 	ldw	ra,16(sp)
  805698:	dcc00317 	ldw	r19,12(sp)
  80569c:	dc800217 	ldw	r18,8(sp)
  8056a0:	dc400117 	ldw	r17,4(sp)
  8056a4:	dc000017 	ldw	r16,0(sp)
  8056a8:	dec00504 	addi	sp,sp,20
  8056ac:	f800283a 	ret
  8056b0:	80800017 	ldw	r2,0(r16)
  8056b4:	10000726 	beq	r2,zero,8056d4 <__sfp+0xfc>
  8056b8:	11000217 	ldw	r4,8(r2)
  8056bc:	11400117 	ldw	r5,4(r2)
  8056c0:	1021883a 	mov	r16,r2
  8056c4:	003fd306 	br	805614 <__sfp+0x3c>
  8056c8:	8009883a 	mov	r4,r16
  8056cc:	08053f80 	call	8053f8 <__sinit.part.0>
  8056d0:	003fcc06 	br	805604 <__sfp+0x2c>
  8056d4:	01406b04 	movi	r5,428
  8056d8:	8809883a 	mov	r4,r17
  8056dc:	08064100 	call	806410 <_malloc_r>
  8056e0:	1025883a 	mov	r18,r2
  8056e4:	10000c26 	beq	r2,zero,805718 <__sfp+0x140>
  8056e8:	11000304 	addi	r4,r2,12
  8056ec:	11000215 	stw	r4,8(r2)
  8056f0:	000b883a 	mov	r5,zero
  8056f4:	10000015 	stw	zero,0(r2)
  8056f8:	14c00115 	stw	r19,4(r2)
  8056fc:	01806804 	movi	r6,416
  805700:	0806eec0 	call	806eec <memset>
  805704:	1009883a 	mov	r4,r2
  805708:	84800015 	stw	r18,0(r16)
  80570c:	014000c4 	movi	r5,3
  805710:	9021883a 	mov	r16,r18
  805714:	003fc606 	br	805630 <__sfp+0x58>
  805718:	80000015 	stw	zero,0(r16)
  80571c:	00800304 	movi	r2,12
  805720:	88800015 	stw	r2,0(r17)
  805724:	0009883a 	mov	r4,zero
  805728:	003fd906 	br	805690 <__sfp+0xb8>

0080572c <_cleanup>:
  80572c:	00802074 	movhi	r2,129
  805730:	110bf417 	ldw	r4,12240(r2)
  805734:	01402074 	movhi	r5,129
  805738:	29682b04 	addi	r5,r5,-24404
  80573c:	08061001 	jmpi	806100 <_fwalk_reent>

00805740 <__sinit>:
  805740:	20800e17 	ldw	r2,56(r4)
  805744:	10000126 	beq	r2,zero,80574c <__sinit+0xc>
  805748:	f800283a 	ret
  80574c:	08053f81 	jmpi	8053f8 <__sinit.part.0>

00805750 <__sfp_lock_acquire>:
  805750:	f800283a 	ret

00805754 <__sfp_lock_release>:
  805754:	f800283a 	ret

00805758 <__sinit_lock_acquire>:
  805758:	f800283a 	ret

0080575c <__sinit_lock_release>:
  80575c:	f800283a 	ret

00805760 <__fp_lock_all>:
  805760:	00802074 	movhi	r2,129
  805764:	110bf517 	ldw	r4,12244(r2)
  805768:	01402034 	movhi	r5,128
  80576c:	2954f704 	addi	r5,r5,21468
  805770:	08060681 	jmpi	806068 <_fwalk>

00805774 <__fp_unlock_all>:
  805774:	00802074 	movhi	r2,129
  805778:	110bf517 	ldw	r4,12244(r2)
  80577c:	01402034 	movhi	r5,128
  805780:	2954fc04 	addi	r5,r5,21488
  805784:	08060681 	jmpi	806068 <_fwalk>

00805788 <_malloc_trim_r>:
  805788:	defffb04 	addi	sp,sp,-20
  80578c:	dcc00315 	stw	r19,12(sp)
  805790:	04c02074 	movhi	r19,129
  805794:	dc800215 	stw	r18,8(sp)
  805798:	dc400115 	stw	r17,4(sp)
  80579c:	dc000015 	stw	r16,0(sp)
  8057a0:	dfc00415 	stw	ra,16(sp)
  8057a4:	2821883a 	mov	r16,r5
  8057a8:	9cc61504 	addi	r19,r19,6228
  8057ac:	2025883a 	mov	r18,r4
  8057b0:	080eb4c0 	call	80eb4c <__malloc_lock>
  8057b4:	98800217 	ldw	r2,8(r19)
  8057b8:	14400117 	ldw	r17,4(r2)
  8057bc:	00bfff04 	movi	r2,-4
  8057c0:	88a2703a 	and	r17,r17,r2
  8057c4:	8c21c83a 	sub	r16,r17,r16
  8057c8:	8403fbc4 	addi	r16,r16,4079
  8057cc:	8020d33a 	srli	r16,r16,12
  8057d0:	843fffc4 	addi	r16,r16,-1
  8057d4:	8020933a 	slli	r16,r16,12
  8057d8:	80840008 	cmpgei	r2,r16,4096
  8057dc:	10000626 	beq	r2,zero,8057f8 <_malloc_trim_r+0x70>
  8057e0:	000b883a 	mov	r5,zero
  8057e4:	9009883a 	mov	r4,r18
  8057e8:	08087300 	call	808730 <_sbrk_r>
  8057ec:	98c00217 	ldw	r3,8(r19)
  8057f0:	1c47883a 	add	r3,r3,r17
  8057f4:	10c00a26 	beq	r2,r3,805820 <_malloc_trim_r+0x98>
  8057f8:	9009883a 	mov	r4,r18
  8057fc:	080eb700 	call	80eb70 <__malloc_unlock>
  805800:	0005883a 	mov	r2,zero
  805804:	dfc00417 	ldw	ra,16(sp)
  805808:	dcc00317 	ldw	r19,12(sp)
  80580c:	dc800217 	ldw	r18,8(sp)
  805810:	dc400117 	ldw	r17,4(sp)
  805814:	dc000017 	ldw	r16,0(sp)
  805818:	dec00504 	addi	sp,sp,20
  80581c:	f800283a 	ret
  805820:	040bc83a 	sub	r5,zero,r16
  805824:	9009883a 	mov	r4,r18
  805828:	08087300 	call	808730 <_sbrk_r>
  80582c:	10bfffd8 	cmpnei	r2,r2,-1
  805830:	10000d26 	beq	r2,zero,805868 <_malloc_trim_r+0xe0>
  805834:	00802074 	movhi	r2,129
  805838:	10930417 	ldw	r2,19472(r2)
  80583c:	98c00217 	ldw	r3,8(r19)
  805840:	8c23c83a 	sub	r17,r17,r16
  805844:	8c400054 	ori	r17,r17,1
  805848:	1421c83a 	sub	r16,r2,r16
  80584c:	1c400115 	stw	r17,4(r3)
  805850:	00802074 	movhi	r2,129
  805854:	9009883a 	mov	r4,r18
  805858:	14130415 	stw	r16,19472(r2)
  80585c:	080eb700 	call	80eb70 <__malloc_unlock>
  805860:	00800044 	movi	r2,1
  805864:	003fe706 	br	805804 <_malloc_trim_r+0x7c>
  805868:	000b883a 	mov	r5,zero
  80586c:	9009883a 	mov	r4,r18
  805870:	08087300 	call	808730 <_sbrk_r>
  805874:	99000217 	ldw	r4,8(r19)
  805878:	1107c83a 	sub	r3,r2,r4
  80587c:	19400410 	cmplti	r5,r3,16
  805880:	283fdd1e 	bne	r5,zero,8057f8 <_malloc_trim_r+0x70>
  805884:	01402074 	movhi	r5,129
  805888:	294bf617 	ldw	r5,12248(r5)
  80588c:	18c00054 	ori	r3,r3,1
  805890:	20c00115 	stw	r3,4(r4)
  805894:	1145c83a 	sub	r2,r2,r5
  805898:	01402074 	movhi	r5,129
  80589c:	28930415 	stw	r2,19472(r5)
  8058a0:	003fd506 	br	8057f8 <_malloc_trim_r+0x70>

008058a4 <_free_r>:
  8058a4:	28004f26 	beq	r5,zero,8059e4 <_free_r+0x140>
  8058a8:	defffd04 	addi	sp,sp,-12
  8058ac:	dc400115 	stw	r17,4(sp)
  8058b0:	dc000015 	stw	r16,0(sp)
  8058b4:	2023883a 	mov	r17,r4
  8058b8:	2821883a 	mov	r16,r5
  8058bc:	dfc00215 	stw	ra,8(sp)
  8058c0:	080eb4c0 	call	80eb4c <__malloc_lock>
  8058c4:	81ffff17 	ldw	r7,-4(r16)
  8058c8:	00bfff84 	movi	r2,-2
  8058cc:	80fffe04 	addi	r3,r16,-8
  8058d0:	3884703a 	and	r2,r7,r2
  8058d4:	01002074 	movhi	r4,129
  8058d8:	188d883a 	add	r6,r3,r2
  8058dc:	21061504 	addi	r4,r4,6228
  8058e0:	31400117 	ldw	r5,4(r6)
  8058e4:	22000217 	ldw	r8,8(r4)
  8058e8:	027fff04 	movi	r9,-4
  8058ec:	2a4a703a 	and	r5,r5,r9
  8058f0:	41806426 	beq	r8,r6,805a84 <_free_r+0x1e0>
  8058f4:	31400115 	stw	r5,4(r6)
  8058f8:	39c0004c 	andi	r7,r7,1
  8058fc:	3151883a 	add	r8,r6,r5
  805900:	3800281e 	bne	r7,zero,8059a4 <_free_r+0x100>
  805904:	82bffe17 	ldw	r10,-8(r16)
  805908:	42000117 	ldw	r8,4(r8)
  80590c:	01c02074 	movhi	r7,129
  805910:	1a87c83a 	sub	r3,r3,r10
  805914:	1a400217 	ldw	r9,8(r3)
  805918:	39c61704 	addi	r7,r7,6236
  80591c:	1285883a 	add	r2,r2,r10
  805920:	4200004c 	andi	r8,r8,1
  805924:	49c04c26 	beq	r9,r7,805a58 <_free_r+0x1b4>
  805928:	1a800317 	ldw	r10,12(r3)
  80592c:	4a800315 	stw	r10,12(r9)
  805930:	52400215 	stw	r9,8(r10)
  805934:	40007126 	beq	r8,zero,805afc <_free_r+0x258>
  805938:	11400054 	ori	r5,r2,1
  80593c:	19400115 	stw	r5,4(r3)
  805940:	30800015 	stw	r2,0(r6)
  805944:	11408028 	cmpgeui	r5,r2,512
  805948:	28002c1e 	bne	r5,zero,8059fc <_free_r+0x158>
  80594c:	100ad0fa 	srli	r5,r2,3
  805950:	100cd17a 	srli	r6,r2,5
  805954:	00800044 	movi	r2,1
  805958:	29400044 	addi	r5,r5,1
  80595c:	280a90fa 	slli	r5,r5,3
  805960:	21c00117 	ldw	r7,4(r4)
  805964:	1184983a 	sll	r2,r2,r6
  805968:	214b883a 	add	r5,r4,r5
  80596c:	29800017 	ldw	r6,0(r5)
  805970:	11c4b03a 	or	r2,r2,r7
  805974:	29fffe04 	addi	r7,r5,-8
  805978:	19c00315 	stw	r7,12(r3)
  80597c:	19800215 	stw	r6,8(r3)
  805980:	20800115 	stw	r2,4(r4)
  805984:	28c00015 	stw	r3,0(r5)
  805988:	30c00315 	stw	r3,12(r6)
  80598c:	8809883a 	mov	r4,r17
  805990:	dfc00217 	ldw	ra,8(sp)
  805994:	dc400117 	ldw	r17,4(sp)
  805998:	dc000017 	ldw	r16,0(sp)
  80599c:	dec00304 	addi	sp,sp,12
  8059a0:	080eb701 	jmpi	80eb70 <__malloc_unlock>
  8059a4:	41c00117 	ldw	r7,4(r8)
  8059a8:	39c0004c 	andi	r7,r7,1
  8059ac:	38000e1e 	bne	r7,zero,8059e8 <_free_r+0x144>
  8059b0:	01c02074 	movhi	r7,129
  8059b4:	1145883a 	add	r2,r2,r5
  8059b8:	39c61704 	addi	r7,r7,6236
  8059bc:	31400217 	ldw	r5,8(r6)
  8059c0:	12400054 	ori	r9,r2,1
  8059c4:	1891883a 	add	r8,r3,r2
  8059c8:	29c05226 	beq	r5,r7,805b14 <_free_r+0x270>
  8059cc:	31800317 	ldw	r6,12(r6)
  8059d0:	29800315 	stw	r6,12(r5)
  8059d4:	31400215 	stw	r5,8(r6)
  8059d8:	1a400115 	stw	r9,4(r3)
  8059dc:	40800015 	stw	r2,0(r8)
  8059e0:	003fd806 	br	805944 <_free_r+0xa0>
  8059e4:	f800283a 	ret
  8059e8:	11400054 	ori	r5,r2,1
  8059ec:	817fff15 	stw	r5,-4(r16)
  8059f0:	30800015 	stw	r2,0(r6)
  8059f4:	11408028 	cmpgeui	r5,r2,512
  8059f8:	283fd426 	beq	r5,zero,80594c <_free_r+0xa8>
  8059fc:	100ad27a 	srli	r5,r2,9
  805a00:	29800168 	cmpgeui	r6,r5,5
  805a04:	3000341e 	bne	r6,zero,805ad8 <_free_r+0x234>
  805a08:	100ad1ba 	srli	r5,r2,6
  805a0c:	29800e44 	addi	r6,r5,57
  805a10:	300c90fa 	slli	r6,r6,3
  805a14:	29c00e04 	addi	r7,r5,56
  805a18:	218d883a 	add	r6,r4,r6
  805a1c:	31400017 	ldw	r5,0(r6)
  805a20:	31bffe04 	addi	r6,r6,-8
  805a24:	31404226 	beq	r6,r5,805b30 <_free_r+0x28c>
  805a28:	01ffff04 	movi	r7,-4
  805a2c:	29000117 	ldw	r4,4(r5)
  805a30:	21c8703a 	and	r4,r4,r7
  805a34:	1100022e 	bgeu	r2,r4,805a40 <_free_r+0x19c>
  805a38:	29400217 	ldw	r5,8(r5)
  805a3c:	317ffb1e 	bne	r6,r5,805a2c <_free_r+0x188>
  805a40:	29800317 	ldw	r6,12(r5)
  805a44:	19800315 	stw	r6,12(r3)
  805a48:	19400215 	stw	r5,8(r3)
  805a4c:	30c00215 	stw	r3,8(r6)
  805a50:	28c00315 	stw	r3,12(r5)
  805a54:	003fcd06 	br	80598c <_free_r+0xe8>
  805a58:	40004d1e 	bne	r8,zero,805b90 <_free_r+0x2ec>
  805a5c:	31000317 	ldw	r4,12(r6)
  805a60:	31800217 	ldw	r6,8(r6)
  805a64:	2885883a 	add	r2,r5,r2
  805a68:	11400054 	ori	r5,r2,1
  805a6c:	31000315 	stw	r4,12(r6)
  805a70:	21800215 	stw	r6,8(r4)
  805a74:	19400115 	stw	r5,4(r3)
  805a78:	1887883a 	add	r3,r3,r2
  805a7c:	18800015 	stw	r2,0(r3)
  805a80:	003fc206 	br	80598c <_free_r+0xe8>
  805a84:	39c0004c 	andi	r7,r7,1
  805a88:	1145883a 	add	r2,r2,r5
  805a8c:	3800071e 	bne	r7,zero,805aac <_free_r+0x208>
  805a90:	81fffe17 	ldw	r7,-8(r16)
  805a94:	19c7c83a 	sub	r3,r3,r7
  805a98:	19400317 	ldw	r5,12(r3)
  805a9c:	19800217 	ldw	r6,8(r3)
  805aa0:	11c5883a 	add	r2,r2,r7
  805aa4:	31400315 	stw	r5,12(r6)
  805aa8:	29800215 	stw	r6,8(r5)
  805aac:	01402074 	movhi	r5,129
  805ab0:	11800054 	ori	r6,r2,1
  805ab4:	294bf717 	ldw	r5,12252(r5)
  805ab8:	19800115 	stw	r6,4(r3)
  805abc:	20c00215 	stw	r3,8(r4)
  805ac0:	117fb236 	bltu	r2,r5,80598c <_free_r+0xe8>
  805ac4:	00802074 	movhi	r2,129
  805ac8:	1152fa17 	ldw	r5,19432(r2)
  805acc:	8809883a 	mov	r4,r17
  805ad0:	08057880 	call	805788 <_malloc_trim_r>
  805ad4:	003fad06 	br	80598c <_free_r+0xe8>
  805ad8:	29800568 	cmpgeui	r6,r5,21
  805adc:	30000926 	beq	r6,zero,805b04 <_free_r+0x260>
  805ae0:	29801568 	cmpgeui	r6,r5,85
  805ae4:	3000191e 	bne	r6,zero,805b4c <_free_r+0x2a8>
  805ae8:	100ad33a 	srli	r5,r2,12
  805aec:	29801bc4 	addi	r6,r5,111
  805af0:	300c90fa 	slli	r6,r6,3
  805af4:	29c01b84 	addi	r7,r5,110
  805af8:	003fc706 	br	805a18 <_free_r+0x174>
  805afc:	1145883a 	add	r2,r2,r5
  805b00:	003fae06 	br	8059bc <_free_r+0x118>
  805b04:	29801704 	addi	r6,r5,92
  805b08:	300c90fa 	slli	r6,r6,3
  805b0c:	29c016c4 	addi	r7,r5,91
  805b10:	003fc106 	br	805a18 <_free_r+0x174>
  805b14:	20c00515 	stw	r3,20(r4)
  805b18:	20c00415 	stw	r3,16(r4)
  805b1c:	19c00315 	stw	r7,12(r3)
  805b20:	19c00215 	stw	r7,8(r3)
  805b24:	1a400115 	stw	r9,4(r3)
  805b28:	40800015 	stw	r2,0(r8)
  805b2c:	003f9706 	br	80598c <_free_r+0xe8>
  805b30:	380fd0ba 	srai	r7,r7,2
  805b34:	00800044 	movi	r2,1
  805b38:	22000117 	ldw	r8,4(r4)
  805b3c:	11ce983a 	sll	r7,r2,r7
  805b40:	3a0eb03a 	or	r7,r7,r8
  805b44:	21c00115 	stw	r7,4(r4)
  805b48:	003fbe06 	br	805a44 <_free_r+0x1a0>
  805b4c:	29805568 	cmpgeui	r6,r5,341
  805b50:	3000051e 	bne	r6,zero,805b68 <_free_r+0x2c4>
  805b54:	100ad3fa 	srli	r5,r2,15
  805b58:	29801e04 	addi	r6,r5,120
  805b5c:	300c90fa 	slli	r6,r6,3
  805b60:	29c01dc4 	addi	r7,r5,119
  805b64:	003fac06 	br	805a18 <_free_r+0x174>
  805b68:	29415568 	cmpgeui	r5,r5,1365
  805b6c:	2800051e 	bne	r5,zero,805b84 <_free_r+0x2e0>
  805b70:	100ad4ba 	srli	r5,r2,18
  805b74:	29801f44 	addi	r6,r5,125
  805b78:	300c90fa 	slli	r6,r6,3
  805b7c:	29c01f04 	addi	r7,r5,124
  805b80:	003fa506 	br	805a18 <_free_r+0x174>
  805b84:	0180fe04 	movi	r6,1016
  805b88:	01c01f84 	movi	r7,126
  805b8c:	003fa206 	br	805a18 <_free_r+0x174>
  805b90:	11000054 	ori	r4,r2,1
  805b94:	19000115 	stw	r4,4(r3)
  805b98:	30800015 	stw	r2,0(r6)
  805b9c:	003f7b06 	br	80598c <_free_r+0xe8>

00805ba0 <__sfvwrite_r>:
  805ba0:	30800217 	ldw	r2,8(r6)
  805ba4:	1000a326 	beq	r2,zero,805e34 <__sfvwrite_r+0x294>
  805ba8:	29c0030b 	ldhu	r7,12(r5)
  805bac:	defff404 	addi	sp,sp,-48
  805bb0:	ddc00915 	stw	r23,36(sp)
  805bb4:	dd400715 	stw	r21,28(sp)
  805bb8:	dc000215 	stw	r16,8(sp)
  805bbc:	dfc00b15 	stw	ra,44(sp)
  805bc0:	df000a15 	stw	fp,40(sp)
  805bc4:	dd800815 	stw	r22,32(sp)
  805bc8:	dd000615 	stw	r20,24(sp)
  805bcc:	dcc00515 	stw	r19,20(sp)
  805bd0:	dc800415 	stw	r18,16(sp)
  805bd4:	dc400315 	stw	r17,12(sp)
  805bd8:	3880020c 	andi	r2,r7,8
  805bdc:	302f883a 	mov	r23,r6
  805be0:	202b883a 	mov	r21,r4
  805be4:	2821883a 	mov	r16,r5
  805be8:	10002226 	beq	r2,zero,805c74 <__sfvwrite_r+0xd4>
  805bec:	28800417 	ldw	r2,16(r5)
  805bf0:	10002026 	beq	r2,zero,805c74 <__sfvwrite_r+0xd4>
  805bf4:	3880008c 	andi	r2,r7,2
  805bf8:	bc400017 	ldw	r17,0(r23)
  805bfc:	10002526 	beq	r2,zero,805c94 <__sfvwrite_r+0xf4>
  805c00:	80800917 	ldw	r2,36(r16)
  805c04:	81400717 	ldw	r5,28(r16)
  805c08:	05200034 	movhi	r20,32768
  805c0c:	0027883a 	mov	r19,zero
  805c10:	0025883a 	mov	r18,zero
  805c14:	a53f0004 	addi	r20,r20,-1024
  805c18:	980d883a 	mov	r6,r19
  805c1c:	a809883a 	mov	r4,r21
  805c20:	90001026 	beq	r18,zero,805c64 <__sfvwrite_r+0xc4>
  805c24:	900f883a 	mov	r7,r18
  805c28:	a480012e 	bgeu	r20,r18,805c30 <__sfvwrite_r+0x90>
  805c2c:	a00f883a 	mov	r7,r20
  805c30:	103ee83a 	callr	r2
  805c34:	00807a0e 	bge	zero,r2,805e20 <__sfvwrite_r+0x280>
  805c38:	b9000217 	ldw	r4,8(r23)
  805c3c:	98a7883a 	add	r19,r19,r2
  805c40:	90a5c83a 	sub	r18,r18,r2
  805c44:	2085c83a 	sub	r2,r4,r2
  805c48:	b8800215 	stw	r2,8(r23)
  805c4c:	10006326 	beq	r2,zero,805ddc <__sfvwrite_r+0x23c>
  805c50:	80800917 	ldw	r2,36(r16)
  805c54:	81400717 	ldw	r5,28(r16)
  805c58:	980d883a 	mov	r6,r19
  805c5c:	a809883a 	mov	r4,r21
  805c60:	903ff01e 	bne	r18,zero,805c24 <__sfvwrite_r+0x84>
  805c64:	8cc00017 	ldw	r19,0(r17)
  805c68:	8c800117 	ldw	r18,4(r17)
  805c6c:	8c400204 	addi	r17,r17,8
  805c70:	003fe906 	br	805c18 <__sfvwrite_r+0x78>
  805c74:	800b883a 	mov	r5,r16
  805c78:	a809883a 	mov	r4,r21
  805c7c:	08036040 	call	803604 <__swsetup_r>
  805c80:	1000f71e 	bne	r2,zero,806060 <__sfvwrite_r+0x4c0>
  805c84:	81c0030b 	ldhu	r7,12(r16)
  805c88:	bc400017 	ldw	r17,0(r23)
  805c8c:	3880008c 	andi	r2,r7,2
  805c90:	103fdb1e 	bne	r2,zero,805c00 <__sfvwrite_r+0x60>
  805c94:	3880004c 	andi	r2,r7,1
  805c98:	84800217 	ldw	r18,8(r16)
  805c9c:	82000017 	ldw	r8,0(r16)
  805ca0:	1000661e 	bne	r2,zero,805e3c <__sfvwrite_r+0x29c>
  805ca4:	00a00034 	movhi	r2,32768
  805ca8:	10bfff84 	addi	r2,r2,-2
  805cac:	00e00034 	movhi	r3,32768
  805cb0:	d8800015 	stw	r2,0(sp)
  805cb4:	18bfffc4 	addi	r2,r3,-1
  805cb8:	0039883a 	mov	fp,zero
  805cbc:	0027883a 	mov	r19,zero
  805cc0:	d8800115 	stw	r2,4(sp)
  805cc4:	98004126 	beq	r19,zero,805dcc <__sfvwrite_r+0x22c>
  805cc8:	3880800c 	andi	r2,r7,512
  805ccc:	10009726 	beq	r2,zero,805f2c <__sfvwrite_r+0x38c>
  805cd0:	902d883a 	mov	r22,r18
  805cd4:	9c80be36 	bltu	r19,r18,805fd0 <__sfvwrite_r+0x430>
  805cd8:	3881200c 	andi	r2,r7,1152
  805cdc:	10002626 	beq	r2,zero,805d78 <__sfvwrite_r+0x1d8>
  805ce0:	81800517 	ldw	r6,20(r16)
  805ce4:	81400417 	ldw	r5,16(r16)
  805ce8:	98800044 	addi	r2,r19,1
  805cec:	3189883a 	add	r4,r6,r6
  805cf0:	2189883a 	add	r4,r4,r6
  805cf4:	2028d7fa 	srli	r20,r4,31
  805cf8:	4165c83a 	sub	r18,r8,r5
  805cfc:	1485883a 	add	r2,r2,r18
  805d00:	a109883a 	add	r4,r20,r4
  805d04:	2029d07a 	srai	r20,r4,1
  805d08:	a00d883a 	mov	r6,r20
  805d0c:	a080022e 	bgeu	r20,r2,805d18 <__sfvwrite_r+0x178>
  805d10:	1029883a 	mov	r20,r2
  805d14:	100d883a 	mov	r6,r2
  805d18:	39c1000c 	andi	r7,r7,1024
  805d1c:	3800c026 	beq	r7,zero,806020 <__sfvwrite_r+0x480>
  805d20:	a809883a 	mov	r4,r21
  805d24:	300b883a 	mov	r5,r6
  805d28:	08064100 	call	806410 <_malloc_r>
  805d2c:	1009883a 	mov	r4,r2
  805d30:	1000c726 	beq	r2,zero,806050 <__sfvwrite_r+0x4b0>
  805d34:	81400417 	ldw	r5,16(r16)
  805d38:	900d883a 	mov	r6,r18
  805d3c:	0806cc00 	call	806cc0 <memcpy>
  805d40:	1009883a 	mov	r4,r2
  805d44:	8080030b 	ldhu	r2,12(r16)
  805d48:	00fedfc4 	movi	r3,-1153
  805d4c:	10c4703a 	and	r2,r2,r3
  805d50:	10802014 	ori	r2,r2,128
  805d54:	8080030d 	sth	r2,12(r16)
  805d58:	2491883a 	add	r8,r4,r18
  805d5c:	a485c83a 	sub	r2,r20,r18
  805d60:	81000415 	stw	r4,16(r16)
  805d64:	82000015 	stw	r8,0(r16)
  805d68:	85000515 	stw	r20,20(r16)
  805d6c:	9825883a 	mov	r18,r19
  805d70:	80800215 	stw	r2,8(r16)
  805d74:	982d883a 	mov	r22,r19
  805d78:	4009883a 	mov	r4,r8
  805d7c:	b00d883a 	mov	r6,r22
  805d80:	e00b883a 	mov	r5,fp
  805d84:	0806dc00 	call	806dc0 <memmove>
  805d88:	81000217 	ldw	r4,8(r16)
  805d8c:	80800017 	ldw	r2,0(r16)
  805d90:	9829883a 	mov	r20,r19
  805d94:	24a5c83a 	sub	r18,r4,r18
  805d98:	1585883a 	add	r2,r2,r22
  805d9c:	84800215 	stw	r18,8(r16)
  805da0:	80800015 	stw	r2,0(r16)
  805da4:	0027883a 	mov	r19,zero
  805da8:	b8800217 	ldw	r2,8(r23)
  805dac:	e539883a 	add	fp,fp,r20
  805db0:	1529c83a 	sub	r20,r2,r20
  805db4:	bd000215 	stw	r20,8(r23)
  805db8:	a0000826 	beq	r20,zero,805ddc <__sfvwrite_r+0x23c>
  805dbc:	81c0030b 	ldhu	r7,12(r16)
  805dc0:	84800217 	ldw	r18,8(r16)
  805dc4:	82000017 	ldw	r8,0(r16)
  805dc8:	983fbf1e 	bne	r19,zero,805cc8 <__sfvwrite_r+0x128>
  805dcc:	8f000017 	ldw	fp,0(r17)
  805dd0:	8cc00117 	ldw	r19,4(r17)
  805dd4:	8c400204 	addi	r17,r17,8
  805dd8:	003fba06 	br	805cc4 <__sfvwrite_r+0x124>
  805ddc:	0005883a 	mov	r2,zero
  805de0:	dfc00b17 	ldw	ra,44(sp)
  805de4:	df000a17 	ldw	fp,40(sp)
  805de8:	ddc00917 	ldw	r23,36(sp)
  805dec:	dd800817 	ldw	r22,32(sp)
  805df0:	dd400717 	ldw	r21,28(sp)
  805df4:	dd000617 	ldw	r20,24(sp)
  805df8:	dcc00517 	ldw	r19,20(sp)
  805dfc:	dc800417 	ldw	r18,16(sp)
  805e00:	dc400317 	ldw	r17,12(sp)
  805e04:	dc000217 	ldw	r16,8(sp)
  805e08:	dec00c04 	addi	sp,sp,48
  805e0c:	f800283a 	ret
  805e10:	800b883a 	mov	r5,r16
  805e14:	a809883a 	mov	r4,r21
  805e18:	08052f80 	call	8052f8 <_fflush_r>
  805e1c:	10002026 	beq	r2,zero,805ea0 <__sfvwrite_r+0x300>
  805e20:	8080030b 	ldhu	r2,12(r16)
  805e24:	10801014 	ori	r2,r2,64
  805e28:	8080030d 	sth	r2,12(r16)
  805e2c:	00bfffc4 	movi	r2,-1
  805e30:	003feb06 	br	805de0 <__sfvwrite_r+0x240>
  805e34:	0005883a 	mov	r2,zero
  805e38:	f800283a 	ret
  805e3c:	002d883a 	mov	r22,zero
  805e40:	0027883a 	mov	r19,zero
  805e44:	0005883a 	mov	r2,zero
  805e48:	0039883a 	mov	fp,zero
  805e4c:	b0001d26 	beq	r22,zero,805ec4 <__sfvwrite_r+0x324>
  805e50:	10002026 	beq	r2,zero,805ed4 <__sfvwrite_r+0x334>
  805e54:	9829883a 	mov	r20,r19
  805e58:	b500012e 	bgeu	r22,r20,805e60 <__sfvwrite_r+0x2c0>
  805e5c:	b029883a 	mov	r20,r22
  805e60:	80800417 	ldw	r2,16(r16)
  805e64:	81c00517 	ldw	r7,20(r16)
  805e68:	1200022e 	bgeu	r2,r8,805e74 <__sfvwrite_r+0x2d4>
  805e6c:	3ca5883a 	add	r18,r7,r18
  805e70:	95002216 	blt	r18,r20,805efc <__sfvwrite_r+0x35c>
  805e74:	a1c05916 	blt	r20,r7,805fdc <__sfvwrite_r+0x43c>
  805e78:	80800917 	ldw	r2,36(r16)
  805e7c:	81400717 	ldw	r5,28(r16)
  805e80:	e00d883a 	mov	r6,fp
  805e84:	a809883a 	mov	r4,r21
  805e88:	103ee83a 	callr	r2
  805e8c:	1025883a 	mov	r18,r2
  805e90:	00bfe30e 	bge	zero,r2,805e20 <__sfvwrite_r+0x280>
  805e94:	9ca7c83a 	sub	r19,r19,r18
  805e98:	983fdd26 	beq	r19,zero,805e10 <__sfvwrite_r+0x270>
  805e9c:	00800044 	movi	r2,1
  805ea0:	b9800217 	ldw	r6,8(r23)
  805ea4:	e4b9883a 	add	fp,fp,r18
  805ea8:	b4adc83a 	sub	r22,r22,r18
  805eac:	34a5c83a 	sub	r18,r6,r18
  805eb0:	bc800215 	stw	r18,8(r23)
  805eb4:	903fc926 	beq	r18,zero,805ddc <__sfvwrite_r+0x23c>
  805eb8:	84800217 	ldw	r18,8(r16)
  805ebc:	82000017 	ldw	r8,0(r16)
  805ec0:	b03fe31e 	bne	r22,zero,805e50 <__sfvwrite_r+0x2b0>
  805ec4:	8d800117 	ldw	r22,4(r17)
  805ec8:	8f000017 	ldw	fp,0(r17)
  805ecc:	8c400204 	addi	r17,r17,8
  805ed0:	b03ffc26 	beq	r22,zero,805ec4 <__sfvwrite_r+0x324>
  805ed4:	b00d883a 	mov	r6,r22
  805ed8:	01400284 	movi	r5,10
  805edc:	e009883a 	mov	r4,fp
  805ee0:	da000015 	stw	r8,0(sp)
  805ee4:	0806bf00 	call	806bf0 <memchr>
  805ee8:	da000017 	ldw	r8,0(sp)
  805eec:	10004926 	beq	r2,zero,806014 <__sfvwrite_r+0x474>
  805ef0:	10800044 	addi	r2,r2,1
  805ef4:	1727c83a 	sub	r19,r2,fp
  805ef8:	003fd606 	br	805e54 <__sfvwrite_r+0x2b4>
  805efc:	e00b883a 	mov	r5,fp
  805f00:	4009883a 	mov	r4,r8
  805f04:	900d883a 	mov	r6,r18
  805f08:	0806dc00 	call	806dc0 <memmove>
  805f0c:	80800017 	ldw	r2,0(r16)
  805f10:	800b883a 	mov	r5,r16
  805f14:	a809883a 	mov	r4,r21
  805f18:	1485883a 	add	r2,r2,r18
  805f1c:	80800015 	stw	r2,0(r16)
  805f20:	08052f80 	call	8052f8 <_fflush_r>
  805f24:	103fdb26 	beq	r2,zero,805e94 <__sfvwrite_r+0x2f4>
  805f28:	003fbd06 	br	805e20 <__sfvwrite_r+0x280>
  805f2c:	80800417 	ldw	r2,16(r16)
  805f30:	12001436 	bltu	r2,r8,805f84 <__sfvwrite_r+0x3e4>
  805f34:	85000517 	ldw	r20,20(r16)
  805f38:	9d001236 	bltu	r19,r20,805f84 <__sfvwrite_r+0x3e4>
  805f3c:	d8800017 	ldw	r2,0(sp)
  805f40:	14c0322e 	bgeu	r2,r19,80600c <__sfvwrite_r+0x46c>
  805f44:	d9000117 	ldw	r4,4(sp)
  805f48:	a00b883a 	mov	r5,r20
  805f4c:	080bb400 	call	80bb40 <__divsi3>
  805f50:	a00b883a 	mov	r5,r20
  805f54:	1009883a 	mov	r4,r2
  805f58:	08012200 	call	801220 <__mulsi3>
  805f5c:	82000917 	ldw	r8,36(r16)
  805f60:	81400717 	ldw	r5,28(r16)
  805f64:	100f883a 	mov	r7,r2
  805f68:	e00d883a 	mov	r6,fp
  805f6c:	a809883a 	mov	r4,r21
  805f70:	403ee83a 	callr	r8
  805f74:	1029883a 	mov	r20,r2
  805f78:	00bfa90e 	bge	zero,r2,805e20 <__sfvwrite_r+0x280>
  805f7c:	9d27c83a 	sub	r19,r19,r20
  805f80:	003f8906 	br	805da8 <__sfvwrite_r+0x208>
  805f84:	9029883a 	mov	r20,r18
  805f88:	9c80012e 	bgeu	r19,r18,805f90 <__sfvwrite_r+0x3f0>
  805f8c:	9829883a 	mov	r20,r19
  805f90:	4009883a 	mov	r4,r8
  805f94:	a00d883a 	mov	r6,r20
  805f98:	e00b883a 	mov	r5,fp
  805f9c:	0806dc00 	call	806dc0 <memmove>
  805fa0:	80800217 	ldw	r2,8(r16)
  805fa4:	81000017 	ldw	r4,0(r16)
  805fa8:	1505c83a 	sub	r2,r2,r20
  805fac:	2509883a 	add	r4,r4,r20
  805fb0:	80800215 	stw	r2,8(r16)
  805fb4:	81000015 	stw	r4,0(r16)
  805fb8:	103ff01e 	bne	r2,zero,805f7c <__sfvwrite_r+0x3dc>
  805fbc:	800b883a 	mov	r5,r16
  805fc0:	a809883a 	mov	r4,r21
  805fc4:	08052f80 	call	8052f8 <_fflush_r>
  805fc8:	103fec26 	beq	r2,zero,805f7c <__sfvwrite_r+0x3dc>
  805fcc:	003f9406 	br	805e20 <__sfvwrite_r+0x280>
  805fd0:	9825883a 	mov	r18,r19
  805fd4:	982d883a 	mov	r22,r19
  805fd8:	003f6706 	br	805d78 <__sfvwrite_r+0x1d8>
  805fdc:	4009883a 	mov	r4,r8
  805fe0:	a00d883a 	mov	r6,r20
  805fe4:	e00b883a 	mov	r5,fp
  805fe8:	0806dc00 	call	806dc0 <memmove>
  805fec:	81000217 	ldw	r4,8(r16)
  805ff0:	80800017 	ldw	r2,0(r16)
  805ff4:	a025883a 	mov	r18,r20
  805ff8:	2509c83a 	sub	r4,r4,r20
  805ffc:	1505883a 	add	r2,r2,r20
  806000:	81000215 	stw	r4,8(r16)
  806004:	80800015 	stw	r2,0(r16)
  806008:	003fa206 	br	805e94 <__sfvwrite_r+0x2f4>
  80600c:	9809883a 	mov	r4,r19
  806010:	003fcd06 	br	805f48 <__sfvwrite_r+0x3a8>
  806014:	b5000044 	addi	r20,r22,1
  806018:	a027883a 	mov	r19,r20
  80601c:	003f8e06 	br	805e58 <__sfvwrite_r+0x2b8>
  806020:	a809883a 	mov	r4,r21
  806024:	08081cc0 	call	8081cc <_realloc_r>
  806028:	1009883a 	mov	r4,r2
  80602c:	103f4a1e 	bne	r2,zero,805d58 <__sfvwrite_r+0x1b8>
  806030:	81400417 	ldw	r5,16(r16)
  806034:	a809883a 	mov	r4,r21
  806038:	08058a40 	call	8058a4 <_free_r>
  80603c:	8080030b 	ldhu	r2,12(r16)
  806040:	00c00304 	movi	r3,12
  806044:	a8c00015 	stw	r3,0(r21)
  806048:	10bfdfcc 	andi	r2,r2,65407
  80604c:	003f7506 	br	805e24 <__sfvwrite_r+0x284>
  806050:	00c00304 	movi	r3,12
  806054:	8080030b 	ldhu	r2,12(r16)
  806058:	a8c00015 	stw	r3,0(r21)
  80605c:	003f7106 	br	805e24 <__sfvwrite_r+0x284>
  806060:	00bfffc4 	movi	r2,-1
  806064:	003f5e06 	br	805de0 <__sfvwrite_r+0x240>

00806068 <_fwalk>:
  806068:	defffa04 	addi	sp,sp,-24
  80606c:	dd000415 	stw	r20,16(sp)
  806070:	dcc00315 	stw	r19,12(sp)
  806074:	dc800215 	stw	r18,8(sp)
  806078:	dfc00515 	stw	ra,20(sp)
  80607c:	dc400115 	stw	r17,4(sp)
  806080:	dc000015 	stw	r16,0(sp)
  806084:	2827883a 	mov	r19,r5
  806088:	2480b804 	addi	r18,r4,736
  80608c:	0029883a 	mov	r20,zero
  806090:	94400117 	ldw	r17,4(r18)
  806094:	94000217 	ldw	r16,8(r18)
  806098:	8c7fffc4 	addi	r17,r17,-1
  80609c:	88000d16 	blt	r17,zero,8060d4 <_fwalk+0x6c>
  8060a0:	8080030b 	ldhu	r2,12(r16)
  8060a4:	8c7fffc4 	addi	r17,r17,-1
  8060a8:	108000b0 	cmpltui	r2,r2,2
  8060ac:	1000061e 	bne	r2,zero,8060c8 <_fwalk+0x60>
  8060b0:	8080038f 	ldh	r2,14(r16)
  8060b4:	8009883a 	mov	r4,r16
  8060b8:	10bfffe0 	cmpeqi	r2,r2,-1
  8060bc:	1000021e 	bne	r2,zero,8060c8 <_fwalk+0x60>
  8060c0:	983ee83a 	callr	r19
  8060c4:	a0a8b03a 	or	r20,r20,r2
  8060c8:	88bfffd8 	cmpnei	r2,r17,-1
  8060cc:	84001a04 	addi	r16,r16,104
  8060d0:	103ff31e 	bne	r2,zero,8060a0 <_fwalk+0x38>
  8060d4:	94800017 	ldw	r18,0(r18)
  8060d8:	903fed1e 	bne	r18,zero,806090 <_fwalk+0x28>
  8060dc:	a005883a 	mov	r2,r20
  8060e0:	dfc00517 	ldw	ra,20(sp)
  8060e4:	dd000417 	ldw	r20,16(sp)
  8060e8:	dcc00317 	ldw	r19,12(sp)
  8060ec:	dc800217 	ldw	r18,8(sp)
  8060f0:	dc400117 	ldw	r17,4(sp)
  8060f4:	dc000017 	ldw	r16,0(sp)
  8060f8:	dec00604 	addi	sp,sp,24
  8060fc:	f800283a 	ret

00806100 <_fwalk_reent>:
  806100:	defff904 	addi	sp,sp,-28
  806104:	dd400515 	stw	r21,20(sp)
  806108:	dd000415 	stw	r20,16(sp)
  80610c:	dcc00315 	stw	r19,12(sp)
  806110:	dc800215 	stw	r18,8(sp)
  806114:	dfc00615 	stw	ra,24(sp)
  806118:	dc400115 	stw	r17,4(sp)
  80611c:	dc000015 	stw	r16,0(sp)
  806120:	202b883a 	mov	r21,r4
  806124:	2827883a 	mov	r19,r5
  806128:	2480b804 	addi	r18,r4,736
  80612c:	0029883a 	mov	r20,zero
  806130:	94400117 	ldw	r17,4(r18)
  806134:	94000217 	ldw	r16,8(r18)
  806138:	8c7fffc4 	addi	r17,r17,-1
  80613c:	88000e16 	blt	r17,zero,806178 <_fwalk_reent+0x78>
  806140:	8080030b 	ldhu	r2,12(r16)
  806144:	8c7fffc4 	addi	r17,r17,-1
  806148:	108000b0 	cmpltui	r2,r2,2
  80614c:	1000071e 	bne	r2,zero,80616c <_fwalk_reent+0x6c>
  806150:	8080038f 	ldh	r2,14(r16)
  806154:	800b883a 	mov	r5,r16
  806158:	a809883a 	mov	r4,r21
  80615c:	10bfffe0 	cmpeqi	r2,r2,-1
  806160:	1000021e 	bne	r2,zero,80616c <_fwalk_reent+0x6c>
  806164:	983ee83a 	callr	r19
  806168:	a0a8b03a 	or	r20,r20,r2
  80616c:	88bfffd8 	cmpnei	r2,r17,-1
  806170:	84001a04 	addi	r16,r16,104
  806174:	103ff21e 	bne	r2,zero,806140 <_fwalk_reent+0x40>
  806178:	94800017 	ldw	r18,0(r18)
  80617c:	903fec1e 	bne	r18,zero,806130 <_fwalk_reent+0x30>
  806180:	a005883a 	mov	r2,r20
  806184:	dfc00617 	ldw	ra,24(sp)
  806188:	dd400517 	ldw	r21,20(sp)
  80618c:	dd000417 	ldw	r20,16(sp)
  806190:	dcc00317 	ldw	r19,12(sp)
  806194:	dc800217 	ldw	r18,8(sp)
  806198:	dc400117 	ldw	r17,4(sp)
  80619c:	dc000017 	ldw	r16,0(sp)
  8061a0:	dec00704 	addi	sp,sp,28
  8061a4:	f800283a 	ret

008061a8 <__localeconv_l>:
  8061a8:	20803c04 	addi	r2,r4,240
  8061ac:	f800283a 	ret

008061b0 <_localeconv_r>:
  8061b0:	00802074 	movhi	r2,129
  8061b4:	10875304 	addi	r2,r2,7500
  8061b8:	f800283a 	ret

008061bc <localeconv>:
  8061bc:	00802074 	movhi	r2,129
  8061c0:	10875304 	addi	r2,r2,7500
  8061c4:	f800283a 	ret

008061c8 <__smakebuf_r>:
  8061c8:	2880030b 	ldhu	r2,12(r5)
  8061cc:	deffe804 	addi	sp,sp,-96
  8061d0:	dc001215 	stw	r16,72(sp)
  8061d4:	dfc01715 	stw	ra,92(sp)
  8061d8:	dd001615 	stw	r20,88(sp)
  8061dc:	dcc01515 	stw	r19,84(sp)
  8061e0:	dc801415 	stw	r18,80(sp)
  8061e4:	dc401315 	stw	r17,76(sp)
  8061e8:	10c0008c 	andi	r3,r2,2
  8061ec:	2821883a 	mov	r16,r5
  8061f0:	18000d26 	beq	r3,zero,806228 <__smakebuf_r+0x60>
  8061f4:	288010c4 	addi	r2,r5,67
  8061f8:	28800015 	stw	r2,0(r5)
  8061fc:	28800415 	stw	r2,16(r5)
  806200:	00800044 	movi	r2,1
  806204:	28800515 	stw	r2,20(r5)
  806208:	dfc01717 	ldw	ra,92(sp)
  80620c:	dd001617 	ldw	r20,88(sp)
  806210:	dcc01517 	ldw	r19,84(sp)
  806214:	dc801417 	ldw	r18,80(sp)
  806218:	dc401317 	ldw	r17,76(sp)
  80621c:	dc001217 	ldw	r16,72(sp)
  806220:	dec01804 	addi	sp,sp,96
  806224:	f800283a 	ret
  806228:	2940038f 	ldh	r5,14(r5)
  80622c:	2023883a 	mov	r17,r4
  806230:	28002816 	blt	r5,zero,8062d4 <__smakebuf_r+0x10c>
  806234:	d80d883a 	mov	r6,sp
  806238:	080a3e40 	call	80a3e4 <_fstat_r>
  80623c:	10002416 	blt	r2,zero,8062d0 <__smakebuf_r+0x108>
  806240:	d8800117 	ldw	r2,4(sp)
  806244:	10bc000c 	andi	r2,r2,61440
  806248:	10880018 	cmpnei	r2,r2,8192
  80624c:	1000461e 	bne	r2,zero,806368 <__smakebuf_r+0x1a0>
  806250:	8140038f 	ldh	r5,14(r16)
  806254:	8809883a 	mov	r4,r17
  806258:	080a4440 	call	80a444 <_isatty_r>
  80625c:	10003e26 	beq	r2,zero,806358 <__smakebuf_r+0x190>
  806260:	8080030b 	ldhu	r2,12(r16)
  806264:	80c010c4 	addi	r3,r16,67
  806268:	80c00015 	stw	r3,0(r16)
  80626c:	10800054 	ori	r2,r2,1
  806270:	8080030d 	sth	r2,12(r16)
  806274:	00800044 	movi	r2,1
  806278:	80c00415 	stw	r3,16(r16)
  80627c:	80800515 	stw	r2,20(r16)
  806280:	04c00044 	movi	r19,1
  806284:	05010004 	movi	r20,1024
  806288:	04820004 	movi	r18,2048
  80628c:	a00b883a 	mov	r5,r20
  806290:	8809883a 	mov	r4,r17
  806294:	08064100 	call	806410 <_malloc_r>
  806298:	10001726 	beq	r2,zero,8062f8 <__smakebuf_r+0x130>
  80629c:	80c0030b 	ldhu	r3,12(r16)
  8062a0:	01002034 	movhi	r4,128
  8062a4:	2114f904 	addi	r4,r4,21476
  8062a8:	89000f15 	stw	r4,60(r17)
  8062ac:	18c02014 	ori	r3,r3,128
  8062b0:	80c0030d 	sth	r3,12(r16)
  8062b4:	80800015 	stw	r2,0(r16)
  8062b8:	80800415 	stw	r2,16(r16)
  8062bc:	85000515 	stw	r20,20(r16)
  8062c0:	98001d1e 	bne	r19,zero,806338 <__smakebuf_r+0x170>
  8062c4:	90c6b03a 	or	r3,r18,r3
  8062c8:	80c0030d 	sth	r3,12(r16)
  8062cc:	003fce06 	br	806208 <__smakebuf_r+0x40>
  8062d0:	8080030b 	ldhu	r2,12(r16)
  8062d4:	1080200c 	andi	r2,r2,128
  8062d8:	0027883a 	mov	r19,zero
  8062dc:	10001326 	beq	r2,zero,80632c <__smakebuf_r+0x164>
  8062e0:	05001004 	movi	r20,64
  8062e4:	a00b883a 	mov	r5,r20
  8062e8:	8809883a 	mov	r4,r17
  8062ec:	0025883a 	mov	r18,zero
  8062f0:	08064100 	call	806410 <_malloc_r>
  8062f4:	103fe91e 	bne	r2,zero,80629c <__smakebuf_r+0xd4>
  8062f8:	8080030b 	ldhu	r2,12(r16)
  8062fc:	10c0800c 	andi	r3,r2,512
  806300:	183fc11e 	bne	r3,zero,806208 <__smakebuf_r+0x40>
  806304:	00ffff04 	movi	r3,-4
  806308:	10c4703a 	and	r2,r2,r3
  80630c:	10800094 	ori	r2,r2,2
  806310:	80c010c4 	addi	r3,r16,67
  806314:	8080030d 	sth	r2,12(r16)
  806318:	00800044 	movi	r2,1
  80631c:	80c00015 	stw	r3,0(r16)
  806320:	80c00415 	stw	r3,16(r16)
  806324:	80800515 	stw	r2,20(r16)
  806328:	003fb706 	br	806208 <__smakebuf_r+0x40>
  80632c:	05010004 	movi	r20,1024
  806330:	0025883a 	mov	r18,zero
  806334:	003fd506 	br	80628c <__smakebuf_r+0xc4>
  806338:	8140038f 	ldh	r5,14(r16)
  80633c:	8809883a 	mov	r4,r17
  806340:	080a4440 	call	80a444 <_isatty_r>
  806344:	80c0030b 	ldhu	r3,12(r16)
  806348:	103fde26 	beq	r2,zero,8062c4 <__smakebuf_r+0xfc>
  80634c:	18ffff0c 	andi	r3,r3,65532
  806350:	18c00054 	ori	r3,r3,1
  806354:	003fdb06 	br	8062c4 <__smakebuf_r+0xfc>
  806358:	04c00044 	movi	r19,1
  80635c:	05010004 	movi	r20,1024
  806360:	04820004 	movi	r18,2048
  806364:	003fc906 	br	80628c <__smakebuf_r+0xc4>
  806368:	0027883a 	mov	r19,zero
  80636c:	05010004 	movi	r20,1024
  806370:	04820004 	movi	r18,2048
  806374:	003fc506 	br	80628c <__smakebuf_r+0xc4>

00806378 <__swhatbuf_r>:
  806378:	deffea04 	addi	sp,sp,-88
  80637c:	dc001215 	stw	r16,72(sp)
  806380:	2821883a 	mov	r16,r5
  806384:	2940038f 	ldh	r5,14(r5)
  806388:	dc801415 	stw	r18,80(sp)
  80638c:	dc401315 	stw	r17,76(sp)
  806390:	dfc01515 	stw	ra,84(sp)
  806394:	3023883a 	mov	r17,r6
  806398:	3825883a 	mov	r18,r7
  80639c:	28001016 	blt	r5,zero,8063e0 <__swhatbuf_r+0x68>
  8063a0:	d80d883a 	mov	r6,sp
  8063a4:	080a3e40 	call	80a3e4 <_fstat_r>
  8063a8:	10000d16 	blt	r2,zero,8063e0 <__swhatbuf_r+0x68>
  8063ac:	d8c00117 	ldw	r3,4(sp)
  8063b0:	00820004 	movi	r2,2048
  8063b4:	18fc000c 	andi	r3,r3,61440
  8063b8:	18c80020 	cmpeqi	r3,r3,8192
  8063bc:	90c00015 	stw	r3,0(r18)
  8063c0:	00c10004 	movi	r3,1024
  8063c4:	88c00015 	stw	r3,0(r17)
  8063c8:	dfc01517 	ldw	ra,84(sp)
  8063cc:	dc801417 	ldw	r18,80(sp)
  8063d0:	dc401317 	ldw	r17,76(sp)
  8063d4:	dc001217 	ldw	r16,72(sp)
  8063d8:	dec01604 	addi	sp,sp,88
  8063dc:	f800283a 	ret
  8063e0:	8080030b 	ldhu	r2,12(r16)
  8063e4:	90000015 	stw	zero,0(r18)
  8063e8:	1080200c 	andi	r2,r2,128
  8063ec:	10000426 	beq	r2,zero,806400 <__swhatbuf_r+0x88>
  8063f0:	00801004 	movi	r2,64
  8063f4:	88800015 	stw	r2,0(r17)
  8063f8:	0005883a 	mov	r2,zero
  8063fc:	003ff206 	br	8063c8 <__swhatbuf_r+0x50>
  806400:	00810004 	movi	r2,1024
  806404:	88800015 	stw	r2,0(r17)
  806408:	0005883a 	mov	r2,zero
  80640c:	003fee06 	br	8063c8 <__swhatbuf_r+0x50>

00806410 <_malloc_r>:
  806410:	defff604 	addi	sp,sp,-40
  806414:	dc400115 	stw	r17,4(sp)
  806418:	2c4002c4 	addi	r17,r5,11
  80641c:	dc800215 	stw	r18,8(sp)
  806420:	dfc00915 	stw	ra,36(sp)
  806424:	df000815 	stw	fp,32(sp)
  806428:	ddc00715 	stw	r23,28(sp)
  80642c:	dd800615 	stw	r22,24(sp)
  806430:	dd400515 	stw	r21,20(sp)
  806434:	dd000415 	stw	r20,16(sp)
  806438:	dcc00315 	stw	r19,12(sp)
  80643c:	dc000015 	stw	r16,0(sp)
  806440:	888005e8 	cmpgeui	r2,r17,23
  806444:	2025883a 	mov	r18,r4
  806448:	10001b1e 	bne	r2,zero,8064b8 <_malloc_r+0xa8>
  80644c:	29400468 	cmpgeui	r5,r5,17
  806450:	2800821e 	bne	r5,zero,80665c <_malloc_r+0x24c>
  806454:	080eb4c0 	call	80eb4c <__malloc_lock>
  806458:	04400404 	movi	r17,16
  80645c:	00800604 	movi	r2,24
  806460:	01c00084 	movi	r7,2
  806464:	04c02074 	movhi	r19,129
  806468:	9cc61504 	addi	r19,r19,6228
  80646c:	9885883a 	add	r2,r19,r2
  806470:	14000117 	ldw	r16,4(r2)
  806474:	10fffe04 	addi	r3,r2,-8
  806478:	80c08b26 	beq	r16,r3,8066a8 <_malloc_r+0x298>
  80647c:	80800117 	ldw	r2,4(r16)
  806480:	81000317 	ldw	r4,12(r16)
  806484:	00ffff04 	movi	r3,-4
  806488:	10c4703a 	and	r2,r2,r3
  80648c:	81400217 	ldw	r5,8(r16)
  806490:	8085883a 	add	r2,r16,r2
  806494:	10c00117 	ldw	r3,4(r2)
  806498:	29000315 	stw	r4,12(r5)
  80649c:	21400215 	stw	r5,8(r4)
  8064a0:	18c00054 	ori	r3,r3,1
  8064a4:	10c00115 	stw	r3,4(r2)
  8064a8:	9009883a 	mov	r4,r18
  8064ac:	080eb700 	call	80eb70 <__malloc_unlock>
  8064b0:	80800204 	addi	r2,r16,8
  8064b4:	00006c06 	br	806668 <_malloc_r+0x258>
  8064b8:	00bffe04 	movi	r2,-8
  8064bc:	88a2703a 	and	r17,r17,r2
  8064c0:	88006616 	blt	r17,zero,80665c <_malloc_r+0x24c>
  8064c4:	89406536 	bltu	r17,r5,80665c <_malloc_r+0x24c>
  8064c8:	080eb4c0 	call	80eb4c <__malloc_lock>
  8064cc:	88807e28 	cmpgeui	r2,r17,504
  8064d0:	10012226 	beq	r2,zero,80695c <_malloc_r+0x54c>
  8064d4:	8804d27a 	srli	r2,r17,9
  8064d8:	10006f26 	beq	r2,zero,806698 <_malloc_r+0x288>
  8064dc:	10c00168 	cmpgeui	r3,r2,5
  8064e0:	1800fe1e 	bne	r3,zero,8068dc <_malloc_r+0x4cc>
  8064e4:	8804d1ba 	srli	r2,r17,6
  8064e8:	11c00e44 	addi	r7,r2,57
  8064ec:	380890fa 	slli	r4,r7,3
  8064f0:	12000e04 	addi	r8,r2,56
  8064f4:	04c02074 	movhi	r19,129
  8064f8:	9cc61504 	addi	r19,r19,6228
  8064fc:	9909883a 	add	r4,r19,r4
  806500:	24000117 	ldw	r16,4(r4)
  806504:	213ffe04 	addi	r4,r4,-8
  806508:	24000b26 	beq	r4,r16,806538 <_malloc_r+0x128>
  80650c:	01bfff04 	movi	r6,-4
  806510:	00000306 	br	806520 <_malloc_r+0x110>
  806514:	1800d60e 	bge	r3,zero,806870 <_malloc_r+0x460>
  806518:	84000317 	ldw	r16,12(r16)
  80651c:	24000626 	beq	r4,r16,806538 <_malloc_r+0x128>
  806520:	80800117 	ldw	r2,4(r16)
  806524:	1184703a 	and	r2,r2,r6
  806528:	1447c83a 	sub	r3,r2,r17
  80652c:	19400408 	cmpgei	r5,r3,16
  806530:	283ff826 	beq	r5,zero,806514 <_malloc_r+0x104>
  806534:	400f883a 	mov	r7,r8
  806538:	9c000417 	ldw	r16,16(r19)
  80653c:	02402074 	movhi	r9,129
  806540:	4a461704 	addi	r9,r9,6236
  806544:	82405f26 	beq	r16,r9,8066c4 <_malloc_r+0x2b4>
  806548:	80c00117 	ldw	r3,4(r16)
  80654c:	00bfff04 	movi	r2,-4
  806550:	1884703a 	and	r2,r3,r2
  806554:	1447c83a 	sub	r3,r2,r17
  806558:	19000410 	cmplti	r4,r3,16
  80655c:	20010a26 	beq	r4,zero,806988 <_malloc_r+0x578>
  806560:	9a400515 	stw	r9,20(r19)
  806564:	9a400415 	stw	r9,16(r19)
  806568:	1800ff0e 	bge	r3,zero,806968 <_malloc_r+0x558>
  80656c:	10c08028 	cmpgeui	r3,r2,512
  806570:	1800c11e 	bne	r3,zero,806878 <_malloc_r+0x468>
  806574:	1006d0fa 	srli	r3,r2,3
  806578:	1008d17a 	srli	r4,r2,5
  80657c:	00800044 	movi	r2,1
  806580:	18c00044 	addi	r3,r3,1
  806584:	180690fa 	slli	r3,r3,3
  806588:	99400117 	ldw	r5,4(r19)
  80658c:	1104983a 	sll	r2,r2,r4
  806590:	98c7883a 	add	r3,r19,r3
  806594:	19000017 	ldw	r4,0(r3)
  806598:	1144b03a 	or	r2,r2,r5
  80659c:	197ffe04 	addi	r5,r3,-8
  8065a0:	81400315 	stw	r5,12(r16)
  8065a4:	81000215 	stw	r4,8(r16)
  8065a8:	98800115 	stw	r2,4(r19)
  8065ac:	1c000015 	stw	r16,0(r3)
  8065b0:	24000315 	stw	r16,12(r4)
  8065b4:	3807d0ba 	srai	r3,r7,2
  8065b8:	01000044 	movi	r4,1
  8065bc:	20c8983a 	sll	r4,r4,r3
  8065c0:	11004536 	bltu	r2,r4,8066d8 <_malloc_r+0x2c8>
  8065c4:	2086703a 	and	r3,r4,r2
  8065c8:	18000a1e 	bne	r3,zero,8065f4 <_malloc_r+0x1e4>
  8065cc:	00ffff04 	movi	r3,-4
  8065d0:	2109883a 	add	r4,r4,r4
  8065d4:	38ce703a 	and	r7,r7,r3
  8065d8:	2086703a 	and	r3,r4,r2
  8065dc:	39c00104 	addi	r7,r7,4
  8065e0:	1800041e 	bne	r3,zero,8065f4 <_malloc_r+0x1e4>
  8065e4:	2109883a 	add	r4,r4,r4
  8065e8:	2086703a 	and	r3,r4,r2
  8065ec:	39c00104 	addi	r7,r7,4
  8065f0:	183ffc26 	beq	r3,zero,8065e4 <_malloc_r+0x1d4>
  8065f4:	02bfff04 	movi	r10,-4
  8065f8:	381690fa 	slli	r11,r7,3
  8065fc:	3819883a 	mov	r12,r7
  806600:	9ad7883a 	add	r11,r19,r11
  806604:	5811883a 	mov	r8,r11
  806608:	40800317 	ldw	r2,12(r8)
  80660c:	4080bc26 	beq	r8,r2,806900 <_malloc_r+0x4f0>
  806610:	10c00117 	ldw	r3,4(r2)
  806614:	1021883a 	mov	r16,r2
  806618:	10800317 	ldw	r2,12(r2)
  80661c:	1a86703a 	and	r3,r3,r10
  806620:	1c4bc83a 	sub	r5,r3,r17
  806624:	29800410 	cmplti	r6,r5,16
  806628:	3000ba26 	beq	r6,zero,806914 <_malloc_r+0x504>
  80662c:	283ff716 	blt	r5,zero,80660c <_malloc_r+0x1fc>
  806630:	80c7883a 	add	r3,r16,r3
  806634:	19400117 	ldw	r5,4(r3)
  806638:	81800217 	ldw	r6,8(r16)
  80663c:	9009883a 	mov	r4,r18
  806640:	29400054 	ori	r5,r5,1
  806644:	19400115 	stw	r5,4(r3)
  806648:	30800315 	stw	r2,12(r6)
  80664c:	11800215 	stw	r6,8(r2)
  806650:	080eb700 	call	80eb70 <__malloc_unlock>
  806654:	80800204 	addi	r2,r16,8
  806658:	00000306 	br	806668 <_malloc_r+0x258>
  80665c:	00800304 	movi	r2,12
  806660:	90800015 	stw	r2,0(r18)
  806664:	0005883a 	mov	r2,zero
  806668:	dfc00917 	ldw	ra,36(sp)
  80666c:	df000817 	ldw	fp,32(sp)
  806670:	ddc00717 	ldw	r23,28(sp)
  806674:	dd800617 	ldw	r22,24(sp)
  806678:	dd400517 	ldw	r21,20(sp)
  80667c:	dd000417 	ldw	r20,16(sp)
  806680:	dcc00317 	ldw	r19,12(sp)
  806684:	dc800217 	ldw	r18,8(sp)
  806688:	dc400117 	ldw	r17,4(sp)
  80668c:	dc000017 	ldw	r16,0(sp)
  806690:	dec00a04 	addi	sp,sp,40
  806694:	f800283a 	ret
  806698:	01008004 	movi	r4,512
  80669c:	01c01004 	movi	r7,64
  8066a0:	02000fc4 	movi	r8,63
  8066a4:	003f9306 	br	8064f4 <_malloc_r+0xe4>
  8066a8:	14000317 	ldw	r16,12(r2)
  8066ac:	39c00084 	addi	r7,r7,2
  8066b0:	143f721e 	bne	r2,r16,80647c <_malloc_r+0x6c>
  8066b4:	9c000417 	ldw	r16,16(r19)
  8066b8:	02402074 	movhi	r9,129
  8066bc:	4a461704 	addi	r9,r9,6236
  8066c0:	827fa11e 	bne	r16,r9,806548 <_malloc_r+0x138>
  8066c4:	3807d0ba 	srai	r3,r7,2
  8066c8:	01000044 	movi	r4,1
  8066cc:	98800117 	ldw	r2,4(r19)
  8066d0:	20c8983a 	sll	r4,r4,r3
  8066d4:	113fbb2e 	bgeu	r2,r4,8065c4 <_malloc_r+0x1b4>
  8066d8:	9c000217 	ldw	r16,8(r19)
  8066dc:	00bfff04 	movi	r2,-4
  8066e0:	85400117 	ldw	r21,4(r16)
  8066e4:	a8ac703a 	and	r22,r21,r2
  8066e8:	b4400336 	bltu	r22,r17,8066f8 <_malloc_r+0x2e8>
  8066ec:	b445c83a 	sub	r2,r22,r17
  8066f0:	10c00408 	cmpgei	r3,r2,16
  8066f4:	1800541e 	bne	r3,zero,806848 <_malloc_r+0x438>
  8066f8:	00802074 	movhi	r2,129
  8066fc:	108bf617 	ldw	r2,12248(r2)
  806700:	00c02074 	movhi	r3,129
  806704:	1d52fa17 	ldw	r21,19432(r3)
  806708:	10bfffd8 	cmpnei	r2,r2,-1
  80670c:	85b9883a 	add	fp,r16,r22
  806710:	8d6b883a 	add	r21,r17,r21
  806714:	1000d626 	beq	r2,zero,806a70 <_malloc_r+0x660>
  806718:	ad4403c4 	addi	r21,r21,4111
  80671c:	00bc0004 	movi	r2,-4096
  806720:	a8aa703a 	and	r21,r21,r2
  806724:	a80b883a 	mov	r5,r21
  806728:	9009883a 	mov	r4,r18
  80672c:	08087300 	call	808730 <_sbrk_r>
  806730:	102f883a 	mov	r23,r2
  806734:	10bfffd8 	cmpnei	r2,r2,-1
  806738:	1000a826 	beq	r2,zero,8069dc <_malloc_r+0x5cc>
  80673c:	bf00a636 	bltu	r23,fp,8069d8 <_malloc_r+0x5c8>
  806740:	00802074 	movhi	r2,129
  806744:	15130417 	ldw	r20,19472(r2)
  806748:	ad29883a 	add	r20,r21,r20
  80674c:	15130415 	stw	r20,19472(r2)
  806750:	a007883a 	mov	r3,r20
  806754:	e5c0ec26 	beq	fp,r23,806b08 <_malloc_r+0x6f8>
  806758:	00802074 	movhi	r2,129
  80675c:	108bf617 	ldw	r2,12248(r2)
  806760:	10bfffd8 	cmpnei	r2,r2,-1
  806764:	1000ef26 	beq	r2,zero,806b24 <_malloc_r+0x714>
  806768:	bf39c83a 	sub	fp,r23,fp
  80676c:	e0c7883a 	add	r3,fp,r3
  806770:	00802074 	movhi	r2,129
  806774:	10d30415 	stw	r3,19472(r2)
  806778:	bf0001cc 	andi	fp,r23,7
  80677c:	e000c526 	beq	fp,zero,806a94 <_malloc_r+0x684>
  806780:	bf2fc83a 	sub	r23,r23,fp
  806784:	bdc00204 	addi	r23,r23,8
  806788:	05040204 	movi	r20,4104
  80678c:	a729c83a 	sub	r20,r20,fp
  806790:	bd6b883a 	add	r21,r23,r21
  806794:	a569c83a 	sub	r20,r20,r21
  806798:	a503ffcc 	andi	r20,r20,4095
  80679c:	a00b883a 	mov	r5,r20
  8067a0:	9009883a 	mov	r4,r18
  8067a4:	08087300 	call	808730 <_sbrk_r>
  8067a8:	10ffffe0 	cmpeqi	r3,r2,-1
  8067ac:	1800f31e 	bne	r3,zero,806b7c <_malloc_r+0x76c>
  8067b0:	15c5c83a 	sub	r2,r2,r23
  8067b4:	152b883a 	add	r21,r2,r20
  8067b8:	00802074 	movhi	r2,129
  8067bc:	11530417 	ldw	r5,19472(r2)
  8067c0:	9dc00215 	stw	r23,8(r19)
  8067c4:	ad400054 	ori	r21,r21,1
  8067c8:	a169883a 	add	r20,r20,r5
  8067cc:	15130415 	stw	r20,19472(r2)
  8067d0:	bd400115 	stw	r21,4(r23)
  8067d4:	84c0d626 	beq	r16,r19,806b30 <_malloc_r+0x720>
  8067d8:	b0800428 	cmpgeui	r2,r22,16
  8067dc:	1000d626 	beq	r2,zero,806b38 <_malloc_r+0x728>
  8067e0:	80c00117 	ldw	r3,4(r16)
  8067e4:	013ffe04 	movi	r4,-8
  8067e8:	b0bffd04 	addi	r2,r22,-12
  8067ec:	1104703a 	and	r2,r2,r4
  8067f0:	18c0004c 	andi	r3,r3,1
  8067f4:	1886b03a 	or	r3,r3,r2
  8067f8:	80c00115 	stw	r3,4(r16)
  8067fc:	01000144 	movi	r4,5
  806800:	8087883a 	add	r3,r16,r2
  806804:	19000115 	stw	r4,4(r3)
  806808:	19000215 	stw	r4,8(r3)
  80680c:	10800428 	cmpgeui	r2,r2,16
  806810:	1000df1e 	bne	r2,zero,806b90 <_malloc_r+0x780>
  806814:	bd400117 	ldw	r21,4(r23)
  806818:	b821883a 	mov	r16,r23
  80681c:	00802074 	movhi	r2,129
  806820:	1092f917 	ldw	r2,19428(r2)
  806824:	1500022e 	bgeu	r2,r20,806830 <_malloc_r+0x420>
  806828:	00802074 	movhi	r2,129
  80682c:	1512f915 	stw	r20,19428(r2)
  806830:	00802074 	movhi	r2,129
  806834:	1092f817 	ldw	r2,19424(r2)
  806838:	15006a2e 	bgeu	r2,r20,8069e4 <_malloc_r+0x5d4>
  80683c:	00802074 	movhi	r2,129
  806840:	1512f815 	stw	r20,19424(r2)
  806844:	00006706 	br	8069e4 <_malloc_r+0x5d4>
  806848:	88c00054 	ori	r3,r17,1
  80684c:	80c00115 	stw	r3,4(r16)
  806850:	8463883a 	add	r17,r16,r17
  806854:	10800054 	ori	r2,r2,1
  806858:	9c400215 	stw	r17,8(r19)
  80685c:	88800115 	stw	r2,4(r17)
  806860:	9009883a 	mov	r4,r18
  806864:	080eb700 	call	80eb70 <__malloc_unlock>
  806868:	80800204 	addi	r2,r16,8
  80686c:	003f7e06 	br	806668 <_malloc_r+0x258>
  806870:	81000317 	ldw	r4,12(r16)
  806874:	003f0506 	br	80648c <_malloc_r+0x7c>
  806878:	1006d27a 	srli	r3,r2,9
  80687c:	19000168 	cmpgeui	r4,r3,5
  806880:	20005026 	beq	r4,zero,8069c4 <_malloc_r+0x5b4>
  806884:	19000568 	cmpgeui	r4,r3,21
  806888:	20008c1e 	bne	r4,zero,806abc <_malloc_r+0x6ac>
  80688c:	19401704 	addi	r5,r3,92
  806890:	280a90fa 	slli	r5,r5,3
  806894:	190016c4 	addi	r4,r3,91
  806898:	994b883a 	add	r5,r19,r5
  80689c:	28c00017 	ldw	r3,0(r5)
  8068a0:	297ffe04 	addi	r5,r5,-8
  8068a4:	28c07426 	beq	r5,r3,806a78 <_malloc_r+0x668>
  8068a8:	01bfff04 	movi	r6,-4
  8068ac:	19000117 	ldw	r4,4(r3)
  8068b0:	2188703a 	and	r4,r4,r6
  8068b4:	1100022e 	bgeu	r2,r4,8068c0 <_malloc_r+0x4b0>
  8068b8:	18c00217 	ldw	r3,8(r3)
  8068bc:	28fffb1e 	bne	r5,r3,8068ac <_malloc_r+0x49c>
  8068c0:	19400317 	ldw	r5,12(r3)
  8068c4:	98800117 	ldw	r2,4(r19)
  8068c8:	81400315 	stw	r5,12(r16)
  8068cc:	80c00215 	stw	r3,8(r16)
  8068d0:	2c000215 	stw	r16,8(r5)
  8068d4:	1c000315 	stw	r16,12(r3)
  8068d8:	003f3606 	br	8065b4 <_malloc_r+0x1a4>
  8068dc:	10c00568 	cmpgeui	r3,r2,21
  8068e0:	18004a26 	beq	r3,zero,806a0c <_malloc_r+0x5fc>
  8068e4:	10c01568 	cmpgeui	r3,r2,85
  8068e8:	18007b1e 	bne	r3,zero,806ad8 <_malloc_r+0x6c8>
  8068ec:	8804d33a 	srli	r2,r17,12
  8068f0:	11c01bc4 	addi	r7,r2,111
  8068f4:	380890fa 	slli	r4,r7,3
  8068f8:	12001b84 	addi	r8,r2,110
  8068fc:	003efd06 	br	8064f4 <_malloc_r+0xe4>
  806900:	63000044 	addi	r12,r12,1
  806904:	608000cc 	andi	r2,r12,3
  806908:	42000204 	addi	r8,r8,8
  80690c:	103f3e1e 	bne	r2,zero,806608 <_malloc_r+0x1f8>
  806910:	00004506 	br	806a28 <_malloc_r+0x618>
  806914:	81000217 	ldw	r4,8(r16)
  806918:	89800054 	ori	r6,r17,1
  80691c:	81800115 	stw	r6,4(r16)
  806920:	20800315 	stw	r2,12(r4)
  806924:	11000215 	stw	r4,8(r2)
  806928:	8463883a 	add	r17,r16,r17
  80692c:	9c400515 	stw	r17,20(r19)
  806930:	9c400415 	stw	r17,16(r19)
  806934:	28800054 	ori	r2,r5,1
  806938:	88800115 	stw	r2,4(r17)
  80693c:	8a400315 	stw	r9,12(r17)
  806940:	8a400215 	stw	r9,8(r17)
  806944:	80c7883a 	add	r3,r16,r3
  806948:	19400015 	stw	r5,0(r3)
  80694c:	9009883a 	mov	r4,r18
  806950:	080eb700 	call	80eb70 <__malloc_unlock>
  806954:	80800204 	addi	r2,r16,8
  806958:	003f4306 	br	806668 <_malloc_r+0x258>
  80695c:	880ed0fa 	srli	r7,r17,3
  806960:	88800204 	addi	r2,r17,8
  806964:	003ebf06 	br	806464 <_malloc_r+0x54>
  806968:	8085883a 	add	r2,r16,r2
  80696c:	10c00117 	ldw	r3,4(r2)
  806970:	9009883a 	mov	r4,r18
  806974:	18c00054 	ori	r3,r3,1
  806978:	10c00115 	stw	r3,4(r2)
  80697c:	080eb700 	call	80eb70 <__malloc_unlock>
  806980:	80800204 	addi	r2,r16,8
  806984:	003f3806 	br	806668 <_malloc_r+0x258>
  806988:	89000054 	ori	r4,r17,1
  80698c:	81000115 	stw	r4,4(r16)
  806990:	8463883a 	add	r17,r16,r17
  806994:	9c400515 	stw	r17,20(r19)
  806998:	9c400415 	stw	r17,16(r19)
  80699c:	19000054 	ori	r4,r3,1
  8069a0:	89000115 	stw	r4,4(r17)
  8069a4:	8085883a 	add	r2,r16,r2
  8069a8:	8a400315 	stw	r9,12(r17)
  8069ac:	8a400215 	stw	r9,8(r17)
  8069b0:	10c00015 	stw	r3,0(r2)
  8069b4:	9009883a 	mov	r4,r18
  8069b8:	080eb700 	call	80eb70 <__malloc_unlock>
  8069bc:	80800204 	addi	r2,r16,8
  8069c0:	003f2906 	br	806668 <_malloc_r+0x258>
  8069c4:	1006d1ba 	srli	r3,r2,6
  8069c8:	19400e44 	addi	r5,r3,57
  8069cc:	280a90fa 	slli	r5,r5,3
  8069d0:	19000e04 	addi	r4,r3,56
  8069d4:	003fb006 	br	806898 <_malloc_r+0x488>
  8069d8:	84c04626 	beq	r16,r19,806af4 <_malloc_r+0x6e4>
  8069dc:	9c000217 	ldw	r16,8(r19)
  8069e0:	85400117 	ldw	r21,4(r16)
  8069e4:	00bfff04 	movi	r2,-4
  8069e8:	a8aa703a 	and	r21,r21,r2
  8069ec:	ac45c83a 	sub	r2,r21,r17
  8069f0:	ac400236 	bltu	r21,r17,8069fc <_malloc_r+0x5ec>
  8069f4:	10c00408 	cmpgei	r3,r2,16
  8069f8:	183f931e 	bne	r3,zero,806848 <_malloc_r+0x438>
  8069fc:	9009883a 	mov	r4,r18
  806a00:	080eb700 	call	80eb70 <__malloc_unlock>
  806a04:	0005883a 	mov	r2,zero
  806a08:	003f1706 	br	806668 <_malloc_r+0x258>
  806a0c:	11c01704 	addi	r7,r2,92
  806a10:	380890fa 	slli	r4,r7,3
  806a14:	120016c4 	addi	r8,r2,91
  806a18:	003eb606 	br	8064f4 <_malloc_r+0xe4>
  806a1c:	58800217 	ldw	r2,8(r11)
  806a20:	39ffffc4 	addi	r7,r7,-1
  806a24:	12c0701e 	bne	r2,r11,806be8 <_malloc_r+0x7d8>
  806a28:	388000cc 	andi	r2,r7,3
  806a2c:	5afffe04 	addi	r11,r11,-8
  806a30:	103ffa1e 	bne	r2,zero,806a1c <_malloc_r+0x60c>
  806a34:	98c00117 	ldw	r3,4(r19)
  806a38:	0104303a 	nor	r2,zero,r4
  806a3c:	10c4703a 	and	r2,r2,r3
  806a40:	98800115 	stw	r2,4(r19)
  806a44:	2109883a 	add	r4,r4,r4
  806a48:	113f2336 	bltu	r2,r4,8066d8 <_malloc_r+0x2c8>
  806a4c:	203f2226 	beq	r4,zero,8066d8 <_malloc_r+0x2c8>
  806a50:	2086703a 	and	r3,r4,r2
  806a54:	1800041e 	bne	r3,zero,806a68 <_malloc_r+0x658>
  806a58:	2109883a 	add	r4,r4,r4
  806a5c:	2086703a 	and	r3,r4,r2
  806a60:	63000104 	addi	r12,r12,4
  806a64:	183ffc26 	beq	r3,zero,806a58 <_malloc_r+0x648>
  806a68:	600f883a 	mov	r7,r12
  806a6c:	003ee206 	br	8065f8 <_malloc_r+0x1e8>
  806a70:	ad400404 	addi	r21,r21,16
  806a74:	003f2b06 	br	806724 <_malloc_r+0x314>
  806a78:	2009d0ba 	srai	r4,r4,2
  806a7c:	00800044 	movi	r2,1
  806a80:	99800117 	ldw	r6,4(r19)
  806a84:	1104983a 	sll	r2,r2,r4
  806a88:	1184b03a 	or	r2,r2,r6
  806a8c:	98800115 	stw	r2,4(r19)
  806a90:	003f8d06 	br	8068c8 <_malloc_r+0x4b8>
  806a94:	bd69883a 	add	r20,r23,r21
  806a98:	0529c83a 	sub	r20,zero,r20
  806a9c:	a503ffcc 	andi	r20,r20,4095
  806aa0:	a00b883a 	mov	r5,r20
  806aa4:	9009883a 	mov	r4,r18
  806aa8:	08087300 	call	808730 <_sbrk_r>
  806aac:	10ffffe0 	cmpeqi	r3,r2,-1
  806ab0:	183f3f26 	beq	r3,zero,8067b0 <_malloc_r+0x3a0>
  806ab4:	0029883a 	mov	r20,zero
  806ab8:	003f3f06 	br	8067b8 <_malloc_r+0x3a8>
  806abc:	19001568 	cmpgeui	r4,r3,85
  806ac0:	2000201e 	bne	r4,zero,806b44 <_malloc_r+0x734>
  806ac4:	1006d33a 	srli	r3,r2,12
  806ac8:	19401bc4 	addi	r5,r3,111
  806acc:	280a90fa 	slli	r5,r5,3
  806ad0:	19001b84 	addi	r4,r3,110
  806ad4:	003f7006 	br	806898 <_malloc_r+0x488>
  806ad8:	10c05568 	cmpgeui	r3,r2,341
  806adc:	1800201e 	bne	r3,zero,806b60 <_malloc_r+0x750>
  806ae0:	8804d3fa 	srli	r2,r17,15
  806ae4:	11c01e04 	addi	r7,r2,120
  806ae8:	380890fa 	slli	r4,r7,3
  806aec:	12001dc4 	addi	r8,r2,119
  806af0:	003e8006 	br	8064f4 <_malloc_r+0xe4>
  806af4:	00802074 	movhi	r2,129
  806af8:	10d30417 	ldw	r3,19472(r2)
  806afc:	a8c7883a 	add	r3,r21,r3
  806b00:	10d30415 	stw	r3,19472(r2)
  806b04:	003f1406 	br	806758 <_malloc_r+0x348>
  806b08:	e083ffcc 	andi	r2,fp,4095
  806b0c:	103f121e 	bne	r2,zero,806758 <_malloc_r+0x348>
  806b10:	9c000217 	ldw	r16,8(r19)
  806b14:	b56b883a 	add	r21,r22,r21
  806b18:	ad400054 	ori	r21,r21,1
  806b1c:	85400115 	stw	r21,4(r16)
  806b20:	003f3e06 	br	80681c <_malloc_r+0x40c>
  806b24:	00802074 	movhi	r2,129
  806b28:	15cbf615 	stw	r23,12248(r2)
  806b2c:	003f1206 	br	806778 <_malloc_r+0x368>
  806b30:	b821883a 	mov	r16,r23
  806b34:	003f3906 	br	80681c <_malloc_r+0x40c>
  806b38:	00800044 	movi	r2,1
  806b3c:	b8800115 	stw	r2,4(r23)
  806b40:	003fae06 	br	8069fc <_malloc_r+0x5ec>
  806b44:	19005568 	cmpgeui	r4,r3,341
  806b48:	2000191e 	bne	r4,zero,806bb0 <_malloc_r+0x7a0>
  806b4c:	1006d3fa 	srli	r3,r2,15
  806b50:	19401e04 	addi	r5,r3,120
  806b54:	280a90fa 	slli	r5,r5,3
  806b58:	19001dc4 	addi	r4,r3,119
  806b5c:	003f4e06 	br	806898 <_malloc_r+0x488>
  806b60:	10815568 	cmpgeui	r2,r2,1365
  806b64:	1000191e 	bne	r2,zero,806bcc <_malloc_r+0x7bc>
  806b68:	8804d4ba 	srli	r2,r17,18
  806b6c:	11c01f44 	addi	r7,r2,125
  806b70:	380890fa 	slli	r4,r7,3
  806b74:	12001f04 	addi	r8,r2,124
  806b78:	003e5e06 	br	8064f4 <_malloc_r+0xe4>
  806b7c:	e73ffe04 	addi	fp,fp,-8
  806b80:	af2b883a 	add	r21,r21,fp
  806b84:	adebc83a 	sub	r21,r21,r23
  806b88:	0029883a 	mov	r20,zero
  806b8c:	003f0a06 	br	8067b8 <_malloc_r+0x3a8>
  806b90:	81400204 	addi	r5,r16,8
  806b94:	9009883a 	mov	r4,r18
  806b98:	08058a40 	call	8058a4 <_free_r>
  806b9c:	9c000217 	ldw	r16,8(r19)
  806ba0:	00802074 	movhi	r2,129
  806ba4:	15130417 	ldw	r20,19472(r2)
  806ba8:	85400117 	ldw	r21,4(r16)
  806bac:	003f1b06 	br	80681c <_malloc_r+0x40c>
  806bb0:	18c15568 	cmpgeui	r3,r3,1365
  806bb4:	1800091e 	bne	r3,zero,806bdc <_malloc_r+0x7cc>
  806bb8:	1006d4ba 	srli	r3,r2,18
  806bbc:	19401f44 	addi	r5,r3,125
  806bc0:	280a90fa 	slli	r5,r5,3
  806bc4:	19001f04 	addi	r4,r3,124
  806bc8:	003f3306 	br	806898 <_malloc_r+0x488>
  806bcc:	0100fe04 	movi	r4,1016
  806bd0:	01c01fc4 	movi	r7,127
  806bd4:	02001f84 	movi	r8,126
  806bd8:	003e4606 	br	8064f4 <_malloc_r+0xe4>
  806bdc:	0140fe04 	movi	r5,1016
  806be0:	01001f84 	movi	r4,126
  806be4:	003f2c06 	br	806898 <_malloc_r+0x488>
  806be8:	98800117 	ldw	r2,4(r19)
  806bec:	003f9506 	br	806a44 <_malloc_r+0x634>

00806bf0 <memchr>:
  806bf0:	208000cc 	andi	r2,r4,3
  806bf4:	280f883a 	mov	r7,r5
  806bf8:	10000e26 	beq	r2,zero,806c34 <memchr+0x44>
  806bfc:	30bfffc4 	addi	r2,r6,-1
  806c00:	30001726 	beq	r6,zero,806c60 <memchr+0x70>
  806c04:	29803fcc 	andi	r6,r5,255
  806c08:	00000606 	br	806c24 <memchr+0x34>
  806c0c:	21000044 	addi	r4,r4,1
  806c10:	20c000cc 	andi	r3,r4,3
  806c14:	18000826 	beq	r3,zero,806c38 <memchr+0x48>
  806c18:	10bfffc4 	addi	r2,r2,-1
  806c1c:	10ffffe0 	cmpeqi	r3,r2,-1
  806c20:	18000f1e 	bne	r3,zero,806c60 <memchr+0x70>
  806c24:	20c00003 	ldbu	r3,0(r4)
  806c28:	19bff81e 	bne	r3,r6,806c0c <memchr+0x1c>
  806c2c:	2005883a 	mov	r2,r4
  806c30:	f800283a 	ret
  806c34:	3005883a 	mov	r2,r6
  806c38:	10c00128 	cmpgeui	r3,r2,4
  806c3c:	18000a1e 	bne	r3,zero,806c68 <memchr+0x78>
  806c40:	10001e26 	beq	r2,zero,806cbc <memchr+0xcc>
  806c44:	2087883a 	add	r3,r4,r2
  806c48:	39803fcc 	andi	r6,r7,255
  806c4c:	2005883a 	mov	r2,r4
  806c50:	11000003 	ldbu	r4,0(r2)
  806c54:	21bff626 	beq	r4,r6,806c30 <memchr+0x40>
  806c58:	10800044 	addi	r2,r2,1
  806c5c:	18bffc1e 	bne	r3,r2,806c50 <memchr+0x60>
  806c60:	0005883a 	mov	r2,zero
  806c64:	f800283a 	ret
  806c68:	29403fcc 	andi	r5,r5,255
  806c6c:	280c923a 	slli	r6,r5,8
  806c70:	027fbff4 	movhi	r9,65279
  806c74:	02202074 	movhi	r8,32897
  806c78:	314ab03a 	or	r5,r6,r5
  806c7c:	280c943a 	slli	r6,r5,16
  806c80:	4a7fbfc4 	addi	r9,r9,-257
  806c84:	42202004 	addi	r8,r8,-32640
  806c88:	314cb03a 	or	r6,r6,r5
  806c8c:	20c00017 	ldw	r3,0(r4)
  806c90:	30c6f03a 	xor	r3,r6,r3
  806c94:	1a4b883a 	add	r5,r3,r9
  806c98:	00c6303a 	nor	r3,zero,r3
  806c9c:	28c6703a 	and	r3,r5,r3
  806ca0:	1a06703a 	and	r3,r3,r8
  806ca4:	183fe71e 	bne	r3,zero,806c44 <memchr+0x54>
  806ca8:	10bfff04 	addi	r2,r2,-4
  806cac:	10c00128 	cmpgeui	r3,r2,4
  806cb0:	21000104 	addi	r4,r4,4
  806cb4:	183ff51e 	bne	r3,zero,806c8c <memchr+0x9c>
  806cb8:	003fe106 	br	806c40 <memchr+0x50>
  806cbc:	f800283a 	ret

00806cc0 <memcpy>:
  806cc0:	30c00430 	cmpltui	r3,r6,16
  806cc4:	2005883a 	mov	r2,r4
  806cc8:	18002d1e 	bne	r3,zero,806d80 <memcpy+0xc0>
  806ccc:	2906b03a 	or	r3,r5,r4
  806cd0:	18c000cc 	andi	r3,r3,3
  806cd4:	1800351e 	bne	r3,zero,806dac <memcpy+0xec>
  806cd8:	32fffc04 	addi	r11,r6,-16
  806cdc:	5816d13a 	srli	r11,r11,4
  806ce0:	280f883a 	mov	r7,r5
  806ce4:	2007883a 	mov	r3,r4
  806ce8:	5ac00044 	addi	r11,r11,1
  806cec:	5816913a 	slli	r11,r11,4
  806cf0:	22d5883a 	add	r10,r4,r11
  806cf4:	39000117 	ldw	r4,4(r7)
  806cf8:	3a400017 	ldw	r9,0(r7)
  806cfc:	3a000217 	ldw	r8,8(r7)
  806d00:	19000115 	stw	r4,4(r3)
  806d04:	39000317 	ldw	r4,12(r7)
  806d08:	1a400015 	stw	r9,0(r3)
  806d0c:	1a000215 	stw	r8,8(r3)
  806d10:	19000315 	stw	r4,12(r3)
  806d14:	18c00404 	addi	r3,r3,16
  806d18:	39c00404 	addi	r7,r7,16
  806d1c:	50fff51e 	bne	r10,r3,806cf4 <memcpy+0x34>
  806d20:	3100030c 	andi	r4,r6,12
  806d24:	2acb883a 	add	r5,r5,r11
  806d28:	320003cc 	andi	r8,r6,15
  806d2c:	20002226 	beq	r4,zero,806db8 <memcpy+0xf8>
  806d30:	280f883a 	mov	r7,r5
  806d34:	1813883a 	mov	r9,r3
  806d38:	39c00104 	addi	r7,r7,4
  806d3c:	3abfff17 	ldw	r10,-4(r7)
  806d40:	41c9c83a 	sub	r4,r8,r7
  806d44:	2909883a 	add	r4,r5,r4
  806d48:	4a800015 	stw	r10,0(r9)
  806d4c:	21000128 	cmpgeui	r4,r4,4
  806d50:	4a400104 	addi	r9,r9,4
  806d54:	203ff81e 	bne	r4,zero,806d38 <memcpy+0x78>
  806d58:	413fff04 	addi	r4,r8,-4
  806d5c:	2008d0ba 	srli	r4,r4,2
  806d60:	318000cc 	andi	r6,r6,3
  806d64:	31ffffc4 	addi	r7,r6,-1
  806d68:	21000044 	addi	r4,r4,1
  806d6c:	200890ba 	slli	r4,r4,2
  806d70:	1907883a 	add	r3,r3,r4
  806d74:	290b883a 	add	r5,r5,r4
  806d78:	3000041e 	bne	r6,zero,806d8c <memcpy+0xcc>
  806d7c:	f800283a 	ret
  806d80:	2007883a 	mov	r3,r4
  806d84:	31ffffc4 	addi	r7,r6,-1
  806d88:	303ffc26 	beq	r6,zero,806d7c <memcpy+0xbc>
  806d8c:	39c00044 	addi	r7,r7,1
  806d90:	19cf883a 	add	r7,r3,r7
  806d94:	29800003 	ldbu	r6,0(r5)
  806d98:	18c00044 	addi	r3,r3,1
  806d9c:	29400044 	addi	r5,r5,1
  806da0:	19bfffc5 	stb	r6,-1(r3)
  806da4:	38fffb1e 	bne	r7,r3,806d94 <memcpy+0xd4>
  806da8:	f800283a 	ret
  806dac:	31ffffc4 	addi	r7,r6,-1
  806db0:	2007883a 	mov	r3,r4
  806db4:	003ff506 	br	806d8c <memcpy+0xcc>
  806db8:	400d883a 	mov	r6,r8
  806dbc:	003ff106 	br	806d84 <memcpy+0xc4>

00806dc0 <memmove>:
  806dc0:	2005883a 	mov	r2,r4
  806dc4:	29000a2e 	bgeu	r5,r4,806df0 <memmove+0x30>
  806dc8:	2989883a 	add	r4,r5,r6
  806dcc:	1100082e 	bgeu	r2,r4,806df0 <memmove+0x30>
  806dd0:	1187883a 	add	r3,r2,r6
  806dd4:	30003e26 	beq	r6,zero,806ed0 <memmove+0x110>
  806dd8:	217fffc3 	ldbu	r5,-1(r4)
  806ddc:	18ffffc4 	addi	r3,r3,-1
  806de0:	213fffc4 	addi	r4,r4,-1
  806de4:	19400005 	stb	r5,0(r3)
  806de8:	10fffb1e 	bne	r2,r3,806dd8 <memmove+0x18>
  806dec:	f800283a 	ret
  806df0:	30c00430 	cmpltui	r3,r6,16
  806df4:	18000b26 	beq	r3,zero,806e24 <memmove+0x64>
  806df8:	1007883a 	mov	r3,r2
  806dfc:	31ffffc4 	addi	r7,r6,-1
  806e00:	30003726 	beq	r6,zero,806ee0 <memmove+0x120>
  806e04:	39c00044 	addi	r7,r7,1
  806e08:	29cf883a 	add	r7,r5,r7
  806e0c:	29800003 	ldbu	r6,0(r5)
  806e10:	29400044 	addi	r5,r5,1
  806e14:	18c00044 	addi	r3,r3,1
  806e18:	19bfffc5 	stb	r6,-1(r3)
  806e1c:	29fffb1e 	bne	r5,r7,806e0c <memmove+0x4c>
  806e20:	f800283a 	ret
  806e24:	2886b03a 	or	r3,r5,r2
  806e28:	18c000cc 	andi	r3,r3,3
  806e2c:	1800291e 	bne	r3,zero,806ed4 <memmove+0x114>
  806e30:	327ffc04 	addi	r9,r6,-16
  806e34:	4812d13a 	srli	r9,r9,4
  806e38:	280f883a 	mov	r7,r5
  806e3c:	1007883a 	mov	r3,r2
  806e40:	4a400044 	addi	r9,r9,1
  806e44:	4812913a 	slli	r9,r9,4
  806e48:	1251883a 	add	r8,r2,r9
  806e4c:	39000017 	ldw	r4,0(r7)
  806e50:	39c00404 	addi	r7,r7,16
  806e54:	18c00404 	addi	r3,r3,16
  806e58:	193ffc15 	stw	r4,-16(r3)
  806e5c:	393ffd17 	ldw	r4,-12(r7)
  806e60:	193ffd15 	stw	r4,-12(r3)
  806e64:	393ffe17 	ldw	r4,-8(r7)
  806e68:	193ffe15 	stw	r4,-8(r3)
  806e6c:	393fff17 	ldw	r4,-4(r7)
  806e70:	193fff15 	stw	r4,-4(r3)
  806e74:	40fff51e 	bne	r8,r3,806e4c <memmove+0x8c>
  806e78:	3100030c 	andi	r4,r6,12
  806e7c:	2a4b883a 	add	r5,r5,r9
  806e80:	320003cc 	andi	r8,r6,15
  806e84:	20001726 	beq	r4,zero,806ee4 <memmove+0x124>
  806e88:	2813883a 	mov	r9,r5
  806e8c:	180f883a 	mov	r7,r3
  806e90:	4a800017 	ldw	r10,0(r9)
  806e94:	39c00104 	addi	r7,r7,4
  806e98:	41c9c83a 	sub	r4,r8,r7
  806e9c:	1909883a 	add	r4,r3,r4
  806ea0:	21000128 	cmpgeui	r4,r4,4
  806ea4:	3abfff15 	stw	r10,-4(r7)
  806ea8:	4a400104 	addi	r9,r9,4
  806eac:	203ff81e 	bne	r4,zero,806e90 <memmove+0xd0>
  806eb0:	413fff04 	addi	r4,r8,-4
  806eb4:	2008d0ba 	srli	r4,r4,2
  806eb8:	318000cc 	andi	r6,r6,3
  806ebc:	21000044 	addi	r4,r4,1
  806ec0:	200890ba 	slli	r4,r4,2
  806ec4:	1907883a 	add	r3,r3,r4
  806ec8:	290b883a 	add	r5,r5,r4
  806ecc:	003fcb06 	br	806dfc <memmove+0x3c>
  806ed0:	f800283a 	ret
  806ed4:	31ffffc4 	addi	r7,r6,-1
  806ed8:	1007883a 	mov	r3,r2
  806edc:	003fc906 	br	806e04 <memmove+0x44>
  806ee0:	f800283a 	ret
  806ee4:	400d883a 	mov	r6,r8
  806ee8:	003fc406 	br	806dfc <memmove+0x3c>

00806eec <memset>:
  806eec:	20c000cc 	andi	r3,r4,3
  806ef0:	2005883a 	mov	r2,r4
  806ef4:	18003626 	beq	r3,zero,806fd0 <memset+0xe4>
  806ef8:	31ffffc4 	addi	r7,r6,-1
  806efc:	30003326 	beq	r6,zero,806fcc <memset+0xe0>
  806f00:	2811883a 	mov	r8,r5
  806f04:	2007883a 	mov	r3,r4
  806f08:	00000306 	br	806f18 <memset+0x2c>
  806f0c:	39ffffc4 	addi	r7,r7,-1
  806f10:	39bfffe0 	cmpeqi	r6,r7,-1
  806f14:	30002d1e 	bne	r6,zero,806fcc <memset+0xe0>
  806f18:	18c00044 	addi	r3,r3,1
  806f1c:	198000cc 	andi	r6,r3,3
  806f20:	1a3fffc5 	stb	r8,-1(r3)
  806f24:	303ff91e 	bne	r6,zero,806f0c <memset+0x20>
  806f28:	39000130 	cmpltui	r4,r7,4
  806f2c:	2000221e 	bne	r4,zero,806fb8 <memset+0xcc>
  806f30:	29003fcc 	andi	r4,r5,255
  806f34:	200c923a 	slli	r6,r4,8
  806f38:	3a000430 	cmpltui	r8,r7,16
  806f3c:	3108b03a 	or	r4,r6,r4
  806f40:	200c943a 	slli	r6,r4,16
  806f44:	310cb03a 	or	r6,r6,r4
  806f48:	40000e1e 	bne	r8,zero,806f84 <memset+0x98>
  806f4c:	393ffc04 	addi	r4,r7,-16
  806f50:	2008d13a 	srli	r4,r4,4
  806f54:	21000044 	addi	r4,r4,1
  806f58:	2008913a 	slli	r4,r4,4
  806f5c:	1909883a 	add	r4,r3,r4
  806f60:	19800015 	stw	r6,0(r3)
  806f64:	19800115 	stw	r6,4(r3)
  806f68:	19800215 	stw	r6,8(r3)
  806f6c:	19800315 	stw	r6,12(r3)
  806f70:	18c00404 	addi	r3,r3,16
  806f74:	20fffa1e 	bne	r4,r3,806f60 <memset+0x74>
  806f78:	3900030c 	andi	r4,r7,12
  806f7c:	39c003cc 	andi	r7,r7,15
  806f80:	20000d26 	beq	r4,zero,806fb8 <memset+0xcc>
  806f84:	1811883a 	mov	r8,r3
  806f88:	42000104 	addi	r8,r8,4
  806f8c:	3a09c83a 	sub	r4,r7,r8
  806f90:	1909883a 	add	r4,r3,r4
  806f94:	21000128 	cmpgeui	r4,r4,4
  806f98:	41bfff15 	stw	r6,-4(r8)
  806f9c:	203ffa1e 	bne	r4,zero,806f88 <memset+0x9c>
  806fa0:	393fff04 	addi	r4,r7,-4
  806fa4:	2008d0ba 	srli	r4,r4,2
  806fa8:	39c000cc 	andi	r7,r7,3
  806fac:	21000044 	addi	r4,r4,1
  806fb0:	200890ba 	slli	r4,r4,2
  806fb4:	1907883a 	add	r3,r3,r4
  806fb8:	38000426 	beq	r7,zero,806fcc <memset+0xe0>
  806fbc:	19cf883a 	add	r7,r3,r7
  806fc0:	18c00044 	addi	r3,r3,1
  806fc4:	197fffc5 	stb	r5,-1(r3)
  806fc8:	38fffd1e 	bne	r7,r3,806fc0 <memset+0xd4>
  806fcc:	f800283a 	ret
  806fd0:	2007883a 	mov	r3,r4
  806fd4:	300f883a 	mov	r7,r6
  806fd8:	003fd306 	br	806f28 <memset+0x3c>

00806fdc <_Balloc>:
  806fdc:	20801317 	ldw	r2,76(r4)
  806fe0:	defffc04 	addi	sp,sp,-16
  806fe4:	dc400115 	stw	r17,4(sp)
  806fe8:	dc000015 	stw	r16,0(sp)
  806fec:	dfc00315 	stw	ra,12(sp)
  806ff0:	dc800215 	stw	r18,8(sp)
  806ff4:	2021883a 	mov	r16,r4
  806ff8:	2823883a 	mov	r17,r5
  806ffc:	10000e26 	beq	r2,zero,807038 <_Balloc+0x5c>
  807000:	880690ba 	slli	r3,r17,2
  807004:	10c7883a 	add	r3,r2,r3
  807008:	18800017 	ldw	r2,0(r3)
  80700c:	10001126 	beq	r2,zero,807054 <_Balloc+0x78>
  807010:	11000017 	ldw	r4,0(r2)
  807014:	19000015 	stw	r4,0(r3)
  807018:	10000415 	stw	zero,16(r2)
  80701c:	10000315 	stw	zero,12(r2)
  807020:	dfc00317 	ldw	ra,12(sp)
  807024:	dc800217 	ldw	r18,8(sp)
  807028:	dc400117 	ldw	r17,4(sp)
  80702c:	dc000017 	ldw	r16,0(sp)
  807030:	dec00404 	addi	sp,sp,16
  807034:	f800283a 	ret
  807038:	01800844 	movi	r6,33
  80703c:	01400104 	movi	r5,4
  807040:	0809f280 	call	809f28 <_calloc_r>
  807044:	80801315 	stw	r2,76(r16)
  807048:	103fed1e 	bne	r2,zero,807000 <_Balloc+0x24>
  80704c:	0005883a 	mov	r2,zero
  807050:	003ff306 	br	807020 <_Balloc+0x44>
  807054:	04800044 	movi	r18,1
  807058:	9464983a 	sll	r18,r18,r17
  80705c:	01400044 	movi	r5,1
  807060:	8009883a 	mov	r4,r16
  807064:	91800144 	addi	r6,r18,5
  807068:	300c90ba 	slli	r6,r6,2
  80706c:	0809f280 	call	809f28 <_calloc_r>
  807070:	103ff626 	beq	r2,zero,80704c <_Balloc+0x70>
  807074:	14400115 	stw	r17,4(r2)
  807078:	14800215 	stw	r18,8(r2)
  80707c:	003fe606 	br	807018 <_Balloc+0x3c>

00807080 <_Bfree>:
  807080:	28000726 	beq	r5,zero,8070a0 <_Bfree+0x20>
  807084:	28c00117 	ldw	r3,4(r5)
  807088:	20801317 	ldw	r2,76(r4)
  80708c:	180690ba 	slli	r3,r3,2
  807090:	10c5883a 	add	r2,r2,r3
  807094:	10c00017 	ldw	r3,0(r2)
  807098:	28c00015 	stw	r3,0(r5)
  80709c:	11400015 	stw	r5,0(r2)
  8070a0:	f800283a 	ret

008070a4 <__multadd>:
  8070a4:	defff704 	addi	sp,sp,-36
  8070a8:	dc800215 	stw	r18,8(sp)
  8070ac:	2c800417 	ldw	r18,16(r5)
  8070b0:	ddc00715 	stw	r23,28(sp)
  8070b4:	dd800615 	stw	r22,24(sp)
  8070b8:	dd400515 	stw	r21,20(sp)
  8070bc:	dd000415 	stw	r20,16(sp)
  8070c0:	dcc00315 	stw	r19,12(sp)
  8070c4:	dc400115 	stw	r17,4(sp)
  8070c8:	dfc00815 	stw	ra,32(sp)
  8070cc:	dc000015 	stw	r16,0(sp)
  8070d0:	2827883a 	mov	r19,r5
  8070d4:	2029883a 	mov	r20,r4
  8070d8:	302b883a 	mov	r21,r6
  8070dc:	3823883a 	mov	r17,r7
  8070e0:	2d800504 	addi	r22,r5,20
  8070e4:	002f883a 	mov	r23,zero
  8070e8:	b4000017 	ldw	r16,0(r22)
  8070ec:	a80b883a 	mov	r5,r21
  8070f0:	b5800104 	addi	r22,r22,4
  8070f4:	813fffcc 	andi	r4,r16,65535
  8070f8:	08012200 	call	801220 <__mulsi3>
  8070fc:	8008d43a 	srli	r4,r16,16
  807100:	a80b883a 	mov	r5,r21
  807104:	1461883a 	add	r16,r2,r17
  807108:	08012200 	call	801220 <__mulsi3>
  80710c:	800ed43a 	srli	r7,r16,16
  807110:	843fffcc 	andi	r16,r16,65535
  807114:	bdc00044 	addi	r23,r23,1
  807118:	11c5883a 	add	r2,r2,r7
  80711c:	1006943a 	slli	r3,r2,16
  807120:	1022d43a 	srli	r17,r2,16
  807124:	1c21883a 	add	r16,r3,r16
  807128:	b43fff15 	stw	r16,-4(r22)
  80712c:	bcbfee16 	blt	r23,r18,8070e8 <__multadd+0x44>
  807130:	88000826 	beq	r17,zero,807154 <__multadd+0xb0>
  807134:	98800217 	ldw	r2,8(r19)
  807138:	9080120e 	bge	r18,r2,807184 <__multadd+0xe0>
  80713c:	90800144 	addi	r2,r18,5
  807140:	100490ba 	slli	r2,r2,2
  807144:	94800044 	addi	r18,r18,1
  807148:	9885883a 	add	r2,r19,r2
  80714c:	14400015 	stw	r17,0(r2)
  807150:	9c800415 	stw	r18,16(r19)
  807154:	9805883a 	mov	r2,r19
  807158:	dfc00817 	ldw	ra,32(sp)
  80715c:	ddc00717 	ldw	r23,28(sp)
  807160:	dd800617 	ldw	r22,24(sp)
  807164:	dd400517 	ldw	r21,20(sp)
  807168:	dd000417 	ldw	r20,16(sp)
  80716c:	dcc00317 	ldw	r19,12(sp)
  807170:	dc800217 	ldw	r18,8(sp)
  807174:	dc400117 	ldw	r17,4(sp)
  807178:	dc000017 	ldw	r16,0(sp)
  80717c:	dec00904 	addi	sp,sp,36
  807180:	f800283a 	ret
  807184:	99400117 	ldw	r5,4(r19)
  807188:	a009883a 	mov	r4,r20
  80718c:	29400044 	addi	r5,r5,1
  807190:	0806fdc0 	call	806fdc <_Balloc>
  807194:	1021883a 	mov	r16,r2
  807198:	10001226 	beq	r2,zero,8071e4 <__multadd+0x140>
  80719c:	99800417 	ldw	r6,16(r19)
  8071a0:	99400304 	addi	r5,r19,12
  8071a4:	11000304 	addi	r4,r2,12
  8071a8:	31800084 	addi	r6,r6,2
  8071ac:	300c90ba 	slli	r6,r6,2
  8071b0:	0806cc00 	call	806cc0 <memcpy>
  8071b4:	98000926 	beq	r19,zero,8071dc <__multadd+0x138>
  8071b8:	98c00117 	ldw	r3,4(r19)
  8071bc:	a0801317 	ldw	r2,76(r20)
  8071c0:	180690ba 	slli	r3,r3,2
  8071c4:	10c5883a 	add	r2,r2,r3
  8071c8:	10c00017 	ldw	r3,0(r2)
  8071cc:	98c00015 	stw	r3,0(r19)
  8071d0:	14c00015 	stw	r19,0(r2)
  8071d4:	8027883a 	mov	r19,r16
  8071d8:	003fd806 	br	80713c <__multadd+0x98>
  8071dc:	8027883a 	mov	r19,r16
  8071e0:	003fd606 	br	80713c <__multadd+0x98>
  8071e4:	01c02074 	movhi	r7,129
  8071e8:	01002074 	movhi	r4,129
  8071ec:	39c3d604 	addi	r7,r7,3928
  8071f0:	000d883a 	mov	r6,zero
  8071f4:	01402d44 	movi	r5,181
  8071f8:	2103eb04 	addi	r4,r4,4012
  8071fc:	0809eb00 	call	809eb0 <__assert_func>

00807200 <__s2b>:
  807200:	defff904 	addi	sp,sp,-28
  807204:	dc800215 	stw	r18,8(sp)
  807208:	dc000015 	stw	r16,0(sp)
  80720c:	2025883a 	mov	r18,r4
  807210:	2821883a 	mov	r16,r5
  807214:	39000204 	addi	r4,r7,8
  807218:	01400244 	movi	r5,9
  80721c:	dcc00315 	stw	r19,12(sp)
  807220:	dc400115 	stw	r17,4(sp)
  807224:	dfc00615 	stw	ra,24(sp)
  807228:	3823883a 	mov	r17,r7
  80722c:	dd400515 	stw	r21,20(sp)
  807230:	dd000415 	stw	r20,16(sp)
  807234:	3027883a 	mov	r19,r6
  807238:	080bb400 	call	80bb40 <__divsi3>
  80723c:	88c00290 	cmplti	r3,r17,10
  807240:	1800341e 	bne	r3,zero,807314 <__s2b+0x114>
  807244:	00c00044 	movi	r3,1
  807248:	000b883a 	mov	r5,zero
  80724c:	18c7883a 	add	r3,r3,r3
  807250:	29400044 	addi	r5,r5,1
  807254:	18bffd16 	blt	r3,r2,80724c <__s2b+0x4c>
  807258:	9009883a 	mov	r4,r18
  80725c:	0806fdc0 	call	806fdc <_Balloc>
  807260:	100b883a 	mov	r5,r2
  807264:	10002d26 	beq	r2,zero,80731c <__s2b+0x11c>
  807268:	d8800717 	ldw	r2,28(sp)
  80726c:	28800515 	stw	r2,20(r5)
  807270:	00800044 	movi	r2,1
  807274:	28800415 	stw	r2,16(r5)
  807278:	98800290 	cmplti	r2,r19,10
  80727c:	1000221e 	bne	r2,zero,807308 <__s2b+0x108>
  807280:	85400244 	addi	r21,r16,9
  807284:	a829883a 	mov	r20,r21
  807288:	84e1883a 	add	r16,r16,r19
  80728c:	a1c00007 	ldb	r7,0(r20)
  807290:	01800284 	movi	r6,10
  807294:	9009883a 	mov	r4,r18
  807298:	39fff404 	addi	r7,r7,-48
  80729c:	08070a40 	call	8070a4 <__multadd>
  8072a0:	a5000044 	addi	r20,r20,1
  8072a4:	100b883a 	mov	r5,r2
  8072a8:	a43ff81e 	bne	r20,r16,80728c <__s2b+0x8c>
  8072ac:	9c3ffe04 	addi	r16,r19,-8
  8072b0:	ac21883a 	add	r16,r21,r16
  8072b4:	9c400a0e 	bge	r19,r17,8072e0 <__s2b+0xe0>
  8072b8:	8ce3c83a 	sub	r17,r17,r19
  8072bc:	8463883a 	add	r17,r16,r17
  8072c0:	81c00007 	ldb	r7,0(r16)
  8072c4:	01800284 	movi	r6,10
  8072c8:	9009883a 	mov	r4,r18
  8072cc:	39fff404 	addi	r7,r7,-48
  8072d0:	08070a40 	call	8070a4 <__multadd>
  8072d4:	84000044 	addi	r16,r16,1
  8072d8:	100b883a 	mov	r5,r2
  8072dc:	8c3ff81e 	bne	r17,r16,8072c0 <__s2b+0xc0>
  8072e0:	2805883a 	mov	r2,r5
  8072e4:	dfc00617 	ldw	ra,24(sp)
  8072e8:	dd400517 	ldw	r21,20(sp)
  8072ec:	dd000417 	ldw	r20,16(sp)
  8072f0:	dcc00317 	ldw	r19,12(sp)
  8072f4:	dc800217 	ldw	r18,8(sp)
  8072f8:	dc400117 	ldw	r17,4(sp)
  8072fc:	dc000017 	ldw	r16,0(sp)
  807300:	dec00704 	addi	sp,sp,28
  807304:	f800283a 	ret
  807308:	84000284 	addi	r16,r16,10
  80730c:	04c00244 	movi	r19,9
  807310:	003fe806 	br	8072b4 <__s2b+0xb4>
  807314:	000b883a 	mov	r5,zero
  807318:	003fcf06 	br	807258 <__s2b+0x58>
  80731c:	01c02074 	movhi	r7,129
  807320:	01002074 	movhi	r4,129
  807324:	39c3d604 	addi	r7,r7,3928
  807328:	000d883a 	mov	r6,zero
  80732c:	01403384 	movi	r5,206
  807330:	2103eb04 	addi	r4,r4,4012
  807334:	0809eb00 	call	809eb0 <__assert_func>

00807338 <__hi0bits>:
  807338:	20bfffec 	andhi	r2,r4,65535
  80733c:	1000131e 	bne	r2,zero,80738c <__hi0bits+0x54>
  807340:	2008943a 	slli	r4,r4,16
  807344:	00800404 	movi	r2,16
  807348:	20ffc02c 	andhi	r3,r4,65280
  80734c:	1800021e 	bne	r3,zero,807358 <__hi0bits+0x20>
  807350:	2008923a 	slli	r4,r4,8
  807354:	10800204 	addi	r2,r2,8
  807358:	20fc002c 	andhi	r3,r4,61440
  80735c:	1800021e 	bne	r3,zero,807368 <__hi0bits+0x30>
  807360:	2008913a 	slli	r4,r4,4
  807364:	10800104 	addi	r2,r2,4
  807368:	20f0002c 	andhi	r3,r4,49152
  80736c:	1800021e 	bne	r3,zero,807378 <__hi0bits+0x40>
  807370:	200890ba 	slli	r4,r4,2
  807374:	10800084 	addi	r2,r2,2
  807378:	20000316 	blt	r4,zero,807388 <__hi0bits+0x50>
  80737c:	2110002c 	andhi	r4,r4,16384
  807380:	10800044 	addi	r2,r2,1
  807384:	20000326 	beq	r4,zero,807394 <__hi0bits+0x5c>
  807388:	f800283a 	ret
  80738c:	0005883a 	mov	r2,zero
  807390:	003fed06 	br	807348 <__hi0bits+0x10>
  807394:	00800804 	movi	r2,32
  807398:	f800283a 	ret

0080739c <__lo0bits>:
  80739c:	20c00017 	ldw	r3,0(r4)
  8073a0:	188001cc 	andi	r2,r3,7
  8073a4:	10000826 	beq	r2,zero,8073c8 <__lo0bits+0x2c>
  8073a8:	1880004c 	andi	r2,r3,1
  8073ac:	10001f1e 	bne	r2,zero,80742c <__lo0bits+0x90>
  8073b0:	1880008c 	andi	r2,r3,2
  8073b4:	10002126 	beq	r2,zero,80743c <__lo0bits+0xa0>
  8073b8:	1806d07a 	srli	r3,r3,1
  8073bc:	00800044 	movi	r2,1
  8073c0:	20c00015 	stw	r3,0(r4)
  8073c4:	f800283a 	ret
  8073c8:	18bfffcc 	andi	r2,r3,65535
  8073cc:	10001426 	beq	r2,zero,807420 <__lo0bits+0x84>
  8073d0:	0005883a 	mov	r2,zero
  8073d4:	19403fcc 	andi	r5,r3,255
  8073d8:	2800021e 	bne	r5,zero,8073e4 <__lo0bits+0x48>
  8073dc:	1806d23a 	srli	r3,r3,8
  8073e0:	10800204 	addi	r2,r2,8
  8073e4:	194003cc 	andi	r5,r3,15
  8073e8:	2800021e 	bne	r5,zero,8073f4 <__lo0bits+0x58>
  8073ec:	1806d13a 	srli	r3,r3,4
  8073f0:	10800104 	addi	r2,r2,4
  8073f4:	194000cc 	andi	r5,r3,3
  8073f8:	2800021e 	bne	r5,zero,807404 <__lo0bits+0x68>
  8073fc:	1806d0ba 	srli	r3,r3,2
  807400:	10800084 	addi	r2,r2,2
  807404:	1940004c 	andi	r5,r3,1
  807408:	2800031e 	bne	r5,zero,807418 <__lo0bits+0x7c>
  80740c:	1806d07a 	srli	r3,r3,1
  807410:	10800044 	addi	r2,r2,1
  807414:	18000726 	beq	r3,zero,807434 <__lo0bits+0x98>
  807418:	20c00015 	stw	r3,0(r4)
  80741c:	f800283a 	ret
  807420:	1806d43a 	srli	r3,r3,16
  807424:	00800404 	movi	r2,16
  807428:	003fea06 	br	8073d4 <__lo0bits+0x38>
  80742c:	0005883a 	mov	r2,zero
  807430:	f800283a 	ret
  807434:	00800804 	movi	r2,32
  807438:	f800283a 	ret
  80743c:	1806d0ba 	srli	r3,r3,2
  807440:	00800084 	movi	r2,2
  807444:	20c00015 	stw	r3,0(r4)
  807448:	f800283a 	ret

0080744c <__i2b>:
  80744c:	20c01317 	ldw	r3,76(r4)
  807450:	defffd04 	addi	sp,sp,-12
  807454:	dc400115 	stw	r17,4(sp)
  807458:	dc000015 	stw	r16,0(sp)
  80745c:	dfc00215 	stw	ra,8(sp)
  807460:	2021883a 	mov	r16,r4
  807464:	2823883a 	mov	r17,r5
  807468:	18000d26 	beq	r3,zero,8074a0 <__i2b+0x54>
  80746c:	18800117 	ldw	r2,4(r3)
  807470:	10001826 	beq	r2,zero,8074d4 <__i2b+0x88>
  807474:	11000017 	ldw	r4,0(r2)
  807478:	19000115 	stw	r4,4(r3)
  80747c:	00c00044 	movi	r3,1
  807480:	10000315 	stw	zero,12(r2)
  807484:	14400515 	stw	r17,20(r2)
  807488:	10c00415 	stw	r3,16(r2)
  80748c:	dfc00217 	ldw	ra,8(sp)
  807490:	dc400117 	ldw	r17,4(sp)
  807494:	dc000017 	ldw	r16,0(sp)
  807498:	dec00304 	addi	sp,sp,12
  80749c:	f800283a 	ret
  8074a0:	01800844 	movi	r6,33
  8074a4:	01400104 	movi	r5,4
  8074a8:	0809f280 	call	809f28 <_calloc_r>
  8074ac:	80801315 	stw	r2,76(r16)
  8074b0:	1007883a 	mov	r3,r2
  8074b4:	103fed1e 	bne	r2,zero,80746c <__i2b+0x20>
  8074b8:	01c02074 	movhi	r7,129
  8074bc:	01002074 	movhi	r4,129
  8074c0:	39c3d604 	addi	r7,r7,3928
  8074c4:	000d883a 	mov	r6,zero
  8074c8:	01405004 	movi	r5,320
  8074cc:	2103eb04 	addi	r4,r4,4012
  8074d0:	0809eb00 	call	809eb0 <__assert_func>
  8074d4:	01800704 	movi	r6,28
  8074d8:	01400044 	movi	r5,1
  8074dc:	8009883a 	mov	r4,r16
  8074e0:	0809f280 	call	809f28 <_calloc_r>
  8074e4:	103ff426 	beq	r2,zero,8074b8 <__i2b+0x6c>
  8074e8:	00c00044 	movi	r3,1
  8074ec:	10c00115 	stw	r3,4(r2)
  8074f0:	00c00084 	movi	r3,2
  8074f4:	10c00215 	stw	r3,8(r2)
  8074f8:	003fe006 	br	80747c <__i2b+0x30>

008074fc <__multiply>:
  8074fc:	defff004 	addi	sp,sp,-64
  807500:	dd800c15 	stw	r22,48(sp)
  807504:	dc400715 	stw	r17,28(sp)
  807508:	2d800417 	ldw	r22,16(r5)
  80750c:	34400417 	ldw	r17,16(r6)
  807510:	dc800815 	stw	r18,32(sp)
  807514:	dc000615 	stw	r16,24(sp)
  807518:	dfc00f15 	stw	ra,60(sp)
  80751c:	df000e15 	stw	fp,56(sp)
  807520:	ddc00d15 	stw	r23,52(sp)
  807524:	dd400b15 	stw	r21,44(sp)
  807528:	dd000a15 	stw	r20,40(sp)
  80752c:	dcc00915 	stw	r19,36(sp)
  807530:	2825883a 	mov	r18,r5
  807534:	3021883a 	mov	r16,r6
  807538:	b4400516 	blt	r22,r17,807550 <__multiply+0x54>
  80753c:	8807883a 	mov	r3,r17
  807540:	2821883a 	mov	r16,r5
  807544:	b023883a 	mov	r17,r22
  807548:	3025883a 	mov	r18,r6
  80754c:	182d883a 	mov	r22,r3
  807550:	80800217 	ldw	r2,8(r16)
  807554:	8d87883a 	add	r3,r17,r22
  807558:	d8c00015 	stw	r3,0(sp)
  80755c:	81400117 	ldw	r5,4(r16)
  807560:	10c0010e 	bge	r2,r3,807568 <__multiply+0x6c>
  807564:	29400044 	addi	r5,r5,1
  807568:	0806fdc0 	call	806fdc <_Balloc>
  80756c:	d8800515 	stw	r2,20(sp)
  807570:	10008c26 	beq	r2,zero,8077a4 <__multiply+0x2a8>
  807574:	d8800017 	ldw	r2,0(sp)
  807578:	102690ba 	slli	r19,r2,2
  80757c:	d8800517 	ldw	r2,20(sp)
  807580:	15000504 	addi	r20,r2,20
  807584:	a4c5883a 	add	r2,r20,r19
  807588:	d8800115 	stw	r2,4(sp)
  80758c:	a0800a2e 	bgeu	r20,r2,8075b8 <__multiply+0xbc>
  807590:	d8800117 	ldw	r2,4(sp)
  807594:	d8c00517 	ldw	r3,20(sp)
  807598:	000b883a 	mov	r5,zero
  80759c:	a009883a 	mov	r4,r20
  8075a0:	10cdc83a 	sub	r6,r2,r3
  8075a4:	31bffac4 	addi	r6,r6,-21
  8075a8:	300cd0ba 	srli	r6,r6,2
  8075ac:	31800044 	addi	r6,r6,1
  8075b0:	300c90ba 	slli	r6,r6,2
  8075b4:	0806eec0 	call	806eec <memset>
  8075b8:	b02c90ba 	slli	r22,r22,2
  8075bc:	882290ba 	slli	r17,r17,2
  8075c0:	94800504 	addi	r18,r18,20
  8075c4:	80800504 	addi	r2,r16,20
  8075c8:	9587883a 	add	r3,r18,r22
  8075cc:	d8800315 	stw	r2,12(sp)
  8075d0:	d8c00215 	stw	r3,8(sp)
  8075d4:	1463883a 	add	r17,r2,r17
  8075d8:	90c0542e 	bgeu	r18,r3,80772c <__multiply+0x230>
  8075dc:	80800544 	addi	r2,r16,21
  8075e0:	88806d36 	bltu	r17,r2,807798 <__multiply+0x29c>
  8075e4:	8c05c83a 	sub	r2,r17,r16
  8075e8:	10bffac4 	addi	r2,r2,-21
  8075ec:	1004d0ba 	srli	r2,r2,2
  8075f0:	10800044 	addi	r2,r2,1
  8075f4:	100490ba 	slli	r2,r2,2
  8075f8:	d8800415 	stw	r2,16(sp)
  8075fc:	00000606 	br	807618 <__multiply+0x11c>
  807600:	102ad43a 	srli	r21,r2,16
  807604:	a800271e 	bne	r21,zero,8076a4 <__multiply+0x1a8>
  807608:	d8800217 	ldw	r2,8(sp)
  80760c:	94800104 	addi	r18,r18,4
  807610:	a5000104 	addi	r20,r20,4
  807614:	9080452e 	bgeu	r18,r2,80772c <__multiply+0x230>
  807618:	90800017 	ldw	r2,0(r18)
  80761c:	15ffffcc 	andi	r23,r2,65535
  807620:	b83ff726 	beq	r23,zero,807600 <__multiply+0x104>
  807624:	dd400317 	ldw	r21,12(sp)
  807628:	a02d883a 	mov	r22,r20
  80762c:	0027883a 	mov	r19,zero
  807630:	af000017 	ldw	fp,0(r21)
  807634:	b4000017 	ldw	r16,0(r22)
  807638:	b80b883a 	mov	r5,r23
  80763c:	e13fffcc 	andi	r4,fp,65535
  807640:	08012200 	call	801220 <__mulsi3>
  807644:	e008d43a 	srli	r4,fp,16
  807648:	823fffcc 	andi	r8,r16,65535
  80764c:	1205883a 	add	r2,r2,r8
  807650:	b80b883a 	mov	r5,r23
  807654:	14e7883a 	add	r19,r2,r19
  807658:	8020d43a 	srli	r16,r16,16
  80765c:	08012200 	call	801220 <__mulsi3>
  807660:	9808d43a 	srli	r4,r19,16
  807664:	1405883a 	add	r2,r2,r16
  807668:	98ffffcc 	andi	r3,r19,65535
  80766c:	1105883a 	add	r2,r2,r4
  807670:	1008943a 	slli	r4,r2,16
  807674:	b5800104 	addi	r22,r22,4
  807678:	ad400104 	addi	r21,r21,4
  80767c:	20c6b03a 	or	r3,r4,r3
  807680:	b0ffff15 	stw	r3,-4(r22)
  807684:	1026d43a 	srli	r19,r2,16
  807688:	ac7fe936 	bltu	r21,r17,807630 <__multiply+0x134>
  80768c:	d8800417 	ldw	r2,16(sp)
  807690:	a085883a 	add	r2,r20,r2
  807694:	14c00015 	stw	r19,0(r2)
  807698:	90800017 	ldw	r2,0(r18)
  80769c:	102ad43a 	srli	r21,r2,16
  8076a0:	a83fd926 	beq	r21,zero,807608 <__multiply+0x10c>
  8076a4:	a5c00017 	ldw	r23,0(r20)
  8076a8:	dd800317 	ldw	r22,12(sp)
  8076ac:	a027883a 	mov	r19,r20
  8076b0:	b821883a 	mov	r16,r23
  8076b4:	0039883a 	mov	fp,zero
  8076b8:	b100000b 	ldhu	r4,0(r22)
  8076bc:	a80b883a 	mov	r5,r21
  8076c0:	9cc00104 	addi	r19,r19,4
  8076c4:	08012200 	call	801220 <__mulsi3>
  8076c8:	800cd43a 	srli	r6,r16,16
  8076cc:	b8ffffcc 	andi	r3,r23,65535
  8076d0:	b5800104 	addi	r22,r22,4
  8076d4:	118d883a 	add	r6,r2,r6
  8076d8:	3739883a 	add	fp,r6,fp
  8076dc:	e004943a 	slli	r2,fp,16
  8076e0:	9c000017 	ldw	r16,0(r19)
  8076e4:	a80b883a 	mov	r5,r21
  8076e8:	10c6b03a 	or	r3,r2,r3
  8076ec:	98ffff15 	stw	r3,-4(r19)
  8076f0:	b13fff8b 	ldhu	r4,-2(r22)
  8076f4:	08012200 	call	801220 <__mulsi3>
  8076f8:	e00cd43a 	srli	r6,fp,16
  8076fc:	80ffffcc 	andi	r3,r16,65535
  807700:	10c7883a 	add	r3,r2,r3
  807704:	19af883a 	add	r23,r3,r6
  807708:	b838d43a 	srli	fp,r23,16
  80770c:	b47fea36 	bltu	r22,r17,8076b8 <__multiply+0x1bc>
  807710:	d8800417 	ldw	r2,16(sp)
  807714:	94800104 	addi	r18,r18,4
  807718:	a085883a 	add	r2,r20,r2
  80771c:	15c00015 	stw	r23,0(r2)
  807720:	d8800217 	ldw	r2,8(sp)
  807724:	a5000104 	addi	r20,r20,4
  807728:	90bfbb36 	bltu	r18,r2,807618 <__multiply+0x11c>
  80772c:	d8800017 	ldw	r2,0(sp)
  807730:	00800516 	blt	zero,r2,807748 <__multiply+0x24c>
  807734:	00000906 	br	80775c <__multiply+0x260>
  807738:	d8800017 	ldw	r2,0(sp)
  80773c:	10bfffc4 	addi	r2,r2,-1
  807740:	d8800015 	stw	r2,0(sp)
  807744:	10000526 	beq	r2,zero,80775c <__multiply+0x260>
  807748:	d8c00117 	ldw	r3,4(sp)
  80774c:	18bfff17 	ldw	r2,-4(r3)
  807750:	18ffff04 	addi	r3,r3,-4
  807754:	d8c00115 	stw	r3,4(sp)
  807758:	103ff726 	beq	r2,zero,807738 <__multiply+0x23c>
  80775c:	d8800517 	ldw	r2,20(sp)
  807760:	d8c00017 	ldw	r3,0(sp)
  807764:	10c00415 	stw	r3,16(r2)
  807768:	dfc00f17 	ldw	ra,60(sp)
  80776c:	df000e17 	ldw	fp,56(sp)
  807770:	ddc00d17 	ldw	r23,52(sp)
  807774:	dd800c17 	ldw	r22,48(sp)
  807778:	dd400b17 	ldw	r21,44(sp)
  80777c:	dd000a17 	ldw	r20,40(sp)
  807780:	dcc00917 	ldw	r19,36(sp)
  807784:	dc800817 	ldw	r18,32(sp)
  807788:	dc400717 	ldw	r17,28(sp)
  80778c:	dc000617 	ldw	r16,24(sp)
  807790:	dec01004 	addi	sp,sp,64
  807794:	f800283a 	ret
  807798:	00800104 	movi	r2,4
  80779c:	d8800415 	stw	r2,16(sp)
  8077a0:	003f9d06 	br	807618 <__multiply+0x11c>
  8077a4:	01c02074 	movhi	r7,129
  8077a8:	01002074 	movhi	r4,129
  8077ac:	39c3d604 	addi	r7,r7,3928
  8077b0:	000d883a 	mov	r6,zero
  8077b4:	01405744 	movi	r5,349
  8077b8:	2103eb04 	addi	r4,r4,4012
  8077bc:	0809eb00 	call	809eb0 <__assert_func>

008077c0 <__pow5mult>:
  8077c0:	defffb04 	addi	sp,sp,-20
  8077c4:	dcc00315 	stw	r19,12(sp)
  8077c8:	dc000015 	stw	r16,0(sp)
  8077cc:	dfc00415 	stw	ra,16(sp)
  8077d0:	dc800215 	stw	r18,8(sp)
  8077d4:	dc400115 	stw	r17,4(sp)
  8077d8:	308000cc 	andi	r2,r6,3
  8077dc:	3021883a 	mov	r16,r6
  8077e0:	2027883a 	mov	r19,r4
  8077e4:	10002d1e 	bne	r2,zero,80789c <__pow5mult+0xdc>
  8077e8:	2825883a 	mov	r18,r5
  8077ec:	8021d0ba 	srai	r16,r16,2
  8077f0:	80001926 	beq	r16,zero,807858 <__pow5mult+0x98>
  8077f4:	9c401217 	ldw	r17,72(r19)
  8077f8:	8800061e 	bne	r17,zero,807814 <__pow5mult+0x54>
  8077fc:	00002f06 	br	8078bc <__pow5mult+0xfc>
  807800:	8021d07a 	srai	r16,r16,1
  807804:	80001426 	beq	r16,zero,807858 <__pow5mult+0x98>
  807808:	88800017 	ldw	r2,0(r17)
  80780c:	10001a26 	beq	r2,zero,807878 <__pow5mult+0xb8>
  807810:	1023883a 	mov	r17,r2
  807814:	8080004c 	andi	r2,r16,1
  807818:	103ff926 	beq	r2,zero,807800 <__pow5mult+0x40>
  80781c:	880d883a 	mov	r6,r17
  807820:	900b883a 	mov	r5,r18
  807824:	9809883a 	mov	r4,r19
  807828:	08074fc0 	call	8074fc <__multiply>
  80782c:	90001926 	beq	r18,zero,807894 <__pow5mult+0xd4>
  807830:	91000117 	ldw	r4,4(r18)
  807834:	98c01317 	ldw	r3,76(r19)
  807838:	8021d07a 	srai	r16,r16,1
  80783c:	200890ba 	slli	r4,r4,2
  807840:	1907883a 	add	r3,r3,r4
  807844:	19000017 	ldw	r4,0(r3)
  807848:	91000015 	stw	r4,0(r18)
  80784c:	1c800015 	stw	r18,0(r3)
  807850:	1025883a 	mov	r18,r2
  807854:	803fec1e 	bne	r16,zero,807808 <__pow5mult+0x48>
  807858:	9005883a 	mov	r2,r18
  80785c:	dfc00417 	ldw	ra,16(sp)
  807860:	dcc00317 	ldw	r19,12(sp)
  807864:	dc800217 	ldw	r18,8(sp)
  807868:	dc400117 	ldw	r17,4(sp)
  80786c:	dc000017 	ldw	r16,0(sp)
  807870:	dec00504 	addi	sp,sp,20
  807874:	f800283a 	ret
  807878:	880d883a 	mov	r6,r17
  80787c:	880b883a 	mov	r5,r17
  807880:	9809883a 	mov	r4,r19
  807884:	08074fc0 	call	8074fc <__multiply>
  807888:	88800015 	stw	r2,0(r17)
  80788c:	10000015 	stw	zero,0(r2)
  807890:	003fdf06 	br	807810 <__pow5mult+0x50>
  807894:	1025883a 	mov	r18,r2
  807898:	003fd906 	br	807800 <__pow5mult+0x40>
  80789c:	100490ba 	slli	r2,r2,2
  8078a0:	00c02074 	movhi	r3,129
  8078a4:	000f883a 	mov	r7,zero
  8078a8:	10c7883a 	add	r3,r2,r3
  8078ac:	1983fa17 	ldw	r6,4072(r3)
  8078b0:	08070a40 	call	8070a4 <__multadd>
  8078b4:	1025883a 	mov	r18,r2
  8078b8:	003fcc06 	br	8077ec <__pow5mult+0x2c>
  8078bc:	01400044 	movi	r5,1
  8078c0:	9809883a 	mov	r4,r19
  8078c4:	0806fdc0 	call	806fdc <_Balloc>
  8078c8:	1023883a 	mov	r17,r2
  8078cc:	10000726 	beq	r2,zero,8078ec <__pow5mult+0x12c>
  8078d0:	00809c44 	movi	r2,625
  8078d4:	88800515 	stw	r2,20(r17)
  8078d8:	00800044 	movi	r2,1
  8078dc:	88800415 	stw	r2,16(r17)
  8078e0:	9c401215 	stw	r17,72(r19)
  8078e4:	88000015 	stw	zero,0(r17)
  8078e8:	003fca06 	br	807814 <__pow5mult+0x54>
  8078ec:	01c02074 	movhi	r7,129
  8078f0:	01002074 	movhi	r4,129
  8078f4:	39c3d604 	addi	r7,r7,3928
  8078f8:	000d883a 	mov	r6,zero
  8078fc:	01405004 	movi	r5,320
  807900:	2103eb04 	addi	r4,r4,4012
  807904:	0809eb00 	call	809eb0 <__assert_func>

00807908 <__lshift>:
  807908:	defff804 	addi	sp,sp,-32
  80790c:	dd800615 	stw	r22,24(sp)
  807910:	dc000015 	stw	r16,0(sp)
  807914:	302dd17a 	srai	r22,r6,5
  807918:	2c000417 	ldw	r16,16(r5)
  80791c:	28800217 	ldw	r2,8(r5)
  807920:	dd000415 	stw	r20,16(sp)
  807924:	b421883a 	add	r16,r22,r16
  807928:	dcc00315 	stw	r19,12(sp)
  80792c:	dc800215 	stw	r18,8(sp)
  807930:	dc400115 	stw	r17,4(sp)
  807934:	dfc00715 	stw	ra,28(sp)
  807938:	dd400515 	stw	r21,20(sp)
  80793c:	85000044 	addi	r20,r16,1
  807940:	2827883a 	mov	r19,r5
  807944:	3025883a 	mov	r18,r6
  807948:	29400117 	ldw	r5,4(r5)
  80794c:	2023883a 	mov	r17,r4
  807950:	1500030e 	bge	r2,r20,807960 <__lshift+0x58>
  807954:	1085883a 	add	r2,r2,r2
  807958:	29400044 	addi	r5,r5,1
  80795c:	153ffd16 	blt	r2,r20,807954 <__lshift+0x4c>
  807960:	8809883a 	mov	r4,r17
  807964:	0806fdc0 	call	806fdc <_Balloc>
  807968:	102b883a 	mov	r21,r2
  80796c:	10004126 	beq	r2,zero,807a74 <__lshift+0x16c>
  807970:	11000504 	addi	r4,r2,20
  807974:	0580050e 	bge	zero,r22,80798c <__lshift+0x84>
  807978:	b02c90ba 	slli	r22,r22,2
  80797c:	000b883a 	mov	r5,zero
  807980:	b00d883a 	mov	r6,r22
  807984:	0806eec0 	call	806eec <memset>
  807988:	1589883a 	add	r4,r2,r22
  80798c:	9a000417 	ldw	r8,16(r19)
  807990:	98c00504 	addi	r3,r19,20
  807994:	948007cc 	andi	r18,r18,31
  807998:	401090ba 	slli	r8,r8,2
  80799c:	1a11883a 	add	r8,r3,r8
  8079a0:	90002c26 	beq	r18,zero,807a54 <__lshift+0x14c>
  8079a4:	01400804 	movi	r5,32
  8079a8:	2c8bc83a 	sub	r5,r5,r18
  8079ac:	2005883a 	mov	r2,r4
  8079b0:	000f883a 	mov	r7,zero
  8079b4:	19800017 	ldw	r6,0(r3)
  8079b8:	10800104 	addi	r2,r2,4
  8079bc:	18c00104 	addi	r3,r3,4
  8079c0:	348c983a 	sll	r6,r6,r18
  8079c4:	31ccb03a 	or	r6,r6,r7
  8079c8:	11bfff15 	stw	r6,-4(r2)
  8079cc:	19bfff17 	ldw	r6,-4(r3)
  8079d0:	314ed83a 	srl	r7,r6,r5
  8079d4:	1a3ff736 	bltu	r3,r8,8079b4 <__lshift+0xac>
  8079d8:	98800544 	addi	r2,r19,21
  8079dc:	40802336 	bltu	r8,r2,807a6c <__lshift+0x164>
  8079e0:	44c7c83a 	sub	r3,r8,r19
  8079e4:	18fffac4 	addi	r3,r3,-21
  8079e8:	1806d0ba 	srli	r3,r3,2
  8079ec:	18c00044 	addi	r3,r3,1
  8079f0:	180690ba 	slli	r3,r3,2
  8079f4:	20c9883a 	add	r4,r4,r3
  8079f8:	21c00015 	stw	r7,0(r4)
  8079fc:	38000126 	beq	r7,zero,807a04 <__lshift+0xfc>
  807a00:	a021883a 	mov	r16,r20
  807a04:	ac000415 	stw	r16,16(r21)
  807a08:	98000726 	beq	r19,zero,807a28 <__lshift+0x120>
  807a0c:	98c00117 	ldw	r3,4(r19)
  807a10:	88801317 	ldw	r2,76(r17)
  807a14:	180690ba 	slli	r3,r3,2
  807a18:	10c5883a 	add	r2,r2,r3
  807a1c:	10c00017 	ldw	r3,0(r2)
  807a20:	98c00015 	stw	r3,0(r19)
  807a24:	14c00015 	stw	r19,0(r2)
  807a28:	a805883a 	mov	r2,r21
  807a2c:	dfc00717 	ldw	ra,28(sp)
  807a30:	dd800617 	ldw	r22,24(sp)
  807a34:	dd400517 	ldw	r21,20(sp)
  807a38:	dd000417 	ldw	r20,16(sp)
  807a3c:	dcc00317 	ldw	r19,12(sp)
  807a40:	dc800217 	ldw	r18,8(sp)
  807a44:	dc400117 	ldw	r17,4(sp)
  807a48:	dc000017 	ldw	r16,0(sp)
  807a4c:	dec00804 	addi	sp,sp,32
  807a50:	f800283a 	ret
  807a54:	18800017 	ldw	r2,0(r3)
  807a58:	18c00104 	addi	r3,r3,4
  807a5c:	21000104 	addi	r4,r4,4
  807a60:	20bfff15 	stw	r2,-4(r4)
  807a64:	1a3ffb36 	bltu	r3,r8,807a54 <__lshift+0x14c>
  807a68:	003fe606 	br	807a04 <__lshift+0xfc>
  807a6c:	00c00104 	movi	r3,4
  807a70:	003fe006 	br	8079f4 <__lshift+0xec>
  807a74:	01c02074 	movhi	r7,129
  807a78:	01002074 	movhi	r4,129
  807a7c:	39c3d604 	addi	r7,r7,3928
  807a80:	000d883a 	mov	r6,zero
  807a84:	01407644 	movi	r5,473
  807a88:	2103eb04 	addi	r4,r4,4012
  807a8c:	0809eb00 	call	809eb0 <__assert_func>

00807a90 <__mcmp>:
  807a90:	21800417 	ldw	r6,16(r4)
  807a94:	28c00417 	ldw	r3,16(r5)
  807a98:	30c5c83a 	sub	r2,r6,r3
  807a9c:	30c00e1e 	bne	r6,r3,807ad8 <__mcmp+0x48>
  807aa0:	180690ba 	slli	r3,r3,2
  807aa4:	21c00504 	addi	r7,r4,20
  807aa8:	29400504 	addi	r5,r5,20
  807aac:	38c9883a 	add	r4,r7,r3
  807ab0:	28c7883a 	add	r3,r5,r3
  807ab4:	00000106 	br	807abc <__mcmp+0x2c>
  807ab8:	3900082e 	bgeu	r7,r4,807adc <__mcmp+0x4c>
  807abc:	21bfff17 	ldw	r6,-4(r4)
  807ac0:	197fff17 	ldw	r5,-4(r3)
  807ac4:	213fff04 	addi	r4,r4,-4
  807ac8:	18ffff04 	addi	r3,r3,-4
  807acc:	317ffa26 	beq	r6,r5,807ab8 <__mcmp+0x28>
  807ad0:	3140032e 	bgeu	r6,r5,807ae0 <__mcmp+0x50>
  807ad4:	00bfffc4 	movi	r2,-1
  807ad8:	f800283a 	ret
  807adc:	f800283a 	ret
  807ae0:	00800044 	movi	r2,1
  807ae4:	f800283a 	ret

00807ae8 <__mdiff>:
  807ae8:	28800417 	ldw	r2,16(r5)
  807aec:	30c00417 	ldw	r3,16(r6)
  807af0:	defffc04 	addi	sp,sp,-16
  807af4:	dc800215 	stw	r18,8(sp)
  807af8:	dc400115 	stw	r17,4(sp)
  807afc:	dc000015 	stw	r16,0(sp)
  807b00:	dfc00315 	stw	ra,12(sp)
  807b04:	2823883a 	mov	r17,r5
  807b08:	3021883a 	mov	r16,r6
  807b0c:	10e5c83a 	sub	r18,r2,r3
  807b10:	10c0641e 	bne	r2,r3,807ca4 <__mdiff+0x1bc>
  807b14:	180c90ba 	slli	r6,r3,2
  807b18:	29400504 	addi	r5,r5,20
  807b1c:	80c00504 	addi	r3,r16,20
  807b20:	2985883a 	add	r2,r5,r6
  807b24:	1987883a 	add	r3,r3,r6
  807b28:	00000106 	br	807b30 <__mdiff+0x48>
  807b2c:	2880642e 	bgeu	r5,r2,807cc0 <__mdiff+0x1d8>
  807b30:	11bfff17 	ldw	r6,-4(r2)
  807b34:	19ffff17 	ldw	r7,-4(r3)
  807b38:	10bfff04 	addi	r2,r2,-4
  807b3c:	18ffff04 	addi	r3,r3,-4
  807b40:	31fffa26 	beq	r6,r7,807b2c <__mdiff+0x44>
  807b44:	31c05236 	bltu	r6,r7,807c90 <__mdiff+0x1a8>
  807b48:	89400117 	ldw	r5,4(r17)
  807b4c:	0806fdc0 	call	806fdc <_Balloc>
  807b50:	10006226 	beq	r2,zero,807cdc <__mdiff+0x1f4>
  807b54:	8a400417 	ldw	r9,16(r17)
  807b58:	83000417 	ldw	r12,16(r16)
  807b5c:	8ac00504 	addi	r11,r17,20
  807b60:	481090ba 	slli	r8,r9,2
  807b64:	601890ba 	slli	r12,r12,2
  807b68:	81800504 	addi	r6,r16,20
  807b6c:	13400504 	addi	r13,r2,20
  807b70:	14800315 	stw	r18,12(r2)
  807b74:	5a11883a 	add	r8,r11,r8
  807b78:	3319883a 	add	r12,r6,r12
  807b7c:	681d883a 	mov	r14,r13
  807b80:	5815883a 	mov	r10,r11
  807b84:	0007883a 	mov	r3,zero
  807b88:	51000017 	ldw	r4,0(r10)
  807b8c:	31c00017 	ldw	r7,0(r6)
  807b90:	73800104 	addi	r14,r14,4
  807b94:	217fffcc 	andi	r5,r4,65535
  807b98:	28cb883a 	add	r5,r5,r3
  807b9c:	38ffffcc 	andi	r3,r7,65535
  807ba0:	28cbc83a 	sub	r5,r5,r3
  807ba4:	380ed43a 	srli	r7,r7,16
  807ba8:	2006d43a 	srli	r3,r4,16
  807bac:	2809d43a 	srai	r4,r5,16
  807bb0:	297fffcc 	andi	r5,r5,65535
  807bb4:	19c7c83a 	sub	r3,r3,r7
  807bb8:	1907883a 	add	r3,r3,r4
  807bbc:	1808943a 	slli	r4,r3,16
  807bc0:	31800104 	addi	r6,r6,4
  807bc4:	1807d43a 	srai	r3,r3,16
  807bc8:	214ab03a 	or	r5,r4,r5
  807bcc:	717fff15 	stw	r5,-4(r14)
  807bd0:	52800104 	addi	r10,r10,4
  807bd4:	333fec36 	bltu	r6,r12,807b88 <__mdiff+0xa0>
  807bd8:	640fc83a 	sub	r7,r12,r16
  807bdc:	39fffac4 	addi	r7,r7,-21
  807be0:	84000544 	addi	r16,r16,21
  807be4:	380ed0ba 	srli	r7,r7,2
  807be8:	64003336 	bltu	r12,r16,807cb8 <__mdiff+0x1d0>
  807bec:	380890ba 	slli	r4,r7,2
  807bf0:	6909883a 	add	r4,r13,r4
  807bf4:	64002e36 	bltu	r12,r16,807cb0 <__mdiff+0x1c8>
  807bf8:	39800044 	addi	r6,r7,1
  807bfc:	300c90ba 	slli	r6,r6,2
  807c00:	5997883a 	add	r11,r11,r6
  807c04:	699b883a 	add	r13,r13,r6
  807c08:	5a00152e 	bgeu	r11,r8,807c60 <__mdiff+0x178>
  807c0c:	680f883a 	mov	r7,r13
  807c10:	580d883a 	mov	r6,r11
  807c14:	31000017 	ldw	r4,0(r6)
  807c18:	39c00104 	addi	r7,r7,4
  807c1c:	31800104 	addi	r6,r6,4
  807c20:	217fffcc 	andi	r5,r4,65535
  807c24:	28cb883a 	add	r5,r5,r3
  807c28:	2815d43a 	srai	r10,r5,16
  807c2c:	2006d43a 	srli	r3,r4,16
  807c30:	297fffcc 	andi	r5,r5,65535
  807c34:	1a87883a 	add	r3,r3,r10
  807c38:	1814943a 	slli	r10,r3,16
  807c3c:	1807d43a 	srai	r3,r3,16
  807c40:	514ab03a 	or	r5,r10,r5
  807c44:	397fff15 	stw	r5,-4(r7)
  807c48:	323ff236 	bltu	r6,r8,807c14 <__mdiff+0x12c>
  807c4c:	413fffc4 	addi	r4,r8,-1
  807c50:	22c9c83a 	sub	r4,r4,r11
  807c54:	2008d0ba 	srli	r4,r4,2
  807c58:	200890ba 	slli	r4,r4,2
  807c5c:	6909883a 	add	r4,r13,r4
  807c60:	2800041e 	bne	r5,zero,807c74 <__mdiff+0x18c>
  807c64:	20ffff17 	ldw	r3,-4(r4)
  807c68:	4a7fffc4 	addi	r9,r9,-1
  807c6c:	213fff04 	addi	r4,r4,-4
  807c70:	183ffc26 	beq	r3,zero,807c64 <__mdiff+0x17c>
  807c74:	12400415 	stw	r9,16(r2)
  807c78:	dfc00317 	ldw	ra,12(sp)
  807c7c:	dc800217 	ldw	r18,8(sp)
  807c80:	dc400117 	ldw	r17,4(sp)
  807c84:	dc000017 	ldw	r16,0(sp)
  807c88:	dec00404 	addi	sp,sp,16
  807c8c:	f800283a 	ret
  807c90:	8805883a 	mov	r2,r17
  807c94:	04800044 	movi	r18,1
  807c98:	8023883a 	mov	r17,r16
  807c9c:	1021883a 	mov	r16,r2
  807ca0:	003fa906 	br	807b48 <__mdiff+0x60>
  807ca4:	903ffa16 	blt	r18,zero,807c90 <__mdiff+0x1a8>
  807ca8:	0025883a 	mov	r18,zero
  807cac:	003fa606 	br	807b48 <__mdiff+0x60>
  807cb0:	01800104 	movi	r6,4
  807cb4:	003fd206 	br	807c00 <__mdiff+0x118>
  807cb8:	0009883a 	mov	r4,zero
  807cbc:	003fcc06 	br	807bf0 <__mdiff+0x108>
  807cc0:	000b883a 	mov	r5,zero
  807cc4:	0806fdc0 	call	806fdc <_Balloc>
  807cc8:	10000b26 	beq	r2,zero,807cf8 <__mdiff+0x210>
  807ccc:	00c00044 	movi	r3,1
  807cd0:	10c00415 	stw	r3,16(r2)
  807cd4:	10000515 	stw	zero,20(r2)
  807cd8:	003fe706 	br	807c78 <__mdiff+0x190>
  807cdc:	01c02074 	movhi	r7,129
  807ce0:	01002074 	movhi	r4,129
  807ce4:	39c3d604 	addi	r7,r7,3928
  807ce8:	000d883a 	mov	r6,zero
  807cec:	01409004 	movi	r5,576
  807cf0:	2103eb04 	addi	r4,r4,4012
  807cf4:	0809eb00 	call	809eb0 <__assert_func>
  807cf8:	01c02074 	movhi	r7,129
  807cfc:	01002074 	movhi	r4,129
  807d00:	39c3d604 	addi	r7,r7,3928
  807d04:	000d883a 	mov	r6,zero
  807d08:	01408c84 	movi	r5,562
  807d0c:	2103eb04 	addi	r4,r4,4012
  807d10:	0809eb00 	call	809eb0 <__assert_func>

00807d14 <__ulp>:
  807d14:	28dffc2c 	andhi	r3,r5,32752
  807d18:	017f3034 	movhi	r5,64704
  807d1c:	1947883a 	add	r3,r3,r5
  807d20:	00c0020e 	bge	zero,r3,807d2c <__ulp+0x18>
  807d24:	0005883a 	mov	r2,zero
  807d28:	f800283a 	ret
  807d2c:	00c7c83a 	sub	r3,zero,r3
  807d30:	1807d53a 	srai	r3,r3,20
  807d34:	18800508 	cmpgei	r2,r3,20
  807d38:	1000041e 	bne	r2,zero,807d4c <__ulp+0x38>
  807d3c:	00800234 	movhi	r2,8
  807d40:	10c7d83a 	sra	r3,r2,r3
  807d44:	0005883a 	mov	r2,zero
  807d48:	f800283a 	ret
  807d4c:	193ffb04 	addi	r4,r3,-20
  807d50:	208007c8 	cmpgei	r2,r4,31
  807d54:	0007883a 	mov	r3,zero
  807d58:	1000031e 	bne	r2,zero,807d68 <__ulp+0x54>
  807d5c:	00a00034 	movhi	r2,32768
  807d60:	1104d83a 	srl	r2,r2,r4
  807d64:	f800283a 	ret
  807d68:	00800044 	movi	r2,1
  807d6c:	f800283a 	ret

00807d70 <__b2d>:
  807d70:	defffa04 	addi	sp,sp,-24
  807d74:	dc400115 	stw	r17,4(sp)
  807d78:	24400417 	ldw	r17,16(r4)
  807d7c:	dc000015 	stw	r16,0(sp)
  807d80:	24000504 	addi	r16,r4,20
  807d84:	882290ba 	slli	r17,r17,2
  807d88:	dc800215 	stw	r18,8(sp)
  807d8c:	dd000415 	stw	r20,16(sp)
  807d90:	8463883a 	add	r17,r16,r17
  807d94:	8cbfff17 	ldw	r18,-4(r17)
  807d98:	dcc00315 	stw	r19,12(sp)
  807d9c:	dfc00515 	stw	ra,20(sp)
  807da0:	9009883a 	mov	r4,r18
  807da4:	2827883a 	mov	r19,r5
  807da8:	08073380 	call	807338 <__hi0bits>
  807dac:	00c00804 	movi	r3,32
  807db0:	1889c83a 	sub	r4,r3,r2
  807db4:	99000015 	stw	r4,0(r19)
  807db8:	110002c8 	cmpgei	r4,r2,11
  807dbc:	8d3fff04 	addi	r20,r17,-4
  807dc0:	20002026 	beq	r4,zero,807e44 <__b2d+0xd4>
  807dc4:	10bffd44 	addi	r2,r2,-11
  807dc8:	85000e2e 	bgeu	r16,r20,807e04 <__b2d+0x94>
  807dcc:	897ffe17 	ldw	r5,-8(r17)
  807dd0:	10001226 	beq	r2,zero,807e1c <__b2d+0xac>
  807dd4:	1889c83a 	sub	r4,r3,r2
  807dd8:	90a4983a 	sll	r18,r18,r2
  807ddc:	2906d83a 	srl	r3,r5,r4
  807de0:	89bffe04 	addi	r6,r17,-8
  807de4:	2884983a 	sll	r2,r5,r2
  807de8:	90e4b03a 	or	r18,r18,r3
  807dec:	90cffc34 	orhi	r3,r18,16368
  807df0:	81800c2e 	bgeu	r16,r6,807e24 <__b2d+0xb4>
  807df4:	897ffd17 	ldw	r5,-12(r17)
  807df8:	2908d83a 	srl	r4,r5,r4
  807dfc:	1104b03a 	or	r2,r2,r4
  807e00:	00000806 	br	807e24 <__b2d+0xb4>
  807e04:	10000426 	beq	r2,zero,807e18 <__b2d+0xa8>
  807e08:	90a4983a 	sll	r18,r18,r2
  807e0c:	0005883a 	mov	r2,zero
  807e10:	90cffc34 	orhi	r3,r18,16368
  807e14:	00000306 	br	807e24 <__b2d+0xb4>
  807e18:	000b883a 	mov	r5,zero
  807e1c:	90cffc34 	orhi	r3,r18,16368
  807e20:	2805883a 	mov	r2,r5
  807e24:	dfc00517 	ldw	ra,20(sp)
  807e28:	dd000417 	ldw	r20,16(sp)
  807e2c:	dcc00317 	ldw	r19,12(sp)
  807e30:	dc800217 	ldw	r18,8(sp)
  807e34:	dc400117 	ldw	r17,4(sp)
  807e38:	dc000017 	ldw	r16,0(sp)
  807e3c:	dec00604 	addi	sp,sp,24
  807e40:	f800283a 	ret
  807e44:	014002c4 	movi	r5,11
  807e48:	2889c83a 	sub	r4,r5,r2
  807e4c:	9106d83a 	srl	r3,r18,r4
  807e50:	18cffc34 	orhi	r3,r3,16368
  807e54:	85000536 	bltu	r16,r20,807e6c <__b2d+0xfc>
  807e58:	000b883a 	mov	r5,zero
  807e5c:	10800544 	addi	r2,r2,21
  807e60:	9084983a 	sll	r2,r18,r2
  807e64:	1144b03a 	or	r2,r2,r5
  807e68:	003fee06 	br	807e24 <__b2d+0xb4>
  807e6c:	897ffe17 	ldw	r5,-8(r17)
  807e70:	290ad83a 	srl	r5,r5,r4
  807e74:	003ff906 	br	807e5c <__b2d+0xec>

00807e78 <__d2b>:
  807e78:	defff804 	addi	sp,sp,-32
  807e7c:	dd000615 	stw	r20,24(sp)
  807e80:	2829883a 	mov	r20,r5
  807e84:	01400044 	movi	r5,1
  807e88:	dcc00515 	stw	r19,20(sp)
  807e8c:	dc000215 	stw	r16,8(sp)
  807e90:	dfc00715 	stw	ra,28(sp)
  807e94:	dc800415 	stw	r18,16(sp)
  807e98:	dc400315 	stw	r17,12(sp)
  807e9c:	3021883a 	mov	r16,r6
  807ea0:	3827883a 	mov	r19,r7
  807ea4:	0806fdc0 	call	806fdc <_Balloc>
  807ea8:	10004526 	beq	r2,zero,807fc0 <__d2b+0x148>
  807eac:	8024d53a 	srli	r18,r16,20
  807eb0:	01800434 	movhi	r6,16
  807eb4:	31bfffc4 	addi	r6,r6,-1
  807eb8:	9481ffcc 	andi	r18,r18,2047
  807ebc:	1023883a 	mov	r17,r2
  807ec0:	81a0703a 	and	r16,r16,r6
  807ec4:	90000126 	beq	r18,zero,807ecc <__d2b+0x54>
  807ec8:	84000434 	orhi	r16,r16,16
  807ecc:	dc000115 	stw	r16,4(sp)
  807ed0:	a0002226 	beq	r20,zero,807f5c <__d2b+0xe4>
  807ed4:	d809883a 	mov	r4,sp
  807ed8:	dd000015 	stw	r20,0(sp)
  807edc:	080739c0 	call	80739c <__lo0bits>
  807ee0:	d8c00117 	ldw	r3,4(sp)
  807ee4:	10003326 	beq	r2,zero,807fb4 <__d2b+0x13c>
  807ee8:	01000804 	movi	r4,32
  807eec:	2089c83a 	sub	r4,r4,r2
  807ef0:	1908983a 	sll	r4,r3,r4
  807ef4:	d9400017 	ldw	r5,0(sp)
  807ef8:	1886d83a 	srl	r3,r3,r2
  807efc:	2148b03a 	or	r4,r4,r5
  807f00:	89000515 	stw	r4,20(r17)
  807f04:	d8c00115 	stw	r3,4(sp)
  807f08:	88c00615 	stw	r3,24(r17)
  807f0c:	1800271e 	bne	r3,zero,807fac <__d2b+0x134>
  807f10:	04000044 	movi	r16,1
  807f14:	8c000415 	stw	r16,16(r17)
  807f18:	90001926 	beq	r18,zero,807f80 <__d2b+0x108>
  807f1c:	00c00d44 	movi	r3,53
  807f20:	94bef344 	addi	r18,r18,-1075
  807f24:	90a5883a 	add	r18,r18,r2
  807f28:	1885c83a 	sub	r2,r3,r2
  807f2c:	d8c00817 	ldw	r3,32(sp)
  807f30:	9c800015 	stw	r18,0(r19)
  807f34:	18800015 	stw	r2,0(r3)
  807f38:	8805883a 	mov	r2,r17
  807f3c:	dfc00717 	ldw	ra,28(sp)
  807f40:	dd000617 	ldw	r20,24(sp)
  807f44:	dcc00517 	ldw	r19,20(sp)
  807f48:	dc800417 	ldw	r18,16(sp)
  807f4c:	dc400317 	ldw	r17,12(sp)
  807f50:	dc000217 	ldw	r16,8(sp)
  807f54:	dec00804 	addi	sp,sp,32
  807f58:	f800283a 	ret
  807f5c:	d9000104 	addi	r4,sp,4
  807f60:	080739c0 	call	80739c <__lo0bits>
  807f64:	00c00044 	movi	r3,1
  807f68:	88c00415 	stw	r3,16(r17)
  807f6c:	d8c00117 	ldw	r3,4(sp)
  807f70:	10800804 	addi	r2,r2,32
  807f74:	04000044 	movi	r16,1
  807f78:	88c00515 	stw	r3,20(r17)
  807f7c:	903fe71e 	bne	r18,zero,807f1c <__d2b+0xa4>
  807f80:	800690ba 	slli	r3,r16,2
  807f84:	10bef384 	addi	r2,r2,-1074
  807f88:	98800015 	stw	r2,0(r19)
  807f8c:	88c5883a 	add	r2,r17,r3
  807f90:	11000417 	ldw	r4,16(r2)
  807f94:	8020917a 	slli	r16,r16,5
  807f98:	08073380 	call	807338 <__hi0bits>
  807f9c:	80a1c83a 	sub	r16,r16,r2
  807fa0:	d8800817 	ldw	r2,32(sp)
  807fa4:	14000015 	stw	r16,0(r2)
  807fa8:	003fe306 	br	807f38 <__d2b+0xc0>
  807fac:	04000084 	movi	r16,2
  807fb0:	003fd806 	br	807f14 <__d2b+0x9c>
  807fb4:	d9000017 	ldw	r4,0(sp)
  807fb8:	89000515 	stw	r4,20(r17)
  807fbc:	003fd206 	br	807f08 <__d2b+0x90>
  807fc0:	01c02074 	movhi	r7,129
  807fc4:	01002074 	movhi	r4,129
  807fc8:	39c3d604 	addi	r7,r7,3928
  807fcc:	000d883a 	mov	r6,zero
  807fd0:	0140c284 	movi	r5,778
  807fd4:	2103eb04 	addi	r4,r4,4012
  807fd8:	0809eb00 	call	809eb0 <__assert_func>

00807fdc <__ratio>:
  807fdc:	defff904 	addi	sp,sp,-28
  807fe0:	dc400315 	stw	r17,12(sp)
  807fe4:	2823883a 	mov	r17,r5
  807fe8:	d80b883a 	mov	r5,sp
  807fec:	dfc00615 	stw	ra,24(sp)
  807ff0:	dcc00515 	stw	r19,20(sp)
  807ff4:	dc800415 	stw	r18,16(sp)
  807ff8:	2027883a 	mov	r19,r4
  807ffc:	dc000215 	stw	r16,8(sp)
  808000:	0807d700 	call	807d70 <__b2d>
  808004:	d9400104 	addi	r5,sp,4
  808008:	8809883a 	mov	r4,r17
  80800c:	1025883a 	mov	r18,r2
  808010:	1821883a 	mov	r16,r3
  808014:	0807d700 	call	807d70 <__b2d>
  808018:	89000417 	ldw	r4,16(r17)
  80801c:	9a000417 	ldw	r8,16(r19)
  808020:	d9400117 	ldw	r5,4(sp)
  808024:	100d883a 	mov	r6,r2
  808028:	4111c83a 	sub	r8,r8,r4
  80802c:	d9000017 	ldw	r4,0(sp)
  808030:	4010917a 	slli	r8,r8,5
  808034:	180f883a 	mov	r7,r3
  808038:	2149c83a 	sub	r4,r4,r5
  80803c:	4111883a 	add	r8,r8,r4
  808040:	02000c0e 	bge	zero,r8,808074 <__ratio+0x98>
  808044:	4010953a 	slli	r8,r8,20
  808048:	4421883a 	add	r16,r8,r16
  80804c:	9009883a 	mov	r4,r18
  808050:	800b883a 	mov	r5,r16
  808054:	080c5e40 	call	80c5e4 <__divdf3>
  808058:	dfc00617 	ldw	ra,24(sp)
  80805c:	dcc00517 	ldw	r19,20(sp)
  808060:	dc800417 	ldw	r18,16(sp)
  808064:	dc400317 	ldw	r17,12(sp)
  808068:	dc000217 	ldw	r16,8(sp)
  80806c:	dec00704 	addi	sp,sp,28
  808070:	f800283a 	ret
  808074:	4010953a 	slli	r8,r8,20
  808078:	1a0fc83a 	sub	r7,r3,r8
  80807c:	003ff306 	br	80804c <__ratio+0x70>

00808080 <_mprec_log10>:
  808080:	defffe04 	addi	sp,sp,-8
  808084:	dc000015 	stw	r16,0(sp)
  808088:	dfc00115 	stw	ra,4(sp)
  80808c:	20800608 	cmpgei	r2,r4,24
  808090:	2021883a 	mov	r16,r4
  808094:	10000f26 	beq	r2,zero,8080d4 <_mprec_log10+0x54>
  808098:	0009883a 	mov	r4,zero
  80809c:	014ffc34 	movhi	r5,16368
  8080a0:	000d883a 	mov	r6,zero
  8080a4:	01d00934 	movhi	r7,16420
  8080a8:	080d1640 	call	80d164 <__muldf3>
  8080ac:	843fffc4 	addi	r16,r16,-1
  8080b0:	1009883a 	mov	r4,r2
  8080b4:	180b883a 	mov	r5,r3
  8080b8:	803ff91e 	bne	r16,zero,8080a0 <_mprec_log10+0x20>
  8080bc:	2005883a 	mov	r2,r4
  8080c0:	2807883a 	mov	r3,r5
  8080c4:	dfc00117 	ldw	ra,4(sp)
  8080c8:	dc000017 	ldw	r16,0(sp)
  8080cc:	dec00204 	addi	sp,sp,8
  8080d0:	f800283a 	ret
  8080d4:	202090fa 	slli	r16,r4,3
  8080d8:	00802074 	movhi	r2,129
  8080dc:	10841204 	addi	r2,r2,4168
  8080e0:	1421883a 	add	r16,r2,r16
  8080e4:	81000017 	ldw	r4,0(r16)
  8080e8:	81400117 	ldw	r5,4(r16)
  8080ec:	003ff306 	br	8080bc <_mprec_log10+0x3c>

008080f0 <__copybits>:
  8080f0:	297fffc4 	addi	r5,r5,-1
  8080f4:	280fd17a 	srai	r7,r5,5
  8080f8:	31400417 	ldw	r5,16(r6)
  8080fc:	30800504 	addi	r2,r6,20
  808100:	39c00044 	addi	r7,r7,1
  808104:	280a90ba 	slli	r5,r5,2
  808108:	380e90ba 	slli	r7,r7,2
  80810c:	114b883a 	add	r5,r2,r5
  808110:	21cf883a 	add	r7,r4,r7
  808114:	11400c2e 	bgeu	r2,r5,808148 <__copybits+0x58>
  808118:	2007883a 	mov	r3,r4
  80811c:	12000017 	ldw	r8,0(r2)
  808120:	10800104 	addi	r2,r2,4
  808124:	18c00104 	addi	r3,r3,4
  808128:	1a3fff15 	stw	r8,-4(r3)
  80812c:	117ffb36 	bltu	r2,r5,80811c <__copybits+0x2c>
  808130:	2985c83a 	sub	r2,r5,r6
  808134:	10bffac4 	addi	r2,r2,-21
  808138:	1004d0ba 	srli	r2,r2,2
  80813c:	10800044 	addi	r2,r2,1
  808140:	100490ba 	slli	r2,r2,2
  808144:	2089883a 	add	r4,r4,r2
  808148:	21c0072e 	bgeu	r4,r7,808168 <__copybits+0x78>
  80814c:	39bfffc4 	addi	r6,r7,-1
  808150:	310dc83a 	sub	r6,r6,r4
  808154:	300cd0ba 	srli	r6,r6,2
  808158:	000b883a 	mov	r5,zero
  80815c:	31800044 	addi	r6,r6,1
  808160:	300c90ba 	slli	r6,r6,2
  808164:	0806eec1 	jmpi	806eec <memset>
  808168:	f800283a 	ret

0080816c <__any_on>:
  80816c:	20c00417 	ldw	r3,16(r4)
  808170:	280dd17a 	srai	r6,r5,5
  808174:	21000504 	addi	r4,r4,20
  808178:	1980080e 	bge	r3,r6,80819c <__any_on+0x30>
  80817c:	180490ba 	slli	r2,r3,2
  808180:	2085883a 	add	r2,r4,r2
  808184:	20800f2e 	bgeu	r4,r2,8081c4 <__any_on+0x58>
  808188:	10ffff17 	ldw	r3,-4(r2)
  80818c:	10bfff04 	addi	r2,r2,-4
  808190:	183ffc26 	beq	r3,zero,808184 <__any_on+0x18>
  808194:	00800044 	movi	r2,1
  808198:	f800283a 	ret
  80819c:	300490ba 	slli	r2,r6,2
  8081a0:	2085883a 	add	r2,r4,r2
  8081a4:	30fff70e 	bge	r6,r3,808184 <__any_on+0x18>
  8081a8:	294007cc 	andi	r5,r5,31
  8081ac:	283ff526 	beq	r5,zero,808184 <__any_on+0x18>
  8081b0:	11800017 	ldw	r6,0(r2)
  8081b4:	3146d83a 	srl	r3,r6,r5
  8081b8:	194a983a 	sll	r5,r3,r5
  8081bc:	317ff51e 	bne	r6,r5,808194 <__any_on+0x28>
  8081c0:	003ff006 	br	808184 <__any_on+0x18>
  8081c4:	0005883a 	mov	r2,zero
  8081c8:	f800283a 	ret

008081cc <_realloc_r>:
  8081cc:	defff504 	addi	sp,sp,-44
  8081d0:	dc800315 	stw	r18,12(sp)
  8081d4:	dfc00a15 	stw	ra,40(sp)
  8081d8:	df000915 	stw	fp,36(sp)
  8081dc:	ddc00815 	stw	r23,32(sp)
  8081e0:	dd800715 	stw	r22,28(sp)
  8081e4:	dd400615 	stw	r21,24(sp)
  8081e8:	dd000515 	stw	r20,20(sp)
  8081ec:	dcc00415 	stw	r19,16(sp)
  8081f0:	dc400215 	stw	r17,8(sp)
  8081f4:	dc000115 	stw	r16,4(sp)
  8081f8:	3025883a 	mov	r18,r6
  8081fc:	28008b26 	beq	r5,zero,80842c <_realloc_r+0x260>
  808200:	2821883a 	mov	r16,r5
  808204:	2027883a 	mov	r19,r4
  808208:	944002c4 	addi	r17,r18,11
  80820c:	080eb4c0 	call	80eb4c <__malloc_lock>
  808210:	888005f0 	cmpltui	r2,r17,23
  808214:	1000521e 	bne	r2,zero,808360 <_realloc_r+0x194>
  808218:	017ffe04 	movi	r5,-8
  80821c:	8962703a 	and	r17,r17,r5
  808220:	8807883a 	mov	r3,r17
  808224:	88005116 	blt	r17,zero,80836c <_realloc_r+0x1a0>
  808228:	8c805036 	bltu	r17,r18,80836c <_realloc_r+0x1a0>
  80822c:	80bfff17 	ldw	r2,-4(r16)
  808230:	017fff04 	movi	r5,-4
  808234:	857ffe04 	addi	r21,r16,-8
  808238:	1168703a 	and	r20,r2,r5
  80823c:	ad2d883a 	add	r22,r21,r20
  808240:	a0c0390e 	bge	r20,r3,808328 <_realloc_r+0x15c>
  808244:	07002074 	movhi	fp,129
  808248:	e7061504 	addi	fp,fp,6228
  80824c:	e2000217 	ldw	r8,8(fp)
  808250:	b1000117 	ldw	r4,4(r22)
  808254:	45808e26 	beq	r8,r22,808490 <_realloc_r+0x2c4>
  808258:	01bfff84 	movi	r6,-2
  80825c:	218c703a 	and	r6,r4,r6
  808260:	b18d883a 	add	r6,r22,r6
  808264:	31800117 	ldw	r6,4(r6)
  808268:	3180004c 	andi	r6,r6,1
  80826c:	30004f1e 	bne	r6,zero,8083ac <_realloc_r+0x1e0>
  808270:	2148703a 	and	r4,r4,r5
  808274:	a10b883a 	add	r5,r20,r4
  808278:	28c0bf0e 	bge	r5,r3,808578 <_realloc_r+0x3ac>
  80827c:	1080004c 	andi	r2,r2,1
  808280:	10004c1e 	bne	r2,zero,8083b4 <_realloc_r+0x1e8>
  808284:	81fffe17 	ldw	r7,-8(r16)
  808288:	00bfff04 	movi	r2,-4
  80828c:	a9cfc83a 	sub	r7,r21,r7
  808290:	39400117 	ldw	r5,4(r7)
  808294:	288a703a 	and	r5,r5,r2
  808298:	b0000426 	beq	r22,zero,8082ac <_realloc_r+0xe0>
  80829c:	a16f883a 	add	r23,r20,r5
  8082a0:	b92f883a 	add	r23,r23,r4
  8082a4:	4580bf26 	beq	r8,r22,8085a4 <_realloc_r+0x3d8>
  8082a8:	b8c0930e 	bge	r23,r3,8084f8 <_realloc_r+0x32c>
  8082ac:	38004126 	beq	r7,zero,8083b4 <_realloc_r+0x1e8>
  8082b0:	a16f883a 	add	r23,r20,r5
  8082b4:	b8c03f16 	blt	r23,r3,8083b4 <_realloc_r+0x1e8>
  8082b8:	38800317 	ldw	r2,12(r7)
  8082bc:	38c00217 	ldw	r3,8(r7)
  8082c0:	a1bfff04 	addi	r6,r20,-4
  8082c4:	31400968 	cmpgeui	r5,r6,37
  8082c8:	18800315 	stw	r2,12(r3)
  8082cc:	10c00215 	stw	r3,8(r2)
  8082d0:	39000204 	addi	r4,r7,8
  8082d4:	3ded883a 	add	r22,r7,r23
  8082d8:	2800941e 	bne	r5,zero,80852c <_realloc_r+0x360>
  8082dc:	30800530 	cmpltui	r2,r6,20
  8082e0:	80c00017 	ldw	r3,0(r16)
  8082e4:	1000df1e 	bne	r2,zero,808664 <_realloc_r+0x498>
  8082e8:	38c00215 	stw	r3,8(r7)
  8082ec:	80c00117 	ldw	r3,4(r16)
  8082f0:	30800728 	cmpgeui	r2,r6,28
  8082f4:	38c00315 	stw	r3,12(r7)
  8082f8:	1000dc1e 	bne	r2,zero,80866c <_realloc_r+0x4a0>
  8082fc:	80c00217 	ldw	r3,8(r16)
  808300:	38800404 	addi	r2,r7,16
  808304:	84000204 	addi	r16,r16,8
  808308:	10c00015 	stw	r3,0(r2)
  80830c:	80c00117 	ldw	r3,4(r16)
  808310:	b829883a 	mov	r20,r23
  808314:	382b883a 	mov	r21,r7
  808318:	10c00115 	stw	r3,4(r2)
  80831c:	80c00217 	ldw	r3,8(r16)
  808320:	2021883a 	mov	r16,r4
  808324:	10c00215 	stw	r3,8(r2)
  808328:	a9800117 	ldw	r6,4(r21)
  80832c:	a445c83a 	sub	r2,r20,r17
  808330:	10c00430 	cmpltui	r3,r2,16
  808334:	3180004c 	andi	r6,r6,1
  808338:	18004926 	beq	r3,zero,808460 <_realloc_r+0x294>
  80833c:	a18cb03a 	or	r6,r20,r6
  808340:	a9800115 	stw	r6,4(r21)
  808344:	b0800117 	ldw	r2,4(r22)
  808348:	10800054 	ori	r2,r2,1
  80834c:	b0800115 	stw	r2,4(r22)
  808350:	9809883a 	mov	r4,r19
  808354:	080eb700 	call	80eb70 <__malloc_unlock>
  808358:	8025883a 	mov	r18,r16
  80835c:	00000606 	br	808378 <_realloc_r+0x1ac>
  808360:	04400404 	movi	r17,16
  808364:	00c00404 	movi	r3,16
  808368:	8cbfb02e 	bgeu	r17,r18,80822c <_realloc_r+0x60>
  80836c:	00800304 	movi	r2,12
  808370:	98800015 	stw	r2,0(r19)
  808374:	0025883a 	mov	r18,zero
  808378:	9005883a 	mov	r2,r18
  80837c:	dfc00a17 	ldw	ra,40(sp)
  808380:	df000917 	ldw	fp,36(sp)
  808384:	ddc00817 	ldw	r23,32(sp)
  808388:	dd800717 	ldw	r22,28(sp)
  80838c:	dd400617 	ldw	r21,24(sp)
  808390:	dd000517 	ldw	r20,20(sp)
  808394:	dcc00417 	ldw	r19,16(sp)
  808398:	dc800317 	ldw	r18,12(sp)
  80839c:	dc400217 	ldw	r17,8(sp)
  8083a0:	dc000117 	ldw	r16,4(sp)
  8083a4:	dec00b04 	addi	sp,sp,44
  8083a8:	f800283a 	ret
  8083ac:	1080004c 	andi	r2,r2,1
  8083b0:	10006c26 	beq	r2,zero,808564 <_realloc_r+0x398>
  8083b4:	900b883a 	mov	r5,r18
  8083b8:	9809883a 	mov	r4,r19
  8083bc:	08064100 	call	806410 <_malloc_r>
  8083c0:	1025883a 	mov	r18,r2
  8083c4:	10001626 	beq	r2,zero,808420 <_realloc_r+0x254>
  8083c8:	80bfff17 	ldw	r2,-4(r16)
  8083cc:	013fff84 	movi	r4,-2
  8083d0:	90fffe04 	addi	r3,r18,-8
  8083d4:	1104703a 	and	r2,r2,r4
  8083d8:	a885883a 	add	r2,r21,r2
  8083dc:	10c05b26 	beq	r2,r3,80854c <_realloc_r+0x380>
  8083e0:	a1bfff04 	addi	r6,r20,-4
  8083e4:	30800968 	cmpgeui	r2,r6,37
  8083e8:	10006a1e 	bne	r2,zero,808594 <_realloc_r+0x3c8>
  8083ec:	30800530 	cmpltui	r2,r6,20
  8083f0:	81000017 	ldw	r4,0(r16)
  8083f4:	10003726 	beq	r2,zero,8084d4 <_realloc_r+0x308>
  8083f8:	9005883a 	mov	r2,r18
  8083fc:	8007883a 	mov	r3,r16
  808400:	11000015 	stw	r4,0(r2)
  808404:	19000117 	ldw	r4,4(r3)
  808408:	11000115 	stw	r4,4(r2)
  80840c:	18c00217 	ldw	r3,8(r3)
  808410:	10c00215 	stw	r3,8(r2)
  808414:	800b883a 	mov	r5,r16
  808418:	9809883a 	mov	r4,r19
  80841c:	08058a40 	call	8058a4 <_free_r>
  808420:	9809883a 	mov	r4,r19
  808424:	080eb700 	call	80eb70 <__malloc_unlock>
  808428:	003fd306 	br	808378 <_realloc_r+0x1ac>
  80842c:	300b883a 	mov	r5,r6
  808430:	dfc00a17 	ldw	ra,40(sp)
  808434:	df000917 	ldw	fp,36(sp)
  808438:	ddc00817 	ldw	r23,32(sp)
  80843c:	dd800717 	ldw	r22,28(sp)
  808440:	dd400617 	ldw	r21,24(sp)
  808444:	dd000517 	ldw	r20,20(sp)
  808448:	dcc00417 	ldw	r19,16(sp)
  80844c:	dc800317 	ldw	r18,12(sp)
  808450:	dc400217 	ldw	r17,8(sp)
  808454:	dc000117 	ldw	r16,4(sp)
  808458:	dec00b04 	addi	sp,sp,44
  80845c:	08064101 	jmpi	806410 <_malloc_r>
  808460:	344cb03a 	or	r6,r6,r17
  808464:	a9800115 	stw	r6,4(r21)
  808468:	ac4b883a 	add	r5,r21,r17
  80846c:	10800054 	ori	r2,r2,1
  808470:	28800115 	stw	r2,4(r5)
  808474:	b0800117 	ldw	r2,4(r22)
  808478:	29400204 	addi	r5,r5,8
  80847c:	9809883a 	mov	r4,r19
  808480:	10800054 	ori	r2,r2,1
  808484:	b0800115 	stw	r2,4(r22)
  808488:	08058a40 	call	8058a4 <_free_r>
  80848c:	003fb006 	br	808350 <_realloc_r+0x184>
  808490:	2148703a 	and	r4,r4,r5
  808494:	a10b883a 	add	r5,r20,r4
  808498:	89800404 	addi	r6,r17,16
  80849c:	29bf7716 	blt	r5,r6,80827c <_realloc_r+0xb0>
  8084a0:	ac6b883a 	add	r21,r21,r17
  8084a4:	2c45c83a 	sub	r2,r5,r17
  8084a8:	e5400215 	stw	r21,8(fp)
  8084ac:	10800054 	ori	r2,r2,1
  8084b0:	a8800115 	stw	r2,4(r21)
  8084b4:	80bfff17 	ldw	r2,-4(r16)
  8084b8:	9809883a 	mov	r4,r19
  8084bc:	8025883a 	mov	r18,r16
  8084c0:	1080004c 	andi	r2,r2,1
  8084c4:	1462b03a 	or	r17,r2,r17
  8084c8:	847fff15 	stw	r17,-4(r16)
  8084cc:	080eb700 	call	80eb70 <__malloc_unlock>
  8084d0:	003fa906 	br	808378 <_realloc_r+0x1ac>
  8084d4:	91000015 	stw	r4,0(r18)
  8084d8:	80c00117 	ldw	r3,4(r16)
  8084dc:	30800728 	cmpgeui	r2,r6,28
  8084e0:	90c00115 	stw	r3,4(r18)
  8084e4:	1000551e 	bne	r2,zero,80863c <_realloc_r+0x470>
  8084e8:	81000217 	ldw	r4,8(r16)
  8084ec:	80c00204 	addi	r3,r16,8
  8084f0:	90800204 	addi	r2,r18,8
  8084f4:	003fc206 	br	808400 <_realloc_r+0x234>
  8084f8:	b0800317 	ldw	r2,12(r22)
  8084fc:	b0c00217 	ldw	r3,8(r22)
  808500:	a1bfff04 	addi	r6,r20,-4
  808504:	31400968 	cmpgeui	r5,r6,37
  808508:	18800315 	stw	r2,12(r3)
  80850c:	10c00215 	stw	r3,8(r2)
  808510:	38c00217 	ldw	r3,8(r7)
  808514:	38800317 	ldw	r2,12(r7)
  808518:	39000204 	addi	r4,r7,8
  80851c:	3ded883a 	add	r22,r7,r23
  808520:	18800315 	stw	r2,12(r3)
  808524:	10c00215 	stw	r3,8(r2)
  808528:	283f6c26 	beq	r5,zero,8082dc <_realloc_r+0x110>
  80852c:	800b883a 	mov	r5,r16
  808530:	d9c00015 	stw	r7,0(sp)
  808534:	0806dc00 	call	806dc0 <memmove>
  808538:	d9c00017 	ldw	r7,0(sp)
  80853c:	1021883a 	mov	r16,r2
  808540:	b829883a 	mov	r20,r23
  808544:	382b883a 	mov	r21,r7
  808548:	003f7706 	br	808328 <_realloc_r+0x15c>
  80854c:	90bfff17 	ldw	r2,-4(r18)
  808550:	00ffff04 	movi	r3,-4
  808554:	10c4703a 	and	r2,r2,r3
  808558:	a0a9883a 	add	r20,r20,r2
  80855c:	ad2d883a 	add	r22,r21,r20
  808560:	003f7106 	br	808328 <_realloc_r+0x15c>
  808564:	81fffe17 	ldw	r7,-8(r16)
  808568:	a9cfc83a 	sub	r7,r21,r7
  80856c:	38800117 	ldw	r2,4(r7)
  808570:	114a703a 	and	r5,r2,r5
  808574:	003f4d06 	br	8082ac <_realloc_r+0xe0>
  808578:	b0800317 	ldw	r2,12(r22)
  80857c:	b0c00217 	ldw	r3,8(r22)
  808580:	2829883a 	mov	r20,r5
  808584:	a96d883a 	add	r22,r21,r5
  808588:	18800315 	stw	r2,12(r3)
  80858c:	10c00215 	stw	r3,8(r2)
  808590:	003f6506 	br	808328 <_realloc_r+0x15c>
  808594:	800b883a 	mov	r5,r16
  808598:	9009883a 	mov	r4,r18
  80859c:	0806dc00 	call	806dc0 <memmove>
  8085a0:	003f9c06 	br	808414 <_realloc_r+0x248>
  8085a4:	88800404 	addi	r2,r17,16
  8085a8:	b8bf4016 	blt	r23,r2,8082ac <_realloc_r+0xe0>
  8085ac:	38800317 	ldw	r2,12(r7)
  8085b0:	38c00217 	ldw	r3,8(r7)
  8085b4:	a1bfff04 	addi	r6,r20,-4
  8085b8:	31000968 	cmpgeui	r4,r6,37
  8085bc:	18800315 	stw	r2,12(r3)
  8085c0:	10c00215 	stw	r3,8(r2)
  8085c4:	3c800204 	addi	r18,r7,8
  8085c8:	20003b1e 	bne	r4,zero,8086b8 <_realloc_r+0x4ec>
  8085cc:	30800530 	cmpltui	r2,r6,20
  8085d0:	80c00017 	ldw	r3,0(r16)
  8085d4:	1000361e 	bne	r2,zero,8086b0 <_realloc_r+0x4e4>
  8085d8:	38c00215 	stw	r3,8(r7)
  8085dc:	80c00117 	ldw	r3,4(r16)
  8085e0:	30800728 	cmpgeui	r2,r6,28
  8085e4:	38c00315 	stw	r3,12(r7)
  8085e8:	1000401e 	bne	r2,zero,8086ec <_realloc_r+0x520>
  8085ec:	80c00217 	ldw	r3,8(r16)
  8085f0:	38800404 	addi	r2,r7,16
  8085f4:	84000204 	addi	r16,r16,8
  8085f8:	10c00015 	stw	r3,0(r2)
  8085fc:	80c00117 	ldw	r3,4(r16)
  808600:	10c00115 	stw	r3,4(r2)
  808604:	80c00217 	ldw	r3,8(r16)
  808608:	10c00215 	stw	r3,8(r2)
  80860c:	3c47883a 	add	r3,r7,r17
  808610:	bc45c83a 	sub	r2,r23,r17
  808614:	e0c00215 	stw	r3,8(fp)
  808618:	10800054 	ori	r2,r2,1
  80861c:	18800115 	stw	r2,4(r3)
  808620:	38800117 	ldw	r2,4(r7)
  808624:	9809883a 	mov	r4,r19
  808628:	1080004c 	andi	r2,r2,1
  80862c:	1462b03a 	or	r17,r2,r17
  808630:	3c400115 	stw	r17,4(r7)
  808634:	080eb700 	call	80eb70 <__malloc_unlock>
  808638:	003f4f06 	br	808378 <_realloc_r+0x1ac>
  80863c:	80800217 	ldw	r2,8(r16)
  808640:	31800920 	cmpeqi	r6,r6,36
  808644:	90800215 	stw	r2,8(r18)
  808648:	80800317 	ldw	r2,12(r16)
  80864c:	90800315 	stw	r2,12(r18)
  808650:	81000417 	ldw	r4,16(r16)
  808654:	30000f1e 	bne	r6,zero,808694 <_realloc_r+0x4c8>
  808658:	80c00404 	addi	r3,r16,16
  80865c:	90800404 	addi	r2,r18,16
  808660:	003f6706 	br	808400 <_realloc_r+0x234>
  808664:	2005883a 	mov	r2,r4
  808668:	003f2706 	br	808308 <_realloc_r+0x13c>
  80866c:	80800217 	ldw	r2,8(r16)
  808670:	31800920 	cmpeqi	r6,r6,36
  808674:	38800415 	stw	r2,16(r7)
  808678:	80800317 	ldw	r2,12(r16)
  80867c:	38800515 	stw	r2,20(r7)
  808680:	80c00417 	ldw	r3,16(r16)
  808684:	3000121e 	bne	r6,zero,8086d0 <_realloc_r+0x504>
  808688:	38800604 	addi	r2,r7,24
  80868c:	84000404 	addi	r16,r16,16
  808690:	003f1d06 	br	808308 <_realloc_r+0x13c>
  808694:	91000415 	stw	r4,16(r18)
  808698:	81000517 	ldw	r4,20(r16)
  80869c:	80c00604 	addi	r3,r16,24
  8086a0:	90800604 	addi	r2,r18,24
  8086a4:	91000515 	stw	r4,20(r18)
  8086a8:	81000617 	ldw	r4,24(r16)
  8086ac:	003f5406 	br	808400 <_realloc_r+0x234>
  8086b0:	9005883a 	mov	r2,r18
  8086b4:	003fd006 	br	8085f8 <_realloc_r+0x42c>
  8086b8:	800b883a 	mov	r5,r16
  8086bc:	9009883a 	mov	r4,r18
  8086c0:	d9c00015 	stw	r7,0(sp)
  8086c4:	0806dc00 	call	806dc0 <memmove>
  8086c8:	d9c00017 	ldw	r7,0(sp)
  8086cc:	003fcf06 	br	80860c <_realloc_r+0x440>
  8086d0:	84000604 	addi	r16,r16,24
  8086d4:	38c00615 	stw	r3,24(r7)
  8086d8:	80ffff17 	ldw	r3,-4(r16)
  8086dc:	38800804 	addi	r2,r7,32
  8086e0:	38c00715 	stw	r3,28(r7)
  8086e4:	80c00017 	ldw	r3,0(r16)
  8086e8:	003f0706 	br	808308 <_realloc_r+0x13c>
  8086ec:	80800217 	ldw	r2,8(r16)
  8086f0:	31800920 	cmpeqi	r6,r6,36
  8086f4:	38800415 	stw	r2,16(r7)
  8086f8:	80800317 	ldw	r2,12(r16)
  8086fc:	38800515 	stw	r2,20(r7)
  808700:	80c00417 	ldw	r3,16(r16)
  808704:	3000031e 	bne	r6,zero,808714 <_realloc_r+0x548>
  808708:	38800604 	addi	r2,r7,24
  80870c:	84000404 	addi	r16,r16,16
  808710:	003fb906 	br	8085f8 <_realloc_r+0x42c>
  808714:	84000604 	addi	r16,r16,24
  808718:	38c00615 	stw	r3,24(r7)
  80871c:	80ffff17 	ldw	r3,-4(r16)
  808720:	38800804 	addi	r2,r7,32
  808724:	38c00715 	stw	r3,28(r7)
  808728:	80c00017 	ldw	r3,0(r16)
  80872c:	003fb206 	br	8085f8 <_realloc_r+0x42c>

00808730 <_sbrk_r>:
  808730:	defffe04 	addi	sp,sp,-8
  808734:	dc000015 	stw	r16,0(sp)
  808738:	00802074 	movhi	r2,129
  80873c:	2021883a 	mov	r16,r4
  808740:	2809883a 	mov	r4,r5
  808744:	dfc00115 	stw	ra,4(sp)
  808748:	1012fb15 	stw	zero,19436(r2)
  80874c:	080ed480 	call	80ed48 <sbrk>
  808750:	10ffffd8 	cmpnei	r3,r2,-1
  808754:	18000426 	beq	r3,zero,808768 <_sbrk_r+0x38>
  808758:	dfc00117 	ldw	ra,4(sp)
  80875c:	dc000017 	ldw	r16,0(sp)
  808760:	dec00204 	addi	sp,sp,8
  808764:	f800283a 	ret
  808768:	00c02074 	movhi	r3,129
  80876c:	18d2fb17 	ldw	r3,19436(r3)
  808770:	183ff926 	beq	r3,zero,808758 <_sbrk_r+0x28>
  808774:	80c00015 	stw	r3,0(r16)
  808778:	dfc00117 	ldw	ra,4(sp)
  80877c:	dc000017 	ldw	r16,0(sp)
  808780:	dec00204 	addi	sp,sp,8
  808784:	f800283a 	ret

00808788 <__sread>:
  808788:	defffe04 	addi	sp,sp,-8
  80878c:	dc000015 	stw	r16,0(sp)
  808790:	2821883a 	mov	r16,r5
  808794:	2940038f 	ldh	r5,14(r5)
  808798:	dfc00115 	stw	ra,4(sp)
  80879c:	080a6440 	call	80a644 <_read_r>
  8087a0:	10000716 	blt	r2,zero,8087c0 <__sread+0x38>
  8087a4:	80c01417 	ldw	r3,80(r16)
  8087a8:	1887883a 	add	r3,r3,r2
  8087ac:	80c01415 	stw	r3,80(r16)
  8087b0:	dfc00117 	ldw	ra,4(sp)
  8087b4:	dc000017 	ldw	r16,0(sp)
  8087b8:	dec00204 	addi	sp,sp,8
  8087bc:	f800283a 	ret
  8087c0:	80c0030b 	ldhu	r3,12(r16)
  8087c4:	18fbffcc 	andi	r3,r3,61439
  8087c8:	80c0030d 	sth	r3,12(r16)
  8087cc:	dfc00117 	ldw	ra,4(sp)
  8087d0:	dc000017 	ldw	r16,0(sp)
  8087d4:	dec00204 	addi	sp,sp,8
  8087d8:	f800283a 	ret

008087dc <__seofread>:
  8087dc:	0005883a 	mov	r2,zero
  8087e0:	f800283a 	ret

008087e4 <__swrite>:
  8087e4:	2880030b 	ldhu	r2,12(r5)
  8087e8:	defffb04 	addi	sp,sp,-20
  8087ec:	dcc00315 	stw	r19,12(sp)
  8087f0:	dc800215 	stw	r18,8(sp)
  8087f4:	dc400115 	stw	r17,4(sp)
  8087f8:	dc000015 	stw	r16,0(sp)
  8087fc:	dfc00415 	stw	ra,16(sp)
  808800:	10c0400c 	andi	r3,r2,256
  808804:	2821883a 	mov	r16,r5
  808808:	2023883a 	mov	r17,r4
  80880c:	2940038f 	ldh	r5,14(r5)
  808810:	3025883a 	mov	r18,r6
  808814:	3827883a 	mov	r19,r7
  808818:	18000c1e 	bne	r3,zero,80884c <__swrite+0x68>
  80881c:	10bbffcc 	andi	r2,r2,61439
  808820:	980f883a 	mov	r7,r19
  808824:	900d883a 	mov	r6,r18
  808828:	8809883a 	mov	r4,r17
  80882c:	8080030d 	sth	r2,12(r16)
  808830:	dfc00417 	ldw	ra,16(sp)
  808834:	dcc00317 	ldw	r19,12(sp)
  808838:	dc800217 	ldw	r18,8(sp)
  80883c:	dc400117 	ldw	r17,4(sp)
  808840:	dc000017 	ldw	r16,0(sp)
  808844:	dec00504 	addi	sp,sp,20
  808848:	0809df41 	jmpi	809df4 <_write_r>
  80884c:	01c00084 	movi	r7,2
  808850:	000d883a 	mov	r6,zero
  808854:	080a5900 	call	80a590 <_lseek_r>
  808858:	8080030b 	ldhu	r2,12(r16)
  80885c:	8140038f 	ldh	r5,14(r16)
  808860:	003fee06 	br	80881c <__swrite+0x38>

00808864 <__sseek>:
  808864:	defffe04 	addi	sp,sp,-8
  808868:	dc000015 	stw	r16,0(sp)
  80886c:	2821883a 	mov	r16,r5
  808870:	2940038f 	ldh	r5,14(r5)
  808874:	dfc00115 	stw	ra,4(sp)
  808878:	080a5900 	call	80a590 <_lseek_r>
  80887c:	10ffffd8 	cmpnei	r3,r2,-1
  808880:	18000826 	beq	r3,zero,8088a4 <__sseek+0x40>
  808884:	80c0030b 	ldhu	r3,12(r16)
  808888:	80801415 	stw	r2,80(r16)
  80888c:	18c40014 	ori	r3,r3,4096
  808890:	80c0030d 	sth	r3,12(r16)
  808894:	dfc00117 	ldw	ra,4(sp)
  808898:	dc000017 	ldw	r16,0(sp)
  80889c:	dec00204 	addi	sp,sp,8
  8088a0:	f800283a 	ret
  8088a4:	80c0030b 	ldhu	r3,12(r16)
  8088a8:	18fbffcc 	andi	r3,r3,61439
  8088ac:	80c0030d 	sth	r3,12(r16)
  8088b0:	dfc00117 	ldw	ra,4(sp)
  8088b4:	dc000017 	ldw	r16,0(sp)
  8088b8:	dec00204 	addi	sp,sp,8
  8088bc:	f800283a 	ret

008088c0 <__sclose>:
  8088c0:	2940038f 	ldh	r5,14(r5)
  8088c4:	0809e581 	jmpi	809e58 <_close_r>

008088c8 <__sprint_r.part.0>:
  8088c8:	28801917 	ldw	r2,100(r5)
  8088cc:	defff604 	addi	sp,sp,-40
  8088d0:	dcc00315 	stw	r19,12(sp)
  8088d4:	dfc00915 	stw	ra,36(sp)
  8088d8:	df000815 	stw	fp,32(sp)
  8088dc:	ddc00715 	stw	r23,28(sp)
  8088e0:	dd800615 	stw	r22,24(sp)
  8088e4:	dd400515 	stw	r21,20(sp)
  8088e8:	dd000415 	stw	r20,16(sp)
  8088ec:	dc800215 	stw	r18,8(sp)
  8088f0:	dc400115 	stw	r17,4(sp)
  8088f4:	dc000015 	stw	r16,0(sp)
  8088f8:	1088000c 	andi	r2,r2,8192
  8088fc:	3027883a 	mov	r19,r6
  808900:	10002c26 	beq	r2,zero,8089b4 <__sprint_r.part.0+0xec>
  808904:	30800217 	ldw	r2,8(r6)
  808908:	35000017 	ldw	r20,0(r6)
  80890c:	2821883a 	mov	r16,r5
  808910:	2023883a 	mov	r17,r4
  808914:	05bfff04 	movi	r22,-4
  808918:	10002426 	beq	r2,zero,8089ac <__sprint_r.part.0+0xe4>
  80891c:	a5400117 	ldw	r21,4(r20)
  808920:	a5c00017 	ldw	r23,0(r20)
  808924:	a824d0ba 	srli	r18,r21,2
  808928:	90001b26 	beq	r18,zero,808998 <__sprint_r.part.0+0xd0>
  80892c:	0039883a 	mov	fp,zero
  808930:	00000206 	br	80893c <__sprint_r.part.0+0x74>
  808934:	bdc00104 	addi	r23,r23,4
  808938:	97001626 	beq	r18,fp,808994 <__sprint_r.part.0+0xcc>
  80893c:	b9400017 	ldw	r5,0(r23)
  808940:	800d883a 	mov	r6,r16
  808944:	8809883a 	mov	r4,r17
  808948:	080a3480 	call	80a348 <_fputwc_r>
  80894c:	10bfffe0 	cmpeqi	r2,r2,-1
  808950:	e7000044 	addi	fp,fp,1
  808954:	103ff726 	beq	r2,zero,808934 <__sprint_r.part.0+0x6c>
  808958:	00bfffc4 	movi	r2,-1
  80895c:	98000215 	stw	zero,8(r19)
  808960:	98000115 	stw	zero,4(r19)
  808964:	dfc00917 	ldw	ra,36(sp)
  808968:	df000817 	ldw	fp,32(sp)
  80896c:	ddc00717 	ldw	r23,28(sp)
  808970:	dd800617 	ldw	r22,24(sp)
  808974:	dd400517 	ldw	r21,20(sp)
  808978:	dd000417 	ldw	r20,16(sp)
  80897c:	dcc00317 	ldw	r19,12(sp)
  808980:	dc800217 	ldw	r18,8(sp)
  808984:	dc400117 	ldw	r17,4(sp)
  808988:	dc000017 	ldw	r16,0(sp)
  80898c:	dec00a04 	addi	sp,sp,40
  808990:	f800283a 	ret
  808994:	98800217 	ldw	r2,8(r19)
  808998:	adaa703a 	and	r21,r21,r22
  80899c:	1545c83a 	sub	r2,r2,r21
  8089a0:	98800215 	stw	r2,8(r19)
  8089a4:	a5000204 	addi	r20,r20,8
  8089a8:	103fdc1e 	bne	r2,zero,80891c <__sprint_r.part.0+0x54>
  8089ac:	0005883a 	mov	r2,zero
  8089b0:	003fea06 	br	80895c <__sprint_r.part.0+0x94>
  8089b4:	0805ba00 	call	805ba0 <__sfvwrite_r>
  8089b8:	003fe806 	br	80895c <__sprint_r.part.0+0x94>

008089bc <__sprint_r>:
  8089bc:	30c00217 	ldw	r3,8(r6)
  8089c0:	18000126 	beq	r3,zero,8089c8 <__sprint_r+0xc>
  8089c4:	08088c81 	jmpi	8088c8 <__sprint_r.part.0>
  8089c8:	30000115 	stw	zero,4(r6)
  8089cc:	0005883a 	mov	r2,zero
  8089d0:	f800283a 	ret

008089d4 <___vfiprintf_internal_r>:
  8089d4:	deffcf04 	addi	sp,sp,-196
  8089d8:	dd802d15 	stw	r22,180(sp)
  8089dc:	dd402c15 	stw	r21,176(sp)
  8089e0:	dd002b15 	stw	r20,172(sp)
  8089e4:	dfc03015 	stw	ra,192(sp)
  8089e8:	df002f15 	stw	fp,188(sp)
  8089ec:	ddc02e15 	stw	r23,184(sp)
  8089f0:	dcc02a15 	stw	r19,168(sp)
  8089f4:	dc802915 	stw	r18,164(sp)
  8089f8:	dc402815 	stw	r17,160(sp)
  8089fc:	dc002715 	stw	r16,156(sp)
  808a00:	d9c00415 	stw	r7,16(sp)
  808a04:	202d883a 	mov	r22,r4
  808a08:	282b883a 	mov	r21,r5
  808a0c:	3029883a 	mov	r20,r6
  808a10:	20000226 	beq	r4,zero,808a1c <___vfiprintf_internal_r+0x48>
  808a14:	20800e17 	ldw	r2,56(r4)
  808a18:	1001bd26 	beq	r2,zero,809110 <___vfiprintf_internal_r+0x73c>
  808a1c:	a880030b 	ldhu	r2,12(r21)
  808a20:	10c8000c 	andi	r3,r2,8192
  808a24:	1800061e 	bne	r3,zero,808a40 <___vfiprintf_internal_r+0x6c>
  808a28:	a8c01917 	ldw	r3,100(r21)
  808a2c:	0137ffc4 	movi	r4,-8193
  808a30:	10880014 	ori	r2,r2,8192
  808a34:	1906703a 	and	r3,r3,r4
  808a38:	a880030d 	sth	r2,12(r21)
  808a3c:	a8c01915 	stw	r3,100(r21)
  808a40:	10c0020c 	andi	r3,r2,8
  808a44:	18010826 	beq	r3,zero,808e68 <___vfiprintf_internal_r+0x494>
  808a48:	a8c00417 	ldw	r3,16(r21)
  808a4c:	18010626 	beq	r3,zero,808e68 <___vfiprintf_internal_r+0x494>
  808a50:	1080068c 	andi	r2,r2,26
  808a54:	10800298 	cmpnei	r2,r2,10
  808a58:	10010b26 	beq	r2,zero,808e88 <___vfiprintf_internal_r+0x4b4>
  808a5c:	dc801704 	addi	r18,sp,92
  808a60:	dc800a15 	stw	r18,40(sp)
  808a64:	d8000c15 	stw	zero,48(sp)
  808a68:	d8000b15 	stw	zero,44(sp)
  808a6c:	9021883a 	mov	r16,r18
  808a70:	d8000515 	stw	zero,20(sp)
  808a74:	d8000115 	stw	zero,4(sp)
  808a78:	a0800007 	ldb	r2,0(r20)
  808a7c:	1000e826 	beq	r2,zero,808e20 <___vfiprintf_internal_r+0x44c>
  808a80:	a023883a 	mov	r17,r20
  808a84:	00000306 	br	808a94 <___vfiprintf_internal_r+0xc0>
  808a88:	88800047 	ldb	r2,1(r17)
  808a8c:	8c400044 	addi	r17,r17,1
  808a90:	10013326 	beq	r2,zero,808f60 <___vfiprintf_internal_r+0x58c>
  808a94:	10800958 	cmpnei	r2,r2,37
  808a98:	103ffb1e 	bne	r2,zero,808a88 <___vfiprintf_internal_r+0xb4>
  808a9c:	8d27c83a 	sub	r19,r17,r20
  808aa0:	8d01311e 	bne	r17,r20,808f68 <___vfiprintf_internal_r+0x594>
  808aa4:	88800003 	ldbu	r2,0(r17)
  808aa8:	10803fcc 	andi	r2,r2,255
  808aac:	1080201c 	xori	r2,r2,128
  808ab0:	10bfe004 	addi	r2,r2,-128
  808ab4:	1000da26 	beq	r2,zero,808e20 <___vfiprintf_internal_r+0x44c>
  808ab8:	88800047 	ldb	r2,1(r17)
  808abc:	8d000044 	addi	r20,r17,1
  808ac0:	d8000945 	stb	zero,37(sp)
  808ac4:	000b883a 	mov	r5,zero
  808ac8:	000d883a 	mov	r6,zero
  808acc:	023fffc4 	movi	r8,-1
  808ad0:	0023883a 	mov	r17,zero
  808ad4:	001b883a 	mov	r13,zero
  808ad8:	a5000044 	addi	r20,r20,1
  808adc:	10fff804 	addi	r3,r2,-32
  808ae0:	19001668 	cmpgeui	r4,r3,89
  808ae4:	20006c1e 	bne	r4,zero,808c98 <___vfiprintf_internal_r+0x2c4>
  808ae8:	180690ba 	slli	r3,r3,2
  808aec:	01002074 	movhi	r4,129
  808af0:	1909883a 	add	r4,r3,r4
  808af4:	20e2bf17 	ldw	r3,-29956(r4)
  808af8:	1800683a 	jmp	r3
  808afc:	00809438 	rdprs	r2,zero,592
  808b00:	00808c98 	cmpnei	r2,zero,562
  808b04:	00808c98 	cmpnei	r2,zero,562
  808b08:	0080942c 	andhi	r2,zero,592
  808b0c:	00808c98 	cmpnei	r2,zero,562
  808b10:	00808c98 	cmpnei	r2,zero,562
  808b14:	00808c98 	cmpnei	r2,zero,562
  808b18:	00808c98 	cmpnei	r2,zero,562
  808b1c:	00808c98 	cmpnei	r2,zero,562
  808b20:	00808c98 	cmpnei	r2,zero,562
  808b24:	00809404 	movi	r2,592
  808b28:	008093f4 	movhi	r2,591
  808b2c:	00808c98 	cmpnei	r2,zero,562
  808b30:	008093dc 	xori	r2,zero,591
  808b34:	00809390 	cmplti	r2,zero,590
  808b38:	00808c98 	cmpnei	r2,zero,562
  808b3c:	00809384 	movi	r2,590
  808b40:	00808c60 	cmpeqi	r2,zero,561
  808b44:	00808c60 	cmpeqi	r2,zero,561
  808b48:	00808c60 	cmpeqi	r2,zero,561
  808b4c:	00808c60 	cmpeqi	r2,zero,561
  808b50:	00808c60 	cmpeqi	r2,zero,561
  808b54:	00808c60 	cmpeqi	r2,zero,561
  808b58:	00808c60 	cmpeqi	r2,zero,561
  808b5c:	00808c60 	cmpeqi	r2,zero,561
  808b60:	00808c60 	cmpeqi	r2,zero,561
  808b64:	00808c98 	cmpnei	r2,zero,562
  808b68:	00808c98 	cmpnei	r2,zero,562
  808b6c:	00808c98 	cmpnei	r2,zero,562
  808b70:	00808c98 	cmpnei	r2,zero,562
  808b74:	00808c98 	cmpnei	r2,zero,562
  808b78:	00808c98 	cmpnei	r2,zero,562
  808b7c:	00808c98 	cmpnei	r2,zero,562
  808b80:	00808c98 	cmpnei	r2,zero,562
  808b84:	00808c98 	cmpnei	r2,zero,562
  808b88:	00808c98 	cmpnei	r2,zero,562
  808b8c:	00809280 	call	80928 <__alt_mem_sdram-0x77f6d8>
  808b90:	00808c98 	cmpnei	r2,zero,562
  808b94:	00808c98 	cmpnei	r2,zero,562
  808b98:	00808c98 	cmpnei	r2,zero,562
  808b9c:	00808c98 	cmpnei	r2,zero,562
  808ba0:	00808c98 	cmpnei	r2,zero,562
  808ba4:	00808c98 	cmpnei	r2,zero,562
  808ba8:	00808c98 	cmpnei	r2,zero,562
  808bac:	00808c98 	cmpnei	r2,zero,562
  808bb0:	00808c98 	cmpnei	r2,zero,562
  808bb4:	00808c98 	cmpnei	r2,zero,562
  808bb8:	00808ef8 	rdprs	r2,zero,571
  808bbc:	00808c98 	cmpnei	r2,zero,562
  808bc0:	00808c98 	cmpnei	r2,zero,562
  808bc4:	00808c98 	cmpnei	r2,zero,562
  808bc8:	00808c98 	cmpnei	r2,zero,562
  808bcc:	00808c98 	cmpnei	r2,zero,562
  808bd0:	00808ed0 	cmplti	r2,zero,571
  808bd4:	00808c98 	cmpnei	r2,zero,562
  808bd8:	00808c98 	cmpnei	r2,zero,562
  808bdc:	0080948c 	andi	r2,zero,594
  808be0:	00808c98 	cmpnei	r2,zero,562
  808be4:	00808c98 	cmpnei	r2,zero,562
  808be8:	00808c98 	cmpnei	r2,zero,562
  808bec:	00808c98 	cmpnei	r2,zero,562
  808bf0:	00808c98 	cmpnei	r2,zero,562
  808bf4:	00808c98 	cmpnei	r2,zero,562
  808bf8:	00808c98 	cmpnei	r2,zero,562
  808bfc:	00808c98 	cmpnei	r2,zero,562
  808c00:	00808c98 	cmpnei	r2,zero,562
  808c04:	00808c98 	cmpnei	r2,zero,562
  808c08:	00809464 	muli	r2,zero,593
  808c0c:	00809118 	cmpnei	r2,zero,580
  808c10:	00808c98 	cmpnei	r2,zero,562
  808c14:	00808c98 	cmpnei	r2,zero,562
  808c18:	00808c98 	cmpnei	r2,zero,562
  808c1c:	0080918c 	andi	r2,zero,582
  808c20:	00809118 	cmpnei	r2,zero,580
  808c24:	00808c98 	cmpnei	r2,zero,562
  808c28:	00808c98 	cmpnei	r2,zero,562
  808c2c:	00809510 	cmplti	r2,zero,596
  808c30:	00808c98 	cmpnei	r2,zero,562
  808c34:	008094d4 	movui	r2,595
  808c38:	00808efc 	xorhi	r2,zero,571
  808c3c:	00809244 	movi	r2,585
  808c40:	00809238 	rdprs	r2,zero,584
  808c44:	00808c98 	cmpnei	r2,zero,562
  808c48:	008091e0 	cmpeqi	r2,zero,583
  808c4c:	00808c98 	cmpnei	r2,zero,562
  808c50:	00808ed4 	movui	r2,571
  808c54:	00808c98 	cmpnei	r2,zero,562
  808c58:	00808c98 	cmpnei	r2,zero,562
  808c5c:	00809198 	cmpnei	r2,zero,582
  808c60:	0023883a 	mov	r17,zero
  808c64:	113ff404 	addi	r4,r2,-48
  808c68:	880690ba 	slli	r3,r17,2
  808c6c:	a0800007 	ldb	r2,0(r20)
  808c70:	a5000044 	addi	r20,r20,1
  808c74:	1c63883a 	add	r17,r3,r17
  808c78:	8c63883a 	add	r17,r17,r17
  808c7c:	2463883a 	add	r17,r4,r17
  808c80:	113ff404 	addi	r4,r2,-48
  808c84:	20c002b0 	cmpltui	r3,r4,10
  808c88:	183ff71e 	bne	r3,zero,808c68 <___vfiprintf_internal_r+0x294>
  808c8c:	10fff804 	addi	r3,r2,-32
  808c90:	19001668 	cmpgeui	r4,r3,89
  808c94:	203f9426 	beq	r4,zero,808ae8 <___vfiprintf_internal_r+0x114>
  808c98:	29403fcc 	andi	r5,r5,255
  808c9c:	2803ed1e 	bne	r5,zero,809c54 <___vfiprintf_internal_r+0x1280>
  808ca0:	10005f26 	beq	r2,zero,808e20 <___vfiprintf_internal_r+0x44c>
  808ca4:	d8800d05 	stb	r2,52(sp)
  808ca8:	d8000945 	stb	zero,37(sp)
  808cac:	05c00044 	movi	r23,1
  808cb0:	07000044 	movi	fp,1
  808cb4:	dcc00d04 	addi	r19,sp,52
  808cb8:	db400015 	stw	r13,0(sp)
  808cbc:	0011883a 	mov	r8,zero
  808cc0:	d8800017 	ldw	r2,0(sp)
  808cc4:	1380008c 	andi	r14,r2,2
  808cc8:	70000126 	beq	r14,zero,808cd0 <___vfiprintf_internal_r+0x2fc>
  808ccc:	bdc00084 	addi	r23,r23,2
  808cd0:	d8800017 	ldw	r2,0(sp)
  808cd4:	d9000b17 	ldw	r4,44(sp)
  808cd8:	1340210c 	andi	r13,r2,132
  808cdc:	21800044 	addi	r6,r4,1
  808ce0:	d8800c17 	ldw	r2,48(sp)
  808ce4:	300b883a 	mov	r5,r6
  808ce8:	6800021e 	bne	r13,zero,808cf4 <___vfiprintf_internal_r+0x320>
  808cec:	8dc7c83a 	sub	r3,r17,r23
  808cf0:	00c2e216 	blt	zero,r3,80987c <___vfiprintf_internal_r+0xea8>
  808cf4:	d8c00947 	ldb	r3,37(sp)
  808cf8:	81800204 	addi	r6,r16,8
  808cfc:	18000d26 	beq	r3,zero,808d34 <___vfiprintf_internal_r+0x360>
  808d00:	d8c00944 	addi	r3,sp,37
  808d04:	10800044 	addi	r2,r2,1
  808d08:	80c00015 	stw	r3,0(r16)
  808d0c:	00c00044 	movi	r3,1
  808d10:	80c00115 	stw	r3,4(r16)
  808d14:	d8800c15 	stw	r2,48(sp)
  808d18:	d9400b15 	stw	r5,44(sp)
  808d1c:	28c00208 	cmpgei	r3,r5,8
  808d20:	18029a1e 	bne	r3,zero,80978c <___vfiprintf_internal_r+0xdb8>
  808d24:	2809883a 	mov	r4,r5
  808d28:	3021883a 	mov	r16,r6
  808d2c:	29400044 	addi	r5,r5,1
  808d30:	31800204 	addi	r6,r6,8
  808d34:	70001826 	beq	r14,zero,808d98 <___vfiprintf_internal_r+0x3c4>
  808d38:	d8c00984 	addi	r3,sp,38
  808d3c:	10800084 	addi	r2,r2,2
  808d40:	80c00015 	stw	r3,0(r16)
  808d44:	00c00084 	movi	r3,2
  808d48:	80c00115 	stw	r3,4(r16)
  808d4c:	d8800c15 	stw	r2,48(sp)
  808d50:	d9400b15 	stw	r5,44(sp)
  808d54:	28c00208 	cmpgei	r3,r5,8
  808d58:	1802a426 	beq	r3,zero,8097ec <___vfiprintf_internal_r+0xe18>
  808d5c:	10032226 	beq	r2,zero,8099e8 <___vfiprintf_internal_r+0x1014>
  808d60:	d9800a04 	addi	r6,sp,40
  808d64:	a80b883a 	mov	r5,r21
  808d68:	b009883a 	mov	r4,r22
  808d6c:	da000315 	stw	r8,12(sp)
  808d70:	db400215 	stw	r13,8(sp)
  808d74:	08088c80 	call	8088c8 <__sprint_r.part.0>
  808d78:	10002b1e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  808d7c:	d9000b17 	ldw	r4,44(sp)
  808d80:	d8800c17 	ldw	r2,48(sp)
  808d84:	da000317 	ldw	r8,12(sp)
  808d88:	db400217 	ldw	r13,8(sp)
  808d8c:	d9801904 	addi	r6,sp,100
  808d90:	21400044 	addi	r5,r4,1
  808d94:	9021883a 	mov	r16,r18
  808d98:	6b402018 	cmpnei	r13,r13,128
  808d9c:	6801e526 	beq	r13,zero,809534 <___vfiprintf_internal_r+0xb60>
  808da0:	4711c83a 	sub	r8,r8,fp
  808da4:	02022416 	blt	zero,r8,809638 <___vfiprintf_internal_r+0xc64>
  808da8:	e085883a 	add	r2,fp,r2
  808dac:	d9400b15 	stw	r5,44(sp)
  808db0:	84c00015 	stw	r19,0(r16)
  808db4:	87000115 	stw	fp,4(r16)
  808db8:	d8800c15 	stw	r2,48(sp)
  808dbc:	29400210 	cmplti	r5,r5,8
  808dc0:	2800081e 	bne	r5,zero,808de4 <___vfiprintf_internal_r+0x410>
  808dc4:	10009826 	beq	r2,zero,809028 <___vfiprintf_internal_r+0x654>
  808dc8:	d9800a04 	addi	r6,sp,40
  808dcc:	a80b883a 	mov	r5,r21
  808dd0:	b009883a 	mov	r4,r22
  808dd4:	08088c80 	call	8088c8 <__sprint_r.part.0>
  808dd8:	1000131e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  808ddc:	d8800c17 	ldw	r2,48(sp)
  808de0:	900d883a 	mov	r6,r18
  808de4:	d8c00017 	ldw	r3,0(sp)
  808de8:	1cc0010c 	andi	r19,r3,4
  808dec:	98000226 	beq	r19,zero,808df8 <___vfiprintf_internal_r+0x424>
  808df0:	8de1c83a 	sub	r16,r17,r23
  808df4:	04009316 	blt	zero,r16,809044 <___vfiprintf_internal_r+0x670>
  808df8:	8dc0010e 	bge	r17,r23,808e00 <___vfiprintf_internal_r+0x42c>
  808dfc:	b823883a 	mov	r17,r23
  808e00:	d8c00117 	ldw	r3,4(sp)
  808e04:	1c47883a 	add	r3,r3,r17
  808e08:	d8c00115 	stw	r3,4(sp)
  808e0c:	1002551e 	bne	r2,zero,809764 <___vfiprintf_internal_r+0xd90>
  808e10:	a0800007 	ldb	r2,0(r20)
  808e14:	d8000b15 	stw	zero,44(sp)
  808e18:	9021883a 	mov	r16,r18
  808e1c:	103f181e 	bne	r2,zero,808a80 <___vfiprintf_internal_r+0xac>
  808e20:	d8800c17 	ldw	r2,48(sp)
  808e24:	10038d1e 	bne	r2,zero,809c5c <___vfiprintf_internal_r+0x1288>
  808e28:	a880030b 	ldhu	r2,12(r21)
  808e2c:	1080100c 	andi	r2,r2,64
  808e30:	1003a51e 	bne	r2,zero,809cc8 <___vfiprintf_internal_r+0x12f4>
  808e34:	d8800117 	ldw	r2,4(sp)
  808e38:	dfc03017 	ldw	ra,192(sp)
  808e3c:	df002f17 	ldw	fp,188(sp)
  808e40:	ddc02e17 	ldw	r23,184(sp)
  808e44:	dd802d17 	ldw	r22,180(sp)
  808e48:	dd402c17 	ldw	r21,176(sp)
  808e4c:	dd002b17 	ldw	r20,172(sp)
  808e50:	dcc02a17 	ldw	r19,168(sp)
  808e54:	dc802917 	ldw	r18,164(sp)
  808e58:	dc402817 	ldw	r17,160(sp)
  808e5c:	dc002717 	ldw	r16,156(sp)
  808e60:	dec03104 	addi	sp,sp,196
  808e64:	f800283a 	ret
  808e68:	a80b883a 	mov	r5,r21
  808e6c:	b009883a 	mov	r4,r22
  808e70:	08036040 	call	803604 <__swsetup_r>
  808e74:	1003941e 	bne	r2,zero,809cc8 <___vfiprintf_internal_r+0x12f4>
  808e78:	a880030b 	ldhu	r2,12(r21)
  808e7c:	1080068c 	andi	r2,r2,26
  808e80:	10800298 	cmpnei	r2,r2,10
  808e84:	103ef51e 	bne	r2,zero,808a5c <___vfiprintf_internal_r+0x88>
  808e88:	a880038f 	ldh	r2,14(r21)
  808e8c:	103ef316 	blt	r2,zero,808a5c <___vfiprintf_internal_r+0x88>
  808e90:	d9c00417 	ldw	r7,16(sp)
  808e94:	a00d883a 	mov	r6,r20
  808e98:	a80b883a 	mov	r5,r21
  808e9c:	b009883a 	mov	r4,r22
  808ea0:	dfc03017 	ldw	ra,192(sp)
  808ea4:	df002f17 	ldw	fp,188(sp)
  808ea8:	ddc02e17 	ldw	r23,184(sp)
  808eac:	dd802d17 	ldw	r22,180(sp)
  808eb0:	dd402c17 	ldw	r21,176(sp)
  808eb4:	dd002b17 	ldw	r20,172(sp)
  808eb8:	dcc02a17 	ldw	r19,168(sp)
  808ebc:	dc802917 	ldw	r18,164(sp)
  808ec0:	dc402817 	ldw	r17,160(sp)
  808ec4:	dc002717 	ldw	r16,156(sp)
  808ec8:	dec03104 	addi	sp,sp,196
  808ecc:	0809d341 	jmpi	809d34 <__sbprintf>
  808ed0:	6b400414 	ori	r13,r13,16
  808ed4:	6880080c 	andi	r2,r13,32
  808ed8:	10004726 	beq	r2,zero,808ff8 <___vfiprintf_internal_r+0x624>
  808edc:	d8c00417 	ldw	r3,16(sp)
  808ee0:	00800044 	movi	r2,1
  808ee4:	1dc00017 	ldw	r23,0(r3)
  808ee8:	1f000117 	ldw	fp,4(r3)
  808eec:	18c00204 	addi	r3,r3,8
  808ef0:	d8c00415 	stw	r3,16(sp)
  808ef4:	00000906 	br	808f1c <___vfiprintf_internal_r+0x548>
  808ef8:	6b400414 	ori	r13,r13,16
  808efc:	6880080c 	andi	r2,r13,32
  808f00:	10003126 	beq	r2,zero,808fc8 <___vfiprintf_internal_r+0x5f4>
  808f04:	d8c00417 	ldw	r3,16(sp)
  808f08:	0005883a 	mov	r2,zero
  808f0c:	1dc00017 	ldw	r23,0(r3)
  808f10:	1f000117 	ldw	fp,4(r3)
  808f14:	18c00204 	addi	r3,r3,8
  808f18:	d8c00415 	stw	r3,16(sp)
  808f1c:	d8000945 	stb	zero,37(sp)
  808f20:	40ffffe0 	cmpeqi	r3,r8,-1
  808f24:	001d883a 	mov	r14,zero
  808f28:	1800f01e 	bne	r3,zero,8092ec <___vfiprintf_internal_r+0x918>
  808f2c:	04ffdfc4 	movi	r19,-129
  808f30:	6cc8703a 	and	r4,r13,r19
  808f34:	bf06b03a 	or	r3,r23,fp
  808f38:	d9000015 	stw	r4,0(sp)
  808f3c:	1802301e 	bne	r3,zero,809800 <___vfiprintf_internal_r+0xe2c>
  808f40:	4001f31e 	bne	r8,zero,809710 <___vfiprintf_internal_r+0xd3c>
  808f44:	10029e1e 	bne	r2,zero,8099c0 <___vfiprintf_internal_r+0xfec>
  808f48:	6f00004c 	andi	fp,r13,1
  808f4c:	e002bc26 	beq	fp,zero,809a40 <___vfiprintf_internal_r+0x106c>
  808f50:	00800c04 	movi	r2,48
  808f54:	d88016c5 	stb	r2,91(sp)
  808f58:	dcc016c4 	addi	r19,sp,91
  808f5c:	00010006 	br	809360 <___vfiprintf_internal_r+0x98c>
  808f60:	8d27c83a 	sub	r19,r17,r20
  808f64:	8d3fae26 	beq	r17,r20,808e20 <___vfiprintf_internal_r+0x44c>
  808f68:	d8c00c17 	ldw	r3,48(sp)
  808f6c:	d8800b17 	ldw	r2,44(sp)
  808f70:	85000015 	stw	r20,0(r16)
  808f74:	98c7883a 	add	r3,r19,r3
  808f78:	10800044 	addi	r2,r2,1
  808f7c:	d8800b15 	stw	r2,44(sp)
  808f80:	84c00115 	stw	r19,4(r16)
  808f84:	d8c00c15 	stw	r3,48(sp)
  808f88:	10800208 	cmpgei	r2,r2,8
  808f8c:	1000061e 	bne	r2,zero,808fa8 <___vfiprintf_internal_r+0x5d4>
  808f90:	84000204 	addi	r16,r16,8
  808f94:	d8c00117 	ldw	r3,4(sp)
  808f98:	88800003 	ldbu	r2,0(r17)
  808f9c:	1cc7883a 	add	r3,r3,r19
  808fa0:	d8c00115 	stw	r3,4(sp)
  808fa4:	003ec006 	br	808aa8 <___vfiprintf_internal_r+0xd4>
  808fa8:	18028126 	beq	r3,zero,8099b0 <___vfiprintf_internal_r+0xfdc>
  808fac:	d9800a04 	addi	r6,sp,40
  808fb0:	a80b883a 	mov	r5,r21
  808fb4:	b009883a 	mov	r4,r22
  808fb8:	08088c80 	call	8088c8 <__sprint_r.part.0>
  808fbc:	103f9a1e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  808fc0:	9021883a 	mov	r16,r18
  808fc4:	003ff306 	br	808f94 <___vfiprintf_internal_r+0x5c0>
  808fc8:	d9000417 	ldw	r4,16(sp)
  808fcc:	6880040c 	andi	r2,r13,16
  808fd0:	20c00104 	addi	r3,r4,4
  808fd4:	1002ac1e 	bne	r2,zero,809a88 <___vfiprintf_internal_r+0x10b4>
  808fd8:	6880100c 	andi	r2,r13,64
  808fdc:	1002fb26 	beq	r2,zero,809bcc <___vfiprintf_internal_r+0x11f8>
  808fe0:	d8800417 	ldw	r2,16(sp)
  808fe4:	0039883a 	mov	fp,zero
  808fe8:	d8c00415 	stw	r3,16(sp)
  808fec:	15c0000b 	ldhu	r23,0(r2)
  808ff0:	0005883a 	mov	r2,zero
  808ff4:	003fc906 	br	808f1c <___vfiprintf_internal_r+0x548>
  808ff8:	d9000417 	ldw	r4,16(sp)
  808ffc:	6880040c 	andi	r2,r13,16
  809000:	20c00104 	addi	r3,r4,4
  809004:	1002af1e 	bne	r2,zero,809ac4 <___vfiprintf_internal_r+0x10f0>
  809008:	6880100c 	andi	r2,r13,64
  80900c:	1002fb26 	beq	r2,zero,809bfc <___vfiprintf_internal_r+0x1228>
  809010:	d8800417 	ldw	r2,16(sp)
  809014:	0039883a 	mov	fp,zero
  809018:	d8c00415 	stw	r3,16(sp)
  80901c:	15c0000b 	ldhu	r23,0(r2)
  809020:	00800044 	movi	r2,1
  809024:	003fbd06 	br	808f1c <___vfiprintf_internal_r+0x548>
  809028:	d8c00017 	ldw	r3,0(sp)
  80902c:	d8000b15 	stw	zero,44(sp)
  809030:	1cc0010c 	andi	r19,r3,4
  809034:	98024c26 	beq	r19,zero,809968 <___vfiprintf_internal_r+0xf94>
  809038:	8de1c83a 	sub	r16,r17,r23
  80903c:	04024a0e 	bge	zero,r16,809968 <___vfiprintf_internal_r+0xf94>
  809040:	900d883a 	mov	r6,r18
  809044:	80c00450 	cmplti	r3,r16,17
  809048:	d9000b17 	ldw	r4,44(sp)
  80904c:	01c02074 	movhi	r7,129
  809050:	18031a1e 	bne	r3,zero,809cbc <___vfiprintf_internal_r+0x12e8>
  809054:	39c44804 	addi	r7,r7,4384
  809058:	04c00404 	movi	r19,16
  80905c:	00000606 	br	809078 <___vfiprintf_internal_r+0x6a4>
  809060:	21400084 	addi	r5,r4,2
  809064:	31800204 	addi	r6,r6,8
  809068:	1809883a 	mov	r4,r3
  80906c:	843ffc04 	addi	r16,r16,-16
  809070:	80c00448 	cmpgei	r3,r16,17
  809074:	18001726 	beq	r3,zero,8090d4 <___vfiprintf_internal_r+0x700>
  809078:	20c00044 	addi	r3,r4,1
  80907c:	10800404 	addi	r2,r2,16
  809080:	31c00015 	stw	r7,0(r6)
  809084:	34c00115 	stw	r19,4(r6)
  809088:	d8800c15 	stw	r2,48(sp)
  80908c:	d8c00b15 	stw	r3,44(sp)
  809090:	19400208 	cmpgei	r5,r3,8
  809094:	283ff226 	beq	r5,zero,809060 <___vfiprintf_internal_r+0x68c>
  809098:	d9800a04 	addi	r6,sp,40
  80909c:	a80b883a 	mov	r5,r21
  8090a0:	b009883a 	mov	r4,r22
  8090a4:	10011f26 	beq	r2,zero,809524 <___vfiprintf_internal_r+0xb50>
  8090a8:	d9c00015 	stw	r7,0(sp)
  8090ac:	08088c80 	call	8088c8 <__sprint_r.part.0>
  8090b0:	103f5d1e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  8090b4:	d9000b17 	ldw	r4,44(sp)
  8090b8:	843ffc04 	addi	r16,r16,-16
  8090bc:	80c00448 	cmpgei	r3,r16,17
  8090c0:	d8800c17 	ldw	r2,48(sp)
  8090c4:	d9c00017 	ldw	r7,0(sp)
  8090c8:	900d883a 	mov	r6,r18
  8090cc:	21400044 	addi	r5,r4,1
  8090d0:	183fe91e 	bne	r3,zero,809078 <___vfiprintf_internal_r+0x6a4>
  8090d4:	1405883a 	add	r2,r2,r16
  8090d8:	d9400b15 	stw	r5,44(sp)
  8090dc:	31c00015 	stw	r7,0(r6)
  8090e0:	34000115 	stw	r16,4(r6)
  8090e4:	d8800c15 	stw	r2,48(sp)
  8090e8:	29400210 	cmplti	r5,r5,8
  8090ec:	283f421e 	bne	r5,zero,808df8 <___vfiprintf_internal_r+0x424>
  8090f0:	10021d26 	beq	r2,zero,809968 <___vfiprintf_internal_r+0xf94>
  8090f4:	d9800a04 	addi	r6,sp,40
  8090f8:	a80b883a 	mov	r5,r21
  8090fc:	b009883a 	mov	r4,r22
  809100:	08088c80 	call	8088c8 <__sprint_r.part.0>
  809104:	103f481e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  809108:	d8800c17 	ldw	r2,48(sp)
  80910c:	003f3a06 	br	808df8 <___vfiprintf_internal_r+0x424>
  809110:	08057400 	call	805740 <__sinit>
  809114:	003e4106 	br	808a1c <___vfiprintf_internal_r+0x48>
  809118:	29403fcc 	andi	r5,r5,255
  80911c:	2802da1e 	bne	r5,zero,809c88 <___vfiprintf_internal_r+0x12b4>
  809120:	6880080c 	andi	r2,r13,32
  809124:	10005b26 	beq	r2,zero,809294 <___vfiprintf_internal_r+0x8c0>
  809128:	d8c00417 	ldw	r3,16(sp)
  80912c:	18800117 	ldw	r2,4(r3)
  809130:	1dc00017 	ldw	r23,0(r3)
  809134:	18c00204 	addi	r3,r3,8
  809138:	d8c00415 	stw	r3,16(sp)
  80913c:	1039883a 	mov	fp,r2
  809140:	10006016 	blt	r2,zero,8092c4 <___vfiprintf_internal_r+0x8f0>
  809144:	40bfffd8 	cmpnei	r2,r8,-1
  809148:	db800943 	ldbu	r14,37(sp)
  80914c:	10000626 	beq	r2,zero,809168 <___vfiprintf_internal_r+0x794>
  809150:	04ffdfc4 	movi	r19,-129
  809154:	6cc6703a 	and	r3,r13,r19
  809158:	bf04b03a 	or	r2,r23,fp
  80915c:	d8c00015 	stw	r3,0(sp)
  809160:	10021626 	beq	r2,zero,8099bc <___vfiprintf_internal_r+0xfe8>
  809164:	db400017 	ldw	r13,0(sp)
  809168:	e001a71e 	bne	fp,zero,809808 <___vfiprintf_internal_r+0xe34>
  80916c:	b88002a8 	cmpgeui	r2,r23,10
  809170:	1001a51e 	bne	r2,zero,809808 <___vfiprintf_internal_r+0xe34>
  809174:	bdc00c04 	addi	r23,r23,48
  809178:	ddc016c5 	stb	r23,91(sp)
  80917c:	db400015 	stw	r13,0(sp)
  809180:	07000044 	movi	fp,1
  809184:	dcc016c4 	addi	r19,sp,91
  809188:	00007506 	br	809360 <___vfiprintf_internal_r+0x98c>
  80918c:	a0800007 	ldb	r2,0(r20)
  809190:	6b401014 	ori	r13,r13,64
  809194:	003e5006 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809198:	29403fcc 	andi	r5,r5,255
  80919c:	2802bc1e 	bne	r5,zero,809c90 <___vfiprintf_internal_r+0x12bc>
  8091a0:	00c02074 	movhi	r3,129
  8091a4:	18c3bd04 	addi	r3,r3,3828
  8091a8:	d8c00515 	stw	r3,20(sp)
  8091ac:	68c0080c 	andi	r3,r13,32
  8091b0:	1800bd26 	beq	r3,zero,8094a8 <___vfiprintf_internal_r+0xad4>
  8091b4:	d8c00417 	ldw	r3,16(sp)
  8091b8:	1dc00017 	ldw	r23,0(r3)
  8091bc:	1f000117 	ldw	fp,4(r3)
  8091c0:	18c00204 	addi	r3,r3,8
  8091c4:	d8c00415 	stw	r3,16(sp)
  8091c8:	68c0004c 	andi	r3,r13,1
  8091cc:	18000226 	beq	r3,zero,8091d8 <___vfiprintf_internal_r+0x804>
  8091d0:	bf06b03a 	or	r3,r23,fp
  8091d4:	1802261e 	bne	r3,zero,809a70 <___vfiprintf_internal_r+0x109c>
  8091d8:	00800084 	movi	r2,2
  8091dc:	003f4f06 	br	808f1c <___vfiprintf_internal_r+0x548>
  8091e0:	d8800417 	ldw	r2,16(sp)
  8091e4:	d8000945 	stb	zero,37(sp)
  8091e8:	14c00017 	ldw	r19,0(r2)
  8091ec:	10c00104 	addi	r3,r2,4
  8091f0:	98026926 	beq	r19,zero,809b98 <___vfiprintf_internal_r+0x11c4>
  8091f4:	40bfffe0 	cmpeqi	r2,r8,-1
  8091f8:	1002411e 	bne	r2,zero,809b00 <___vfiprintf_internal_r+0x112c>
  8091fc:	400d883a 	mov	r6,r8
  809200:	000b883a 	mov	r5,zero
  809204:	9809883a 	mov	r4,r19
  809208:	d8c00315 	stw	r3,12(sp)
  80920c:	db400215 	stw	r13,8(sp)
  809210:	da000015 	stw	r8,0(sp)
  809214:	0806bf00 	call	806bf0 <memchr>
  809218:	da000017 	ldw	r8,0(sp)
  80921c:	db400217 	ldw	r13,8(sp)
  809220:	d8c00317 	ldw	r3,12(sp)
  809224:	10029426 	beq	r2,zero,809c78 <___vfiprintf_internal_r+0x12a4>
  809228:	14f9c83a 	sub	fp,r2,r19
  80922c:	e02f883a 	mov	r23,fp
  809230:	d8c00415 	stw	r3,16(sp)
  809234:	003ea006 	br	808cb8 <___vfiprintf_internal_r+0x2e4>
  809238:	a0800007 	ldb	r2,0(r20)
  80923c:	6b400814 	ori	r13,r13,32
  809240:	003e2506 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809244:	d8c00417 	ldw	r3,16(sp)
  809248:	00800c04 	movi	r2,48
  80924c:	d8800985 	stb	r2,38(sp)
  809250:	00801e04 	movi	r2,120
  809254:	01002074 	movhi	r4,129
  809258:	d88009c5 	stb	r2,39(sp)
  80925c:	18800104 	addi	r2,r3,4
  809260:	d8800415 	stw	r2,16(sp)
  809264:	2083bd04 	addi	r2,r4,3828
  809268:	d8800515 	stw	r2,20(sp)
  80926c:	1dc00017 	ldw	r23,0(r3)
  809270:	0039883a 	mov	fp,zero
  809274:	6b400094 	ori	r13,r13,2
  809278:	00800084 	movi	r2,2
  80927c:	003f2706 	br	808f1c <___vfiprintf_internal_r+0x548>
  809280:	29403fcc 	andi	r5,r5,255
  809284:	2802841e 	bne	r5,zero,809c98 <___vfiprintf_internal_r+0x12c4>
  809288:	6b400414 	ori	r13,r13,16
  80928c:	6880080c 	andi	r2,r13,32
  809290:	103fa51e 	bne	r2,zero,809128 <___vfiprintf_internal_r+0x754>
  809294:	d9000417 	ldw	r4,16(sp)
  809298:	6880040c 	andi	r2,r13,16
  80929c:	20c00104 	addi	r3,r4,4
  8092a0:	1001ee1e 	bne	r2,zero,809a5c <___vfiprintf_internal_r+0x1088>
  8092a4:	6880100c 	andi	r2,r13,64
  8092a8:	10024e26 	beq	r2,zero,809be4 <___vfiprintf_internal_r+0x1210>
  8092ac:	d8800417 	ldw	r2,16(sp)
  8092b0:	d8c00415 	stw	r3,16(sp)
  8092b4:	15c0000f 	ldh	r23,0(r2)
  8092b8:	b839d7fa 	srai	fp,r23,31
  8092bc:	e005883a 	mov	r2,fp
  8092c0:	103fa00e 	bge	r2,zero,809144 <___vfiprintf_internal_r+0x770>
  8092c4:	b804c03a 	cmpne	r2,r23,zero
  8092c8:	0739c83a 	sub	fp,zero,fp
  8092cc:	e0b9c83a 	sub	fp,fp,r2
  8092d0:	00800b44 	movi	r2,45
  8092d4:	d8800945 	stb	r2,37(sp)
  8092d8:	40ffffe0 	cmpeqi	r3,r8,-1
  8092dc:	05efc83a 	sub	r23,zero,r23
  8092e0:	03800b44 	movi	r14,45
  8092e4:	00800044 	movi	r2,1
  8092e8:	183f1026 	beq	r3,zero,808f2c <___vfiprintf_internal_r+0x558>
  8092ec:	10c00060 	cmpeqi	r3,r2,1
  8092f0:	183f9d1e 	bne	r3,zero,809168 <___vfiprintf_internal_r+0x794>
  8092f4:	108000a0 	cmpeqi	r2,r2,2
  8092f8:	10010a1e 	bne	r2,zero,809724 <___vfiprintf_internal_r+0xd50>
  8092fc:	9027883a 	mov	r19,r18
  809300:	e008977a 	slli	r4,fp,29
  809304:	b806d0fa 	srli	r3,r23,3
  809308:	e038d0fa 	srli	fp,fp,3
  80930c:	b88001cc 	andi	r2,r23,7
  809310:	10800c04 	addi	r2,r2,48
  809314:	20eeb03a 	or	r23,r4,r3
  809318:	98bfffc5 	stb	r2,-1(r19)
  80931c:	bf06b03a 	or	r3,r23,fp
  809320:	980b883a 	mov	r5,r19
  809324:	9cffffc4 	addi	r19,r19,-1
  809328:	183ff51e 	bne	r3,zero,809300 <___vfiprintf_internal_r+0x92c>
  80932c:	68c0004c 	andi	r3,r13,1
  809330:	18010926 	beq	r3,zero,809758 <___vfiprintf_internal_r+0xd84>
  809334:	10803fcc 	andi	r2,r2,255
  809338:	1080201c 	xori	r2,r2,128
  80933c:	10bfe004 	addi	r2,r2,-128
  809340:	10800c18 	cmpnei	r2,r2,48
  809344:	10010426 	beq	r2,zero,809758 <___vfiprintf_internal_r+0xd84>
  809348:	297fff84 	addi	r5,r5,-2
  80934c:	00800c04 	movi	r2,48
  809350:	98bfffc5 	stb	r2,-1(r19)
  809354:	9179c83a 	sub	fp,r18,r5
  809358:	db400015 	stw	r13,0(sp)
  80935c:	2827883a 	mov	r19,r5
  809360:	402f883a 	mov	r23,r8
  809364:	4700010e 	bge	r8,fp,80936c <___vfiprintf_internal_r+0x998>
  809368:	e02f883a 	mov	r23,fp
  80936c:	73803fcc 	andi	r14,r14,255
  809370:	7380201c 	xori	r14,r14,128
  809374:	73bfe004 	addi	r14,r14,-128
  809378:	703e5126 	beq	r14,zero,808cc0 <___vfiprintf_internal_r+0x2ec>
  80937c:	bdc00044 	addi	r23,r23,1
  809380:	003e4f06 	br	808cc0 <___vfiprintf_internal_r+0x2ec>
  809384:	a0800007 	ldb	r2,0(r20)
  809388:	6b402014 	ori	r13,r13,128
  80938c:	003dd206 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809390:	a0800007 	ldb	r2,0(r20)
  809394:	a0c00044 	addi	r3,r20,1
  809398:	11000aa0 	cmpeqi	r4,r2,42
  80939c:	2002521e 	bne	r4,zero,809ce8 <___vfiprintf_internal_r+0x1314>
  8093a0:	113ff404 	addi	r4,r2,-48
  8093a4:	21c002b0 	cmpltui	r7,r4,10
  8093a8:	1829883a 	mov	r20,r3
  8093ac:	0011883a 	mov	r8,zero
  8093b0:	383dca26 	beq	r7,zero,808adc <___vfiprintf_internal_r+0x108>
  8093b4:	400690ba 	slli	r3,r8,2
  8093b8:	a0800007 	ldb	r2,0(r20)
  8093bc:	a5000044 	addi	r20,r20,1
  8093c0:	1a11883a 	add	r8,r3,r8
  8093c4:	4211883a 	add	r8,r8,r8
  8093c8:	4111883a 	add	r8,r8,r4
  8093cc:	113ff404 	addi	r4,r2,-48
  8093d0:	20c002b0 	cmpltui	r3,r4,10
  8093d4:	183ff71e 	bne	r3,zero,8093b4 <___vfiprintf_internal_r+0x9e0>
  8093d8:	003dc006 	br	808adc <___vfiprintf_internal_r+0x108>
  8093dc:	a0800003 	ldbu	r2,0(r20)
  8093e0:	10803fcc 	andi	r2,r2,255
  8093e4:	1080201c 	xori	r2,r2,128
  8093e8:	6b400114 	ori	r13,r13,4
  8093ec:	10bfe004 	addi	r2,r2,-128
  8093f0:	003db906 	br	808ad8 <___vfiprintf_internal_r+0x104>
  8093f4:	a0800007 	ldb	r2,0(r20)
  8093f8:	01400044 	movi	r5,1
  8093fc:	01800ac4 	movi	r6,43
  809400:	003db506 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809404:	d8c00417 	ldw	r3,16(sp)
  809408:	a0800003 	ldbu	r2,0(r20)
  80940c:	1c400017 	ldw	r17,0(r3)
  809410:	18c00104 	addi	r3,r3,4
  809414:	8801b716 	blt	r17,zero,809af4 <___vfiprintf_internal_r+0x1120>
  809418:	d8c00415 	stw	r3,16(sp)
  80941c:	10803fcc 	andi	r2,r2,255
  809420:	1080201c 	xori	r2,r2,128
  809424:	10bfe004 	addi	r2,r2,-128
  809428:	003dab06 	br	808ad8 <___vfiprintf_internal_r+0x104>
  80942c:	a0800007 	ldb	r2,0(r20)
  809430:	6b400054 	ori	r13,r13,1
  809434:	003da806 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809438:	30c03fcc 	andi	r3,r6,255
  80943c:	18c0201c 	xori	r3,r3,128
  809440:	18ffe004 	addi	r3,r3,-128
  809444:	a0800003 	ldbu	r2,0(r20)
  809448:	183ff41e 	bne	r3,zero,80941c <___vfiprintf_internal_r+0xa48>
  80944c:	10803fcc 	andi	r2,r2,255
  809450:	1080201c 	xori	r2,r2,128
  809454:	01400044 	movi	r5,1
  809458:	01800804 	movi	r6,32
  80945c:	10bfe004 	addi	r2,r2,-128
  809460:	003d9d06 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809464:	d8c00417 	ldw	r3,16(sp)
  809468:	d8000945 	stb	zero,37(sp)
  80946c:	05c00044 	movi	r23,1
  809470:	18800017 	ldw	r2,0(r3)
  809474:	18c00104 	addi	r3,r3,4
  809478:	d8c00415 	stw	r3,16(sp)
  80947c:	d8800d05 	stb	r2,52(sp)
  809480:	07000044 	movi	fp,1
  809484:	dcc00d04 	addi	r19,sp,52
  809488:	003e0b06 	br	808cb8 <___vfiprintf_internal_r+0x2e4>
  80948c:	29403fcc 	andi	r5,r5,255
  809490:	2802061e 	bne	r5,zero,809cac <___vfiprintf_internal_r+0x12d8>
  809494:	00c02074 	movhi	r3,129
  809498:	18c3c204 	addi	r3,r3,3848
  80949c:	d8c00515 	stw	r3,20(sp)
  8094a0:	68c0080c 	andi	r3,r13,32
  8094a4:	183f431e 	bne	r3,zero,8091b4 <___vfiprintf_internal_r+0x7e0>
  8094a8:	d9400417 	ldw	r5,16(sp)
  8094ac:	68c0040c 	andi	r3,r13,16
  8094b0:	29000104 	addi	r4,r5,4
  8094b4:	18017f1e 	bne	r3,zero,809ab4 <___vfiprintf_internal_r+0x10e0>
  8094b8:	68c0100c 	andi	r3,r13,64
  8094bc:	1801be26 	beq	r3,zero,809bb8 <___vfiprintf_internal_r+0x11e4>
  8094c0:	d8c00417 	ldw	r3,16(sp)
  8094c4:	0039883a 	mov	fp,zero
  8094c8:	d9000415 	stw	r4,16(sp)
  8094cc:	1dc0000b 	ldhu	r23,0(r3)
  8094d0:	003f3d06 	br	8091c8 <___vfiprintf_internal_r+0x7f4>
  8094d4:	29403fcc 	andi	r5,r5,255
  8094d8:	2801f61e 	bne	r5,zero,809cb4 <___vfiprintf_internal_r+0x12e0>
  8094dc:	d9000417 	ldw	r4,16(sp)
  8094e0:	6880080c 	andi	r2,r13,32
  8094e4:	20c00017 	ldw	r3,0(r4)
  8094e8:	21000104 	addi	r4,r4,4
  8094ec:	10016b1e 	bne	r2,zero,809a9c <___vfiprintf_internal_r+0x10c8>
  8094f0:	6880040c 	andi	r2,r13,16
  8094f4:	1001951e 	bne	r2,zero,809b4c <___vfiprintf_internal_r+0x1178>
  8094f8:	6b40100c 	andi	r13,r13,64
  8094fc:	68019326 	beq	r13,zero,809b4c <___vfiprintf_internal_r+0x1178>
  809500:	d8800117 	ldw	r2,4(sp)
  809504:	d9000415 	stw	r4,16(sp)
  809508:	1880000d 	sth	r2,0(r3)
  80950c:	003d5a06 	br	808a78 <___vfiprintf_internal_r+0xa4>
  809510:	a0800007 	ldb	r2,0(r20)
  809514:	10c01b18 	cmpnei	r3,r2,108
  809518:	18019826 	beq	r3,zero,809b7c <___vfiprintf_internal_r+0x11a8>
  80951c:	6b400414 	ori	r13,r13,16
  809520:	003d6d06 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809524:	01400044 	movi	r5,1
  809528:	0009883a 	mov	r4,zero
  80952c:	900d883a 	mov	r6,r18
  809530:	003ece06 	br	80906c <___vfiprintf_internal_r+0x698>
  809534:	8dc7c83a 	sub	r3,r17,r23
  809538:	00fe190e 	bge	zero,r3,808da0 <___vfiprintf_internal_r+0x3cc>
  80953c:	19c00450 	cmplti	r7,r3,17
  809540:	3801e41e 	bne	r7,zero,809cd4 <___vfiprintf_internal_r+0x1300>
  809544:	01c02074 	movhi	r7,129
  809548:	39c44404 	addi	r7,r7,4368
  80954c:	03400404 	movi	r13,16
  809550:	00000606 	br	80956c <___vfiprintf_internal_r+0xb98>
  809554:	23800084 	addi	r14,r4,2
  809558:	84000204 	addi	r16,r16,8
  80955c:	2809883a 	mov	r4,r5
  809560:	18fffc04 	addi	r3,r3,-16
  809564:	19400448 	cmpgei	r5,r3,17
  809568:	28001c26 	beq	r5,zero,8095dc <___vfiprintf_internal_r+0xc08>
  80956c:	21400044 	addi	r5,r4,1
  809570:	10800404 	addi	r2,r2,16
  809574:	81c00015 	stw	r7,0(r16)
  809578:	83400115 	stw	r13,4(r16)
  80957c:	d8800c15 	stw	r2,48(sp)
  809580:	d9400b15 	stw	r5,44(sp)
  809584:	29800208 	cmpgei	r6,r5,8
  809588:	303ff226 	beq	r6,zero,809554 <___vfiprintf_internal_r+0xb80>
  80958c:	d9800a04 	addi	r6,sp,40
  809590:	a80b883a 	mov	r5,r21
  809594:	b009883a 	mov	r4,r22
  809598:	10007826 	beq	r2,zero,80977c <___vfiprintf_internal_r+0xda8>
  80959c:	d9c00615 	stw	r7,24(sp)
  8095a0:	d8c00315 	stw	r3,12(sp)
  8095a4:	da000215 	stw	r8,8(sp)
  8095a8:	08088c80 	call	8088c8 <__sprint_r.part.0>
  8095ac:	103e1e1e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  8095b0:	d8c00317 	ldw	r3,12(sp)
  8095b4:	d9000b17 	ldw	r4,44(sp)
  8095b8:	d8800c17 	ldw	r2,48(sp)
  8095bc:	18fffc04 	addi	r3,r3,-16
  8095c0:	19400448 	cmpgei	r5,r3,17
  8095c4:	d9c00617 	ldw	r7,24(sp)
  8095c8:	da000217 	ldw	r8,8(sp)
  8095cc:	9021883a 	mov	r16,r18
  8095d0:	23800044 	addi	r14,r4,1
  8095d4:	03400404 	movi	r13,16
  8095d8:	283fe41e 	bne	r5,zero,80956c <___vfiprintf_internal_r+0xb98>
  8095dc:	83400204 	addi	r13,r16,8
  8095e0:	10c5883a 	add	r2,r2,r3
  8095e4:	80c00115 	stw	r3,4(r16)
  8095e8:	81c00015 	stw	r7,0(r16)
  8095ec:	d8800c15 	stw	r2,48(sp)
  8095f0:	db800b15 	stw	r14,44(sp)
  8095f4:	70c00208 	cmpgei	r3,r14,8
  8095f8:	18011326 	beq	r3,zero,809a48 <___vfiprintf_internal_r+0x1074>
  8095fc:	10018826 	beq	r2,zero,809c20 <___vfiprintf_internal_r+0x124c>
  809600:	d9800a04 	addi	r6,sp,40
  809604:	a80b883a 	mov	r5,r21
  809608:	b009883a 	mov	r4,r22
  80960c:	da000215 	stw	r8,8(sp)
  809610:	08088c80 	call	8088c8 <__sprint_r.part.0>
  809614:	103e041e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  809618:	da000217 	ldw	r8,8(sp)
  80961c:	d9000b17 	ldw	r4,44(sp)
  809620:	d8800c17 	ldw	r2,48(sp)
  809624:	4711c83a 	sub	r8,r8,fp
  809628:	d9801904 	addi	r6,sp,100
  80962c:	21400044 	addi	r5,r4,1
  809630:	9021883a 	mov	r16,r18
  809634:	023ddc0e 	bge	zero,r8,808da8 <___vfiprintf_internal_r+0x3d4>
  809638:	40c00450 	cmplti	r3,r8,17
  80963c:	01c02074 	movhi	r7,129
  809640:	1801741e 	bne	r3,zero,809c14 <___vfiprintf_internal_r+0x1240>
  809644:	39c44404 	addi	r7,r7,4368
  809648:	03400404 	movi	r13,16
  80964c:	00000606 	br	809668 <___vfiprintf_internal_r+0xc94>
  809650:	21400084 	addi	r5,r4,2
  809654:	84000204 	addi	r16,r16,8
  809658:	1809883a 	mov	r4,r3
  80965c:	423ffc04 	addi	r8,r8,-16
  809660:	40c00448 	cmpgei	r3,r8,17
  809664:	18001a26 	beq	r3,zero,8096d0 <___vfiprintf_internal_r+0xcfc>
  809668:	20c00044 	addi	r3,r4,1
  80966c:	10800404 	addi	r2,r2,16
  809670:	81c00015 	stw	r7,0(r16)
  809674:	83400115 	stw	r13,4(r16)
  809678:	d8800c15 	stw	r2,48(sp)
  80967c:	d8c00b15 	stw	r3,44(sp)
  809680:	19400208 	cmpgei	r5,r3,8
  809684:	283ff226 	beq	r5,zero,809650 <___vfiprintf_internal_r+0xc7c>
  809688:	d9800a04 	addi	r6,sp,40
  80968c:	a80b883a 	mov	r5,r21
  809690:	b009883a 	mov	r4,r22
  809694:	10001a26 	beq	r2,zero,809700 <___vfiprintf_internal_r+0xd2c>
  809698:	d9c00315 	stw	r7,12(sp)
  80969c:	da000215 	stw	r8,8(sp)
  8096a0:	08088c80 	call	8088c8 <__sprint_r.part.0>
  8096a4:	103de01e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  8096a8:	da000217 	ldw	r8,8(sp)
  8096ac:	d9000b17 	ldw	r4,44(sp)
  8096b0:	d8800c17 	ldw	r2,48(sp)
  8096b4:	423ffc04 	addi	r8,r8,-16
  8096b8:	40c00448 	cmpgei	r3,r8,17
  8096bc:	d9c00317 	ldw	r7,12(sp)
  8096c0:	9021883a 	mov	r16,r18
  8096c4:	21400044 	addi	r5,r4,1
  8096c8:	03400404 	movi	r13,16
  8096cc:	183fe61e 	bne	r3,zero,809668 <___vfiprintf_internal_r+0xc94>
  8096d0:	81000204 	addi	r4,r16,8
  8096d4:	1205883a 	add	r2,r2,r8
  8096d8:	81c00015 	stw	r7,0(r16)
  8096dc:	82000115 	stw	r8,4(r16)
  8096e0:	d8800c15 	stw	r2,48(sp)
  8096e4:	d9400b15 	stw	r5,44(sp)
  8096e8:	28c00208 	cmpgei	r3,r5,8
  8096ec:	1800a41e 	bne	r3,zero,809980 <___vfiprintf_internal_r+0xfac>
  8096f0:	29400044 	addi	r5,r5,1
  8096f4:	21800204 	addi	r6,r4,8
  8096f8:	2021883a 	mov	r16,r4
  8096fc:	003daa06 	br	808da8 <___vfiprintf_internal_r+0x3d4>
  809700:	01400044 	movi	r5,1
  809704:	0009883a 	mov	r4,zero
  809708:	9021883a 	mov	r16,r18
  80970c:	003fd306 	br	80965c <___vfiprintf_internal_r+0xc88>
  809710:	10c00060 	cmpeqi	r3,r2,1
  809714:	1801561e 	bne	r3,zero,809c70 <___vfiprintf_internal_r+0x129c>
  809718:	108000a0 	cmpeqi	r2,r2,2
  80971c:	db400017 	ldw	r13,0(sp)
  809720:	103ef626 	beq	r2,zero,8092fc <___vfiprintf_internal_r+0x928>
  809724:	9027883a 	mov	r19,r18
  809728:	d9000517 	ldw	r4,20(sp)
  80972c:	b88003cc 	andi	r2,r23,15
  809730:	e006973a 	slli	r3,fp,28
  809734:	b82ed13a 	srli	r23,r23,4
  809738:	2085883a 	add	r2,r4,r2
  80973c:	10800003 	ldbu	r2,0(r2)
  809740:	e038d13a 	srli	fp,fp,4
  809744:	1deeb03a 	or	r23,r3,r23
  809748:	98bfffc5 	stb	r2,-1(r19)
  80974c:	bf04b03a 	or	r2,r23,fp
  809750:	9cffffc4 	addi	r19,r19,-1
  809754:	103ff41e 	bne	r2,zero,809728 <___vfiprintf_internal_r+0xd54>
  809758:	94f9c83a 	sub	fp,r18,r19
  80975c:	db400015 	stw	r13,0(sp)
  809760:	003eff06 	br	809360 <___vfiprintf_internal_r+0x98c>
  809764:	d9800a04 	addi	r6,sp,40
  809768:	a80b883a 	mov	r5,r21
  80976c:	b009883a 	mov	r4,r22
  809770:	08088c80 	call	8088c8 <__sprint_r.part.0>
  809774:	103da626 	beq	r2,zero,808e10 <___vfiprintf_internal_r+0x43c>
  809778:	003dab06 	br	808e28 <___vfiprintf_internal_r+0x454>
  80977c:	03800044 	movi	r14,1
  809780:	0009883a 	mov	r4,zero
  809784:	9021883a 	mov	r16,r18
  809788:	003f7506 	br	809560 <___vfiprintf_internal_r+0xb8c>
  80978c:	10009026 	beq	r2,zero,8099d0 <___vfiprintf_internal_r+0xffc>
  809790:	d9800a04 	addi	r6,sp,40
  809794:	a80b883a 	mov	r5,r21
  809798:	b009883a 	mov	r4,r22
  80979c:	da000615 	stw	r8,24(sp)
  8097a0:	db400315 	stw	r13,12(sp)
  8097a4:	db800215 	stw	r14,8(sp)
  8097a8:	08088c80 	call	8088c8 <__sprint_r.part.0>
  8097ac:	103d9e1e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  8097b0:	d9000b17 	ldw	r4,44(sp)
  8097b4:	d8800c17 	ldw	r2,48(sp)
  8097b8:	da000617 	ldw	r8,24(sp)
  8097bc:	db400317 	ldw	r13,12(sp)
  8097c0:	db800217 	ldw	r14,8(sp)
  8097c4:	d9801904 	addi	r6,sp,100
  8097c8:	21400044 	addi	r5,r4,1
  8097cc:	9021883a 	mov	r16,r18
  8097d0:	003d5806 	br	808d34 <___vfiprintf_internal_r+0x360>
  8097d4:	d8800984 	addi	r2,sp,38
  8097d8:	d8801715 	stw	r2,92(sp)
  8097dc:	00800084 	movi	r2,2
  8097e0:	d8801815 	stw	r2,96(sp)
  8097e4:	d9801904 	addi	r6,sp,100
  8097e8:	01400044 	movi	r5,1
  8097ec:	3021883a 	mov	r16,r6
  8097f0:	2809883a 	mov	r4,r5
  8097f4:	21400044 	addi	r5,r4,1
  8097f8:	81800204 	addi	r6,r16,8
  8097fc:	003d6606 	br	808d98 <___vfiprintf_internal_r+0x3c4>
  809800:	db400017 	ldw	r13,0(sp)
  809804:	003eb906 	br	8092ec <___vfiprintf_internal_r+0x918>
  809808:	9027883a 	mov	r19,r18
  80980c:	b809883a 	mov	r4,r23
  809810:	e00b883a 	mov	r5,fp
  809814:	01800284 	movi	r6,10
  809818:	000f883a 	mov	r7,zero
  80981c:	db800315 	stw	r14,12(sp)
  809820:	da000215 	stw	r8,8(sp)
  809824:	db400015 	stw	r13,0(sp)
  809828:	080b57c0 	call	80b57c <__umoddi3>
  80982c:	10800c04 	addi	r2,r2,48
  809830:	b809883a 	mov	r4,r23
  809834:	e00b883a 	mov	r5,fp
  809838:	98bfffc5 	stb	r2,-1(r19)
  80983c:	01800284 	movi	r6,10
  809840:	000f883a 	mov	r7,zero
  809844:	080af5c0 	call	80af5c <__udivdi3>
  809848:	e009883a 	mov	r4,fp
  80984c:	b80b883a 	mov	r5,r23
  809850:	db400017 	ldw	r13,0(sp)
  809854:	da000217 	ldw	r8,8(sp)
  809858:	db800317 	ldw	r14,12(sp)
  80985c:	9cffffc4 	addi	r19,r19,-1
  809860:	102f883a 	mov	r23,r2
  809864:	1839883a 	mov	fp,r3
  809868:	203fe81e 	bne	r4,zero,80980c <___vfiprintf_internal_r+0xe38>
  80986c:	294002a8 	cmpgeui	r5,r5,10
  809870:	283fe61e 	bne	r5,zero,80980c <___vfiprintf_internal_r+0xe38>
  809874:	94f9c83a 	sub	fp,r18,r19
  809878:	003eb906 	br	809360 <___vfiprintf_internal_r+0x98c>
  80987c:	19400450 	cmplti	r5,r3,17
  809880:	01c02074 	movhi	r7,129
  809884:	2801061e 	bne	r5,zero,809ca0 <___vfiprintf_internal_r+0x12cc>
  809888:	39c44804 	addi	r7,r7,4384
  80988c:	03c00404 	movi	r15,16
  809890:	00000706 	br	8098b0 <___vfiprintf_internal_r+0xedc>
  809894:	27c00084 	addi	ra,r4,2
  809898:	84000204 	addi	r16,r16,8
  80989c:	3009883a 	mov	r4,r6
  8098a0:	18fffc04 	addi	r3,r3,-16
  8098a4:	19400448 	cmpgei	r5,r3,17
  8098a8:	28002026 	beq	r5,zero,80992c <___vfiprintf_internal_r+0xf58>
  8098ac:	21800044 	addi	r6,r4,1
  8098b0:	10800404 	addi	r2,r2,16
  8098b4:	81c00015 	stw	r7,0(r16)
  8098b8:	83c00115 	stw	r15,4(r16)
  8098bc:	d8800c15 	stw	r2,48(sp)
  8098c0:	d9800b15 	stw	r6,44(sp)
  8098c4:	31400208 	cmpgei	r5,r6,8
  8098c8:	283ff226 	beq	r5,zero,809894 <___vfiprintf_internal_r+0xec0>
  8098cc:	d9800a04 	addi	r6,sp,40
  8098d0:	a80b883a 	mov	r5,r21
  8098d4:	b009883a 	mov	r4,r22
  8098d8:	10001f26 	beq	r2,zero,809958 <___vfiprintf_internal_r+0xf84>
  8098dc:	d9c00815 	stw	r7,32(sp)
  8098e0:	d8c00715 	stw	r3,28(sp)
  8098e4:	da000615 	stw	r8,24(sp)
  8098e8:	db400315 	stw	r13,12(sp)
  8098ec:	db800215 	stw	r14,8(sp)
  8098f0:	08088c80 	call	8088c8 <__sprint_r.part.0>
  8098f4:	103d4c1e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  8098f8:	d8c00717 	ldw	r3,28(sp)
  8098fc:	d9000b17 	ldw	r4,44(sp)
  809900:	d8800c17 	ldw	r2,48(sp)
  809904:	18fffc04 	addi	r3,r3,-16
  809908:	19400448 	cmpgei	r5,r3,17
  80990c:	d9c00817 	ldw	r7,32(sp)
  809910:	da000617 	ldw	r8,24(sp)
  809914:	db400317 	ldw	r13,12(sp)
  809918:	db800217 	ldw	r14,8(sp)
  80991c:	9021883a 	mov	r16,r18
  809920:	27c00044 	addi	ra,r4,1
  809924:	03c00404 	movi	r15,16
  809928:	283fe01e 	bne	r5,zero,8098ac <___vfiprintf_internal_r+0xed8>
  80992c:	10c5883a 	add	r2,r2,r3
  809930:	80c00115 	stw	r3,4(r16)
  809934:	81c00015 	stw	r7,0(r16)
  809938:	d8800c15 	stw	r2,48(sp)
  80993c:	dfc00b15 	stw	ra,44(sp)
  809940:	f8c00208 	cmpgei	r3,ra,8
  809944:	18002d1e 	bne	r3,zero,8099fc <___vfiprintf_internal_r+0x1028>
  809948:	84000204 	addi	r16,r16,8
  80994c:	f9400044 	addi	r5,ra,1
  809950:	f809883a 	mov	r4,ra
  809954:	003ce706 	br	808cf4 <___vfiprintf_internal_r+0x320>
  809958:	0009883a 	mov	r4,zero
  80995c:	07c00044 	movi	ra,1
  809960:	9021883a 	mov	r16,r18
  809964:	003fce06 	br	8098a0 <___vfiprintf_internal_r+0xecc>
  809968:	8dc0010e 	bge	r17,r23,809970 <___vfiprintf_internal_r+0xf9c>
  80996c:	b823883a 	mov	r17,r23
  809970:	d8800117 	ldw	r2,4(sp)
  809974:	1445883a 	add	r2,r2,r17
  809978:	d8800115 	stw	r2,4(sp)
  80997c:	003d2406 	br	808e10 <___vfiprintf_internal_r+0x43c>
  809980:	10007626 	beq	r2,zero,809b5c <___vfiprintf_internal_r+0x1188>
  809984:	d9800a04 	addi	r6,sp,40
  809988:	a80b883a 	mov	r5,r21
  80998c:	b009883a 	mov	r4,r22
  809990:	08088c80 	call	8088c8 <__sprint_r.part.0>
  809994:	103d241e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  809998:	d9400b17 	ldw	r5,44(sp)
  80999c:	d8800c17 	ldw	r2,48(sp)
  8099a0:	d9801904 	addi	r6,sp,100
  8099a4:	29400044 	addi	r5,r5,1
  8099a8:	9021883a 	mov	r16,r18
  8099ac:	003cfe06 	br	808da8 <___vfiprintf_internal_r+0x3d4>
  8099b0:	d8000b15 	stw	zero,44(sp)
  8099b4:	9021883a 	mov	r16,r18
  8099b8:	003d7606 	br	808f94 <___vfiprintf_internal_r+0x5c0>
  8099bc:	4000ac1e 	bne	r8,zero,809c70 <___vfiprintf_internal_r+0x129c>
  8099c0:	0011883a 	mov	r8,zero
  8099c4:	0039883a 	mov	fp,zero
  8099c8:	9027883a 	mov	r19,r18
  8099cc:	003e6406 	br	809360 <___vfiprintf_internal_r+0x98c>
  8099d0:	7000411e 	bne	r14,zero,809ad8 <___vfiprintf_internal_r+0x1104>
  8099d4:	0009883a 	mov	r4,zero
  8099d8:	d9801904 	addi	r6,sp,100
  8099dc:	01400044 	movi	r5,1
  8099e0:	9021883a 	mov	r16,r18
  8099e4:	003cec06 	br	808d98 <___vfiprintf_internal_r+0x3c4>
  8099e8:	d9801904 	addi	r6,sp,100
  8099ec:	01400044 	movi	r5,1
  8099f0:	0009883a 	mov	r4,zero
  8099f4:	9021883a 	mov	r16,r18
  8099f8:	003ce706 	br	808d98 <___vfiprintf_internal_r+0x3c4>
  8099fc:	10004a26 	beq	r2,zero,809b28 <___vfiprintf_internal_r+0x1154>
  809a00:	d9800a04 	addi	r6,sp,40
  809a04:	a80b883a 	mov	r5,r21
  809a08:	b009883a 	mov	r4,r22
  809a0c:	da000615 	stw	r8,24(sp)
  809a10:	db400315 	stw	r13,12(sp)
  809a14:	db800215 	stw	r14,8(sp)
  809a18:	08088c80 	call	8088c8 <__sprint_r.part.0>
  809a1c:	103d021e 	bne	r2,zero,808e28 <___vfiprintf_internal_r+0x454>
  809a20:	d9000b17 	ldw	r4,44(sp)
  809a24:	d8800c17 	ldw	r2,48(sp)
  809a28:	da000617 	ldw	r8,24(sp)
  809a2c:	db400317 	ldw	r13,12(sp)
  809a30:	db800217 	ldw	r14,8(sp)
  809a34:	9021883a 	mov	r16,r18
  809a38:	21400044 	addi	r5,r4,1
  809a3c:	003cad06 	br	808cf4 <___vfiprintf_internal_r+0x320>
  809a40:	9027883a 	mov	r19,r18
  809a44:	003e4606 	br	809360 <___vfiprintf_internal_r+0x98c>
  809a48:	71400044 	addi	r5,r14,1
  809a4c:	69800204 	addi	r6,r13,8
  809a50:	7009883a 	mov	r4,r14
  809a54:	6821883a 	mov	r16,r13
  809a58:	003cd106 	br	808da0 <___vfiprintf_internal_r+0x3cc>
  809a5c:	25c00017 	ldw	r23,0(r4)
  809a60:	d8c00415 	stw	r3,16(sp)
  809a64:	b839d7fa 	srai	fp,r23,31
  809a68:	e005883a 	mov	r2,fp
  809a6c:	003db406 	br	809140 <___vfiprintf_internal_r+0x76c>
  809a70:	00c00c04 	movi	r3,48
  809a74:	d88009c5 	stb	r2,39(sp)
  809a78:	d8c00985 	stb	r3,38(sp)
  809a7c:	6b400094 	ori	r13,r13,2
  809a80:	00800084 	movi	r2,2
  809a84:	003d2506 	br	808f1c <___vfiprintf_internal_r+0x548>
  809a88:	25c00017 	ldw	r23,0(r4)
  809a8c:	0039883a 	mov	fp,zero
  809a90:	d8c00415 	stw	r3,16(sp)
  809a94:	0005883a 	mov	r2,zero
  809a98:	003d2006 	br	808f1c <___vfiprintf_internal_r+0x548>
  809a9c:	d9400117 	ldw	r5,4(sp)
  809aa0:	d9000415 	stw	r4,16(sp)
  809aa4:	2805d7fa 	srai	r2,r5,31
  809aa8:	19400015 	stw	r5,0(r3)
  809aac:	18800115 	stw	r2,4(r3)
  809ab0:	003bf106 	br	808a78 <___vfiprintf_internal_r+0xa4>
  809ab4:	2dc00017 	ldw	r23,0(r5)
  809ab8:	0039883a 	mov	fp,zero
  809abc:	d9000415 	stw	r4,16(sp)
  809ac0:	003dc106 	br	8091c8 <___vfiprintf_internal_r+0x7f4>
  809ac4:	25c00017 	ldw	r23,0(r4)
  809ac8:	0039883a 	mov	fp,zero
  809acc:	d8c00415 	stw	r3,16(sp)
  809ad0:	00800044 	movi	r2,1
  809ad4:	003d1106 	br	808f1c <___vfiprintf_internal_r+0x548>
  809ad8:	d8800984 	addi	r2,sp,38
  809adc:	d8801715 	stw	r2,92(sp)
  809ae0:	00800084 	movi	r2,2
  809ae4:	d8801815 	stw	r2,96(sp)
  809ae8:	dc001904 	addi	r16,sp,100
  809aec:	01000044 	movi	r4,1
  809af0:	003f4006 	br	8097f4 <___vfiprintf_internal_r+0xe20>
  809af4:	0463c83a 	sub	r17,zero,r17
  809af8:	d8c00415 	stw	r3,16(sp)
  809afc:	003e3806 	br	8093e0 <___vfiprintf_internal_r+0xa0c>
  809b00:	9809883a 	mov	r4,r19
  809b04:	d8c00215 	stw	r3,8(sp)
  809b08:	db400015 	stw	r13,0(sp)
  809b0c:	080138c0 	call	80138c <strlen>
  809b10:	d8c00217 	ldw	r3,8(sp)
  809b14:	db400017 	ldw	r13,0(sp)
  809b18:	1039883a 	mov	fp,r2
  809b1c:	102f883a 	mov	r23,r2
  809b20:	d8c00415 	stw	r3,16(sp)
  809b24:	003c6406 	br	808cb8 <___vfiprintf_internal_r+0x2e4>
  809b28:	d8c00947 	ldb	r3,37(sp)
  809b2c:	18004326 	beq	r3,zero,809c3c <___vfiprintf_internal_r+0x1268>
  809b30:	d8800944 	addi	r2,sp,37
  809b34:	d8801715 	stw	r2,92(sp)
  809b38:	00800044 	movi	r2,1
  809b3c:	d8801815 	stw	r2,96(sp)
  809b40:	d9801904 	addi	r6,sp,100
  809b44:	01400044 	movi	r5,1
  809b48:	003c7606 	br	808d24 <___vfiprintf_internal_r+0x350>
  809b4c:	d8800117 	ldw	r2,4(sp)
  809b50:	18800015 	stw	r2,0(r3)
  809b54:	d9000415 	stw	r4,16(sp)
  809b58:	003bc706 	br	808a78 <___vfiprintf_internal_r+0xa4>
  809b5c:	00c00044 	movi	r3,1
  809b60:	e005883a 	mov	r2,fp
  809b64:	dcc01715 	stw	r19,92(sp)
  809b68:	df001815 	stw	fp,96(sp)
  809b6c:	df000c15 	stw	fp,48(sp)
  809b70:	d8c00b15 	stw	r3,44(sp)
  809b74:	d9801904 	addi	r6,sp,100
  809b78:	003c9a06 	br	808de4 <___vfiprintf_internal_r+0x410>
  809b7c:	a0800043 	ldbu	r2,1(r20)
  809b80:	6b400814 	ori	r13,r13,32
  809b84:	a5000044 	addi	r20,r20,1
  809b88:	10803fcc 	andi	r2,r2,255
  809b8c:	1080201c 	xori	r2,r2,128
  809b90:	10bfe004 	addi	r2,r2,-128
  809b94:	003bd006 	br	808ad8 <___vfiprintf_internal_r+0x104>
  809b98:	408001f0 	cmpltui	r2,r8,7
  809b9c:	4039883a 	mov	fp,r8
  809ba0:	10002426 	beq	r2,zero,809c34 <___vfiprintf_internal_r+0x1260>
  809ba4:	04c02074 	movhi	r19,129
  809ba8:	e02f883a 	mov	r23,fp
  809bac:	d8c00415 	stw	r3,16(sp)
  809bb0:	9cc3c704 	addi	r19,r19,3868
  809bb4:	003c4006 	br	808cb8 <___vfiprintf_internal_r+0x2e4>
  809bb8:	d8c00417 	ldw	r3,16(sp)
  809bbc:	0039883a 	mov	fp,zero
  809bc0:	d9000415 	stw	r4,16(sp)
  809bc4:	1dc00017 	ldw	r23,0(r3)
  809bc8:	003d7f06 	br	8091c8 <___vfiprintf_internal_r+0x7f4>
  809bcc:	d8800417 	ldw	r2,16(sp)
  809bd0:	0039883a 	mov	fp,zero
  809bd4:	d8c00415 	stw	r3,16(sp)
  809bd8:	15c00017 	ldw	r23,0(r2)
  809bdc:	0005883a 	mov	r2,zero
  809be0:	003cce06 	br	808f1c <___vfiprintf_internal_r+0x548>
  809be4:	d8800417 	ldw	r2,16(sp)
  809be8:	d8c00415 	stw	r3,16(sp)
  809bec:	15c00017 	ldw	r23,0(r2)
  809bf0:	b839d7fa 	srai	fp,r23,31
  809bf4:	e005883a 	mov	r2,fp
  809bf8:	003d5106 	br	809140 <___vfiprintf_internal_r+0x76c>
  809bfc:	d8800417 	ldw	r2,16(sp)
  809c00:	0039883a 	mov	fp,zero
  809c04:	d8c00415 	stw	r3,16(sp)
  809c08:	15c00017 	ldw	r23,0(r2)
  809c0c:	00800044 	movi	r2,1
  809c10:	003cc206 	br	808f1c <___vfiprintf_internal_r+0x548>
  809c14:	3009883a 	mov	r4,r6
  809c18:	39c44404 	addi	r7,r7,4368
  809c1c:	003ead06 	br	8096d4 <___vfiprintf_internal_r+0xd00>
  809c20:	d9801904 	addi	r6,sp,100
  809c24:	01400044 	movi	r5,1
  809c28:	0009883a 	mov	r4,zero
  809c2c:	9021883a 	mov	r16,r18
  809c30:	003c5b06 	br	808da0 <___vfiprintf_internal_r+0x3cc>
  809c34:	07000184 	movi	fp,6
  809c38:	003fda06 	br	809ba4 <___vfiprintf_internal_r+0x11d0>
  809c3c:	703ee51e 	bne	r14,zero,8097d4 <___vfiprintf_internal_r+0xe00>
  809c40:	0009883a 	mov	r4,zero
  809c44:	d9801904 	addi	r6,sp,100
  809c48:	01400044 	movi	r5,1
  809c4c:	9021883a 	mov	r16,r18
  809c50:	003c5306 	br	808da0 <___vfiprintf_internal_r+0x3cc>
  809c54:	d9800945 	stb	r6,37(sp)
  809c58:	003c1106 	br	808ca0 <___vfiprintf_internal_r+0x2cc>
  809c5c:	d9800a04 	addi	r6,sp,40
  809c60:	a80b883a 	mov	r5,r21
  809c64:	b009883a 	mov	r4,r22
  809c68:	08088c80 	call	8088c8 <__sprint_r.part.0>
  809c6c:	003c6e06 	br	808e28 <___vfiprintf_internal_r+0x454>
  809c70:	db400017 	ldw	r13,0(sp)
  809c74:	003d3f06 	br	809174 <___vfiprintf_internal_r+0x7a0>
  809c78:	402f883a 	mov	r23,r8
  809c7c:	d8c00415 	stw	r3,16(sp)
  809c80:	4039883a 	mov	fp,r8
  809c84:	003c0c06 	br	808cb8 <___vfiprintf_internal_r+0x2e4>
  809c88:	d9800945 	stb	r6,37(sp)
  809c8c:	003d2406 	br	809120 <___vfiprintf_internal_r+0x74c>
  809c90:	d9800945 	stb	r6,37(sp)
  809c94:	003d4206 	br	8091a0 <___vfiprintf_internal_r+0x7cc>
  809c98:	d9800945 	stb	r6,37(sp)
  809c9c:	003d7a06 	br	809288 <___vfiprintf_internal_r+0x8b4>
  809ca0:	303f883a 	mov	ra,r6
  809ca4:	39c44804 	addi	r7,r7,4384
  809ca8:	003f2006 	br	80992c <___vfiprintf_internal_r+0xf58>
  809cac:	d9800945 	stb	r6,37(sp)
  809cb0:	003df806 	br	809494 <___vfiprintf_internal_r+0xac0>
  809cb4:	d9800945 	stb	r6,37(sp)
  809cb8:	003e0806 	br	8094dc <___vfiprintf_internal_r+0xb08>
  809cbc:	21400044 	addi	r5,r4,1
  809cc0:	39c44804 	addi	r7,r7,4384
  809cc4:	003d0306 	br	8090d4 <___vfiprintf_internal_r+0x700>
  809cc8:	00bfffc4 	movi	r2,-1
  809ccc:	d8800115 	stw	r2,4(sp)
  809cd0:	003c5806 	br	808e34 <___vfiprintf_internal_r+0x460>
  809cd4:	01c02074 	movhi	r7,129
  809cd8:	301b883a 	mov	r13,r6
  809cdc:	281d883a 	mov	r14,r5
  809ce0:	39c44404 	addi	r7,r7,4368
  809ce4:	003e3e06 	br	8095e0 <___vfiprintf_internal_r+0xc0c>
  809ce8:	d8800417 	ldw	r2,16(sp)
  809cec:	12000017 	ldw	r8,0(r2)
  809cf0:	11000104 	addi	r4,r2,4
  809cf4:	4000010e 	bge	r8,zero,809cfc <___vfiprintf_internal_r+0x1328>
  809cf8:	023fffc4 	movi	r8,-1
  809cfc:	a0800043 	ldbu	r2,1(r20)
  809d00:	d9000415 	stw	r4,16(sp)
  809d04:	1829883a 	mov	r20,r3
  809d08:	10803fcc 	andi	r2,r2,255
  809d0c:	1080201c 	xori	r2,r2,128
  809d10:	10bfe004 	addi	r2,r2,-128
  809d14:	003b7006 	br	808ad8 <___vfiprintf_internal_r+0x104>

00809d18 <__vfiprintf_internal>:
  809d18:	00c02074 	movhi	r3,129
  809d1c:	2005883a 	mov	r2,r4
  809d20:	190bf517 	ldw	r4,12244(r3)
  809d24:	300f883a 	mov	r7,r6
  809d28:	280d883a 	mov	r6,r5
  809d2c:	100b883a 	mov	r5,r2
  809d30:	08089d41 	jmpi	8089d4 <___vfiprintf_internal_r>

00809d34 <__sbprintf>:
  809d34:	2880030b 	ldhu	r2,12(r5)
  809d38:	2b001917 	ldw	r12,100(r5)
  809d3c:	2ac0038b 	ldhu	r11,14(r5)
  809d40:	2a800717 	ldw	r10,28(r5)
  809d44:	2a400917 	ldw	r9,36(r5)
  809d48:	defee204 	addi	sp,sp,-1144
  809d4c:	da001a04 	addi	r8,sp,104
  809d50:	00c10004 	movi	r3,1024
  809d54:	dc011a15 	stw	r16,1128(sp)
  809d58:	10bfff4c 	andi	r2,r2,65533
  809d5c:	2821883a 	mov	r16,r5
  809d60:	d80b883a 	mov	r5,sp
  809d64:	dc811c15 	stw	r18,1136(sp)
  809d68:	dc411b15 	stw	r17,1132(sp)
  809d6c:	dfc11d15 	stw	ra,1140(sp)
  809d70:	2025883a 	mov	r18,r4
  809d74:	d880030d 	sth	r2,12(sp)
  809d78:	db001915 	stw	r12,100(sp)
  809d7c:	dac0038d 	sth	r11,14(sp)
  809d80:	da800715 	stw	r10,28(sp)
  809d84:	da400915 	stw	r9,36(sp)
  809d88:	da000015 	stw	r8,0(sp)
  809d8c:	da000415 	stw	r8,16(sp)
  809d90:	d8c00215 	stw	r3,8(sp)
  809d94:	d8c00515 	stw	r3,20(sp)
  809d98:	d8000615 	stw	zero,24(sp)
  809d9c:	08089d40 	call	8089d4 <___vfiprintf_internal_r>
  809da0:	1023883a 	mov	r17,r2
  809da4:	10000d0e 	bge	r2,zero,809ddc <__sbprintf+0xa8>
  809da8:	d880030b 	ldhu	r2,12(sp)
  809dac:	1080100c 	andi	r2,r2,64
  809db0:	10000326 	beq	r2,zero,809dc0 <__sbprintf+0x8c>
  809db4:	8080030b 	ldhu	r2,12(r16)
  809db8:	10801014 	ori	r2,r2,64
  809dbc:	8080030d 	sth	r2,12(r16)
  809dc0:	8805883a 	mov	r2,r17
  809dc4:	dfc11d17 	ldw	ra,1140(sp)
  809dc8:	dc811c17 	ldw	r18,1136(sp)
  809dcc:	dc411b17 	ldw	r17,1132(sp)
  809dd0:	dc011a17 	ldw	r16,1128(sp)
  809dd4:	dec11e04 	addi	sp,sp,1144
  809dd8:	f800283a 	ret
  809ddc:	d80b883a 	mov	r5,sp
  809de0:	9009883a 	mov	r4,r18
  809de4:	08052f80 	call	8052f8 <_fflush_r>
  809de8:	103fef26 	beq	r2,zero,809da8 <__sbprintf+0x74>
  809dec:	047fffc4 	movi	r17,-1
  809df0:	003fed06 	br	809da8 <__sbprintf+0x74>

00809df4 <_write_r>:
  809df4:	2807883a 	mov	r3,r5
  809df8:	defffe04 	addi	sp,sp,-8
  809dfc:	dc000015 	stw	r16,0(sp)
  809e00:	300b883a 	mov	r5,r6
  809e04:	00802074 	movhi	r2,129
  809e08:	380d883a 	mov	r6,r7
  809e0c:	2021883a 	mov	r16,r4
  809e10:	1809883a 	mov	r4,r3
  809e14:	dfc00115 	stw	ra,4(sp)
  809e18:	1012fb15 	stw	zero,19436(r2)
  809e1c:	080eef00 	call	80eef0 <write>
  809e20:	10ffffd8 	cmpnei	r3,r2,-1
  809e24:	18000426 	beq	r3,zero,809e38 <_write_r+0x44>
  809e28:	dfc00117 	ldw	ra,4(sp)
  809e2c:	dc000017 	ldw	r16,0(sp)
  809e30:	dec00204 	addi	sp,sp,8
  809e34:	f800283a 	ret
  809e38:	00c02074 	movhi	r3,129
  809e3c:	18d2fb17 	ldw	r3,19436(r3)
  809e40:	183ff926 	beq	r3,zero,809e28 <_write_r+0x34>
  809e44:	80c00015 	stw	r3,0(r16)
  809e48:	dfc00117 	ldw	ra,4(sp)
  809e4c:	dc000017 	ldw	r16,0(sp)
  809e50:	dec00204 	addi	sp,sp,8
  809e54:	f800283a 	ret

00809e58 <_close_r>:
  809e58:	defffe04 	addi	sp,sp,-8
  809e5c:	dc000015 	stw	r16,0(sp)
  809e60:	00802074 	movhi	r2,129
  809e64:	2021883a 	mov	r16,r4
  809e68:	2809883a 	mov	r4,r5
  809e6c:	dfc00115 	stw	ra,4(sp)
  809e70:	1012fb15 	stw	zero,19436(r2)
  809e74:	080e41c0 	call	80e41c <close>
  809e78:	10ffffd8 	cmpnei	r3,r2,-1
  809e7c:	18000426 	beq	r3,zero,809e90 <_close_r+0x38>
  809e80:	dfc00117 	ldw	ra,4(sp)
  809e84:	dc000017 	ldw	r16,0(sp)
  809e88:	dec00204 	addi	sp,sp,8
  809e8c:	f800283a 	ret
  809e90:	00c02074 	movhi	r3,129
  809e94:	18d2fb17 	ldw	r3,19436(r3)
  809e98:	183ff926 	beq	r3,zero,809e80 <_close_r+0x28>
  809e9c:	80c00015 	stw	r3,0(r16)
  809ea0:	dfc00117 	ldw	ra,4(sp)
  809ea4:	dc000017 	ldw	r16,0(sp)
  809ea8:	dec00204 	addi	sp,sp,8
  809eac:	f800283a 	ret

00809eb0 <__assert_func>:
  809eb0:	00802074 	movhi	r2,129
  809eb4:	120bf517 	ldw	r8,12244(r2)
  809eb8:	defffc04 	addi	sp,sp,-16
  809ebc:	3807883a 	mov	r3,r7
  809ec0:	3005883a 	mov	r2,r6
  809ec4:	dfc00315 	stw	ra,12(sp)
  809ec8:	42400317 	ldw	r9,12(r8)
  809ecc:	200f883a 	mov	r7,r4
  809ed0:	2811883a 	mov	r8,r5
  809ed4:	180d883a 	mov	r6,r3
  809ed8:	10000a26 	beq	r2,zero,809f04 <__assert_func+0x54>
  809edc:	00c02074 	movhi	r3,129
  809ee0:	18c44c04 	addi	r3,r3,4400
  809ee4:	01402074 	movhi	r5,129
  809ee8:	29445004 	addi	r5,r5,4416
  809eec:	4809883a 	mov	r4,r9
  809ef0:	d8c00115 	stw	r3,4(sp)
  809ef4:	da000015 	stw	r8,0(sp)
  809ef8:	d8800215 	stw	r2,8(sp)
  809efc:	080a1ac0 	call	80a1ac <fiprintf>
  809f00:	080a9f40 	call	80a9f4 <abort>
  809f04:	00c02074 	movhi	r3,129
  809f08:	18c44f04 	addi	r3,r3,4412
  809f0c:	1805883a 	mov	r2,r3
  809f10:	003ff406 	br	809ee4 <__assert_func+0x34>

00809f14 <__assert>:
  809f14:	deffff04 	addi	sp,sp,-4
  809f18:	300f883a 	mov	r7,r6
  809f1c:	000d883a 	mov	r6,zero
  809f20:	dfc00015 	stw	ra,0(sp)
  809f24:	0809eb00 	call	809eb0 <__assert_func>

00809f28 <_calloc_r>:
  809f28:	defffe04 	addi	sp,sp,-8
  809f2c:	dc000015 	stw	r16,0(sp)
  809f30:	2021883a 	mov	r16,r4
  809f34:	2809883a 	mov	r4,r5
  809f38:	300b883a 	mov	r5,r6
  809f3c:	dfc00115 	stw	ra,4(sp)
  809f40:	08012200 	call	801220 <__mulsi3>
  809f44:	8009883a 	mov	r4,r16
  809f48:	100b883a 	mov	r5,r2
  809f4c:	08064100 	call	806410 <_malloc_r>
  809f50:	1009883a 	mov	r4,r2
  809f54:	10000c26 	beq	r2,zero,809f88 <_calloc_r+0x60>
  809f58:	11bfff17 	ldw	r6,-4(r2)
  809f5c:	00bfff04 	movi	r2,-4
  809f60:	308c703a 	and	r6,r6,r2
  809f64:	31bfff04 	addi	r6,r6,-4
  809f68:	30800968 	cmpgeui	r2,r6,37
  809f6c:	1000151e 	bne	r2,zero,809fc4 <_calloc_r+0x9c>
  809f70:	30800530 	cmpltui	r2,r6,20
  809f74:	10000926 	beq	r2,zero,809f9c <_calloc_r+0x74>
  809f78:	2005883a 	mov	r2,r4
  809f7c:	10000015 	stw	zero,0(r2)
  809f80:	10000115 	stw	zero,4(r2)
  809f84:	10000215 	stw	zero,8(r2)
  809f88:	2005883a 	mov	r2,r4
  809f8c:	dfc00117 	ldw	ra,4(sp)
  809f90:	dc000017 	ldw	r16,0(sp)
  809f94:	dec00204 	addi	sp,sp,8
  809f98:	f800283a 	ret
  809f9c:	20000015 	stw	zero,0(r4)
  809fa0:	20000115 	stw	zero,4(r4)
  809fa4:	30800728 	cmpgeui	r2,r6,28
  809fa8:	10000a26 	beq	r2,zero,809fd4 <_calloc_r+0xac>
  809fac:	20000215 	stw	zero,8(r4)
  809fb0:	20000315 	stw	zero,12(r4)
  809fb4:	31800920 	cmpeqi	r6,r6,36
  809fb8:	3000081e 	bne	r6,zero,809fdc <_calloc_r+0xb4>
  809fbc:	20800404 	addi	r2,r4,16
  809fc0:	003fee06 	br	809f7c <_calloc_r+0x54>
  809fc4:	000b883a 	mov	r5,zero
  809fc8:	0806eec0 	call	806eec <memset>
  809fcc:	1009883a 	mov	r4,r2
  809fd0:	003fed06 	br	809f88 <_calloc_r+0x60>
  809fd4:	20800204 	addi	r2,r4,8
  809fd8:	003fe806 	br	809f7c <_calloc_r+0x54>
  809fdc:	20000415 	stw	zero,16(r4)
  809fe0:	20800604 	addi	r2,r4,24
  809fe4:	20000515 	stw	zero,20(r4)
  809fe8:	003fe406 	br	809f7c <_calloc_r+0x54>

00809fec <_fclose_r.part.0>:
  809fec:	defffc04 	addi	sp,sp,-16
  809ff0:	dc800215 	stw	r18,8(sp)
  809ff4:	dc400115 	stw	r17,4(sp)
  809ff8:	dc000015 	stw	r16,0(sp)
  809ffc:	dfc00315 	stw	ra,12(sp)
  80a000:	2821883a 	mov	r16,r5
  80a004:	2023883a 	mov	r17,r4
  80a008:	08050d00 	call	8050d0 <__sflush_r>
  80a00c:	80c00b17 	ldw	r3,44(r16)
  80a010:	1025883a 	mov	r18,r2
  80a014:	18000426 	beq	r3,zero,80a028 <_fclose_r.part.0+0x3c>
  80a018:	81400717 	ldw	r5,28(r16)
  80a01c:	8809883a 	mov	r4,r17
  80a020:	183ee83a 	callr	r3
  80a024:	10001916 	blt	r2,zero,80a08c <_fclose_r.part.0+0xa0>
  80a028:	8080030b 	ldhu	r2,12(r16)
  80a02c:	1080200c 	andi	r2,r2,128
  80a030:	10001a1e 	bne	r2,zero,80a09c <_fclose_r.part.0+0xb0>
  80a034:	81400c17 	ldw	r5,48(r16)
  80a038:	28000526 	beq	r5,zero,80a050 <_fclose_r.part.0+0x64>
  80a03c:	80801004 	addi	r2,r16,64
  80a040:	28800226 	beq	r5,r2,80a04c <_fclose_r.part.0+0x60>
  80a044:	8809883a 	mov	r4,r17
  80a048:	08058a40 	call	8058a4 <_free_r>
  80a04c:	80000c15 	stw	zero,48(r16)
  80a050:	81401117 	ldw	r5,68(r16)
  80a054:	28000326 	beq	r5,zero,80a064 <_fclose_r.part.0+0x78>
  80a058:	8809883a 	mov	r4,r17
  80a05c:	08058a40 	call	8058a4 <_free_r>
  80a060:	80001115 	stw	zero,68(r16)
  80a064:	08057500 	call	805750 <__sfp_lock_acquire>
  80a068:	8000030d 	sth	zero,12(r16)
  80a06c:	08057540 	call	805754 <__sfp_lock_release>
  80a070:	9005883a 	mov	r2,r18
  80a074:	dfc00317 	ldw	ra,12(sp)
  80a078:	dc800217 	ldw	r18,8(sp)
  80a07c:	dc400117 	ldw	r17,4(sp)
  80a080:	dc000017 	ldw	r16,0(sp)
  80a084:	dec00404 	addi	sp,sp,16
  80a088:	f800283a 	ret
  80a08c:	8080030b 	ldhu	r2,12(r16)
  80a090:	04bfffc4 	movi	r18,-1
  80a094:	1080200c 	andi	r2,r2,128
  80a098:	103fe626 	beq	r2,zero,80a034 <_fclose_r.part.0+0x48>
  80a09c:	81400417 	ldw	r5,16(r16)
  80a0a0:	8809883a 	mov	r4,r17
  80a0a4:	08058a40 	call	8058a4 <_free_r>
  80a0a8:	003fe206 	br	80a034 <_fclose_r.part.0+0x48>

0080a0ac <_fclose_r>:
  80a0ac:	28001926 	beq	r5,zero,80a114 <_fclose_r+0x68>
  80a0b0:	defffd04 	addi	sp,sp,-12
  80a0b4:	dc000115 	stw	r16,4(sp)
  80a0b8:	dfc00215 	stw	ra,8(sp)
  80a0bc:	2021883a 	mov	r16,r4
  80a0c0:	20000226 	beq	r4,zero,80a0cc <_fclose_r+0x20>
  80a0c4:	20800e17 	ldw	r2,56(r4)
  80a0c8:	10000c26 	beq	r2,zero,80a0fc <_fclose_r+0x50>
  80a0cc:	2880030f 	ldh	r2,12(r5)
  80a0d0:	1000051e 	bne	r2,zero,80a0e8 <_fclose_r+0x3c>
  80a0d4:	0005883a 	mov	r2,zero
  80a0d8:	dfc00217 	ldw	ra,8(sp)
  80a0dc:	dc000117 	ldw	r16,4(sp)
  80a0e0:	dec00304 	addi	sp,sp,12
  80a0e4:	f800283a 	ret
  80a0e8:	8009883a 	mov	r4,r16
  80a0ec:	dfc00217 	ldw	ra,8(sp)
  80a0f0:	dc000117 	ldw	r16,4(sp)
  80a0f4:	dec00304 	addi	sp,sp,12
  80a0f8:	0809fec1 	jmpi	809fec <_fclose_r.part.0>
  80a0fc:	d9400015 	stw	r5,0(sp)
  80a100:	08057400 	call	805740 <__sinit>
  80a104:	d9400017 	ldw	r5,0(sp)
  80a108:	2880030f 	ldh	r2,12(r5)
  80a10c:	103ff126 	beq	r2,zero,80a0d4 <_fclose_r+0x28>
  80a110:	003ff506 	br	80a0e8 <_fclose_r+0x3c>
  80a114:	0005883a 	mov	r2,zero
  80a118:	f800283a 	ret

0080a11c <fclose>:
  80a11c:	20000826 	beq	r4,zero,80a140 <fclose+0x24>
  80a120:	00802074 	movhi	r2,129
  80a124:	200b883a 	mov	r5,r4
  80a128:	110bf517 	ldw	r4,12244(r2)
  80a12c:	20000226 	beq	r4,zero,80a138 <fclose+0x1c>
  80a130:	20800e17 	ldw	r2,56(r4)
  80a134:	10000526 	beq	r2,zero,80a14c <fclose+0x30>
  80a138:	2880030f 	ldh	r2,12(r5)
  80a13c:	1000021e 	bne	r2,zero,80a148 <fclose+0x2c>
  80a140:	0005883a 	mov	r2,zero
  80a144:	f800283a 	ret
  80a148:	0809fec1 	jmpi	809fec <_fclose_r.part.0>
  80a14c:	defffd04 	addi	sp,sp,-12
  80a150:	d9400115 	stw	r5,4(sp)
  80a154:	d9000015 	stw	r4,0(sp)
  80a158:	dfc00215 	stw	ra,8(sp)
  80a15c:	08057400 	call	805740 <__sinit>
  80a160:	d9400117 	ldw	r5,4(sp)
  80a164:	d9000017 	ldw	r4,0(sp)
  80a168:	2880030f 	ldh	r2,12(r5)
  80a16c:	10000326 	beq	r2,zero,80a17c <fclose+0x60>
  80a170:	dfc00217 	ldw	ra,8(sp)
  80a174:	dec00304 	addi	sp,sp,12
  80a178:	0809fec1 	jmpi	809fec <_fclose_r.part.0>
  80a17c:	0005883a 	mov	r2,zero
  80a180:	dfc00217 	ldw	ra,8(sp)
  80a184:	dec00304 	addi	sp,sp,12
  80a188:	f800283a 	ret

0080a18c <_fiprintf_r>:
  80a18c:	defffe04 	addi	sp,sp,-8
  80a190:	dfc00015 	stw	ra,0(sp)
  80a194:	d9c00115 	stw	r7,4(sp)
  80a198:	d9c00104 	addi	r7,sp,4
  80a19c:	080a7600 	call	80a760 <_vfiprintf_r>
  80a1a0:	dfc00017 	ldw	ra,0(sp)
  80a1a4:	dec00204 	addi	sp,sp,8
  80a1a8:	f800283a 	ret

0080a1ac <fiprintf>:
  80a1ac:	defffd04 	addi	sp,sp,-12
  80a1b0:	2005883a 	mov	r2,r4
  80a1b4:	dfc00015 	stw	ra,0(sp)
  80a1b8:	d9800115 	stw	r6,4(sp)
  80a1bc:	d9c00215 	stw	r7,8(sp)
  80a1c0:	00c02074 	movhi	r3,129
  80a1c4:	190bf517 	ldw	r4,12244(r3)
  80a1c8:	280d883a 	mov	r6,r5
  80a1cc:	d9c00104 	addi	r7,sp,4
  80a1d0:	100b883a 	mov	r5,r2
  80a1d4:	080a7600 	call	80a760 <_vfiprintf_r>
  80a1d8:	dfc00017 	ldw	ra,0(sp)
  80a1dc:	dec00304 	addi	sp,sp,12
  80a1e0:	f800283a 	ret

0080a1e4 <__fputwc>:
  80a1e4:	defff904 	addi	sp,sp,-28
  80a1e8:	dcc00415 	stw	r19,16(sp)
  80a1ec:	dc800315 	stw	r18,12(sp)
  80a1f0:	dc000115 	stw	r16,4(sp)
  80a1f4:	dfc00615 	stw	ra,24(sp)
  80a1f8:	dd000515 	stw	r20,20(sp)
  80a1fc:	dc400215 	stw	r17,8(sp)
  80a200:	2025883a 	mov	r18,r4
  80a204:	2827883a 	mov	r19,r5
  80a208:	3021883a 	mov	r16,r6
  80a20c:	080a5100 	call	80a510 <__locale_mb_cur_max>
  80a210:	10800058 	cmpnei	r2,r2,1
  80a214:	1000071e 	bne	r2,zero,80a234 <__fputwc+0x50>
  80a218:	98bfffc4 	addi	r2,r19,-1
  80a21c:	10803fe8 	cmpgeui	r2,r2,255
  80a220:	1000041e 	bne	r2,zero,80a234 <__fputwc+0x50>
  80a224:	980b883a 	mov	r5,r19
  80a228:	dcc000c5 	stb	r19,3(sp)
  80a22c:	05000044 	movi	r20,1
  80a230:	00000a06 	br	80a25c <__fputwc+0x78>
  80a234:	81c01704 	addi	r7,r16,92
  80a238:	980d883a 	mov	r6,r19
  80a23c:	d94000c4 	addi	r5,sp,3
  80a240:	9009883a 	mov	r4,r18
  80a244:	080a8c40 	call	80a8c4 <_wcrtomb_r>
  80a248:	1029883a 	mov	r20,r2
  80a24c:	10bfffd8 	cmpnei	r2,r2,-1
  80a250:	10003926 	beq	r2,zero,80a338 <__fputwc+0x154>
  80a254:	a0001f26 	beq	r20,zero,80a2d4 <__fputwc+0xf0>
  80a258:	d94000c3 	ldbu	r5,3(sp)
  80a25c:	0023883a 	mov	r17,zero
  80a260:	00000a06 	br	80a28c <__fputwc+0xa8>
  80a264:	80800017 	ldw	r2,0(r16)
  80a268:	11400005 	stb	r5,0(r2)
  80a26c:	80c00017 	ldw	r3,0(r16)
  80a270:	18c00044 	addi	r3,r3,1
  80a274:	80c00015 	stw	r3,0(r16)
  80a278:	8c400044 	addi	r17,r17,1
  80a27c:	d88000c4 	addi	r2,sp,3
  80a280:	1447883a 	add	r3,r2,r17
  80a284:	8d00132e 	bgeu	r17,r20,80a2d4 <__fputwc+0xf0>
  80a288:	19400003 	ldbu	r5,0(r3)
  80a28c:	80c00217 	ldw	r3,8(r16)
  80a290:	18ffffc4 	addi	r3,r3,-1
  80a294:	80c00215 	stw	r3,8(r16)
  80a298:	183ff20e 	bge	r3,zero,80a264 <__fputwc+0x80>
  80a29c:	80800617 	ldw	r2,24(r16)
  80a2a0:	18801616 	blt	r3,r2,80a2fc <__fputwc+0x118>
  80a2a4:	80800017 	ldw	r2,0(r16)
  80a2a8:	11400005 	stb	r5,0(r2)
  80a2ac:	80800017 	ldw	r2,0(r16)
  80a2b0:	10c00003 	ldbu	r3,0(r2)
  80a2b4:	10800044 	addi	r2,r2,1
  80a2b8:	18c002a0 	cmpeqi	r3,r3,10
  80a2bc:	1800171e 	bne	r3,zero,80a31c <__fputwc+0x138>
  80a2c0:	80800015 	stw	r2,0(r16)
  80a2c4:	8c400044 	addi	r17,r17,1
  80a2c8:	d88000c4 	addi	r2,sp,3
  80a2cc:	1447883a 	add	r3,r2,r17
  80a2d0:	8d3fed36 	bltu	r17,r20,80a288 <__fputwc+0xa4>
  80a2d4:	9829883a 	mov	r20,r19
  80a2d8:	a005883a 	mov	r2,r20
  80a2dc:	dfc00617 	ldw	ra,24(sp)
  80a2e0:	dd000517 	ldw	r20,20(sp)
  80a2e4:	dcc00417 	ldw	r19,16(sp)
  80a2e8:	dc800317 	ldw	r18,12(sp)
  80a2ec:	dc400217 	ldw	r17,8(sp)
  80a2f0:	dc000117 	ldw	r16,4(sp)
  80a2f4:	dec00704 	addi	sp,sp,28
  80a2f8:	f800283a 	ret
  80a2fc:	29403fcc 	andi	r5,r5,255
  80a300:	800d883a 	mov	r6,r16
  80a304:	9009883a 	mov	r4,r18
  80a308:	080a7640 	call	80a764 <__swbuf_r>
  80a30c:	10bfffe0 	cmpeqi	r2,r2,-1
  80a310:	103fd926 	beq	r2,zero,80a278 <__fputwc+0x94>
  80a314:	053fffc4 	movi	r20,-1
  80a318:	003fef06 	br	80a2d8 <__fputwc+0xf4>
  80a31c:	800d883a 	mov	r6,r16
  80a320:	01400284 	movi	r5,10
  80a324:	9009883a 	mov	r4,r18
  80a328:	080a7640 	call	80a764 <__swbuf_r>
  80a32c:	10bfffe0 	cmpeqi	r2,r2,-1
  80a330:	103fd126 	beq	r2,zero,80a278 <__fputwc+0x94>
  80a334:	003ff706 	br	80a314 <__fputwc+0x130>
  80a338:	8080030b 	ldhu	r2,12(r16)
  80a33c:	10801014 	ori	r2,r2,64
  80a340:	8080030d 	sth	r2,12(r16)
  80a344:	003fe406 	br	80a2d8 <__fputwc+0xf4>

0080a348 <_fputwc_r>:
  80a348:	3080030b 	ldhu	r2,12(r6)
  80a34c:	10c8000c 	andi	r3,r2,8192
  80a350:	1800051e 	bne	r3,zero,80a368 <_fputwc_r+0x20>
  80a354:	30c01917 	ldw	r3,100(r6)
  80a358:	10880014 	ori	r2,r2,8192
  80a35c:	3080030d 	sth	r2,12(r6)
  80a360:	18880014 	ori	r2,r3,8192
  80a364:	30801915 	stw	r2,100(r6)
  80a368:	080a1e41 	jmpi	80a1e4 <__fputwc>

0080a36c <fputwc>:
  80a36c:	defffc04 	addi	sp,sp,-16
  80a370:	00802074 	movhi	r2,129
  80a374:	dc000215 	stw	r16,8(sp)
  80a378:	140bf517 	ldw	r16,12244(r2)
  80a37c:	dfc00315 	stw	ra,12(sp)
  80a380:	280d883a 	mov	r6,r5
  80a384:	200b883a 	mov	r5,r4
  80a388:	80000226 	beq	r16,zero,80a394 <fputwc+0x28>
  80a38c:	80800e17 	ldw	r2,56(r16)
  80a390:	10000d26 	beq	r2,zero,80a3c8 <fputwc+0x5c>
  80a394:	3080030b 	ldhu	r2,12(r6)
  80a398:	10c8000c 	andi	r3,r2,8192
  80a39c:	1800051e 	bne	r3,zero,80a3b4 <fputwc+0x48>
  80a3a0:	30c01917 	ldw	r3,100(r6)
  80a3a4:	10880014 	ori	r2,r2,8192
  80a3a8:	3080030d 	sth	r2,12(r6)
  80a3ac:	18880014 	ori	r2,r3,8192
  80a3b0:	30801915 	stw	r2,100(r6)
  80a3b4:	8009883a 	mov	r4,r16
  80a3b8:	dfc00317 	ldw	ra,12(sp)
  80a3bc:	dc000217 	ldw	r16,8(sp)
  80a3c0:	dec00404 	addi	sp,sp,16
  80a3c4:	080a1e41 	jmpi	80a1e4 <__fputwc>
  80a3c8:	d9000015 	stw	r4,0(sp)
  80a3cc:	8009883a 	mov	r4,r16
  80a3d0:	d9800115 	stw	r6,4(sp)
  80a3d4:	08057400 	call	805740 <__sinit>
  80a3d8:	d9800117 	ldw	r6,4(sp)
  80a3dc:	d9400017 	ldw	r5,0(sp)
  80a3e0:	003fec06 	br	80a394 <fputwc+0x28>

0080a3e4 <_fstat_r>:
  80a3e4:	2807883a 	mov	r3,r5
  80a3e8:	defffe04 	addi	sp,sp,-8
  80a3ec:	dc000015 	stw	r16,0(sp)
  80a3f0:	00802074 	movhi	r2,129
  80a3f4:	300b883a 	mov	r5,r6
  80a3f8:	2021883a 	mov	r16,r4
  80a3fc:	1809883a 	mov	r4,r3
  80a400:	dfc00115 	stw	ra,4(sp)
  80a404:	1012fb15 	stw	zero,19436(r2)
  80a408:	080e5980 	call	80e598 <fstat>
  80a40c:	10ffffd8 	cmpnei	r3,r2,-1
  80a410:	18000426 	beq	r3,zero,80a424 <_fstat_r+0x40>
  80a414:	dfc00117 	ldw	ra,4(sp)
  80a418:	dc000017 	ldw	r16,0(sp)
  80a41c:	dec00204 	addi	sp,sp,8
  80a420:	f800283a 	ret
  80a424:	00c02074 	movhi	r3,129
  80a428:	18d2fb17 	ldw	r3,19436(r3)
  80a42c:	183ff926 	beq	r3,zero,80a414 <_fstat_r+0x30>
  80a430:	80c00015 	stw	r3,0(r16)
  80a434:	dfc00117 	ldw	ra,4(sp)
  80a438:	dc000017 	ldw	r16,0(sp)
  80a43c:	dec00204 	addi	sp,sp,8
  80a440:	f800283a 	ret

0080a444 <_isatty_r>:
  80a444:	defffe04 	addi	sp,sp,-8
  80a448:	dc000015 	stw	r16,0(sp)
  80a44c:	00802074 	movhi	r2,129
  80a450:	2021883a 	mov	r16,r4
  80a454:	2809883a 	mov	r4,r5
  80a458:	dfc00115 	stw	ra,4(sp)
  80a45c:	1012fb15 	stw	zero,19436(r2)
  80a460:	080e6b00 	call	80e6b0 <isatty>
  80a464:	10ffffd8 	cmpnei	r3,r2,-1
  80a468:	18000426 	beq	r3,zero,80a47c <_isatty_r+0x38>
  80a46c:	dfc00117 	ldw	ra,4(sp)
  80a470:	dc000017 	ldw	r16,0(sp)
  80a474:	dec00204 	addi	sp,sp,8
  80a478:	f800283a 	ret
  80a47c:	00c02074 	movhi	r3,129
  80a480:	18d2fb17 	ldw	r3,19436(r3)
  80a484:	183ff926 	beq	r3,zero,80a46c <_isatty_r+0x28>
  80a488:	80c00015 	stw	r3,0(r16)
  80a48c:	dfc00117 	ldw	ra,4(sp)
  80a490:	dc000017 	ldw	r16,0(sp)
  80a494:	dec00204 	addi	sp,sp,8
  80a498:	f800283a 	ret

0080a49c <_setlocale_r>:
  80a49c:	30001626 	beq	r6,zero,80a4f8 <_setlocale_r+0x5c>
  80a4a0:	01402074 	movhi	r5,129
  80a4a4:	defffe04 	addi	sp,sp,-8
  80a4a8:	29445d04 	addi	r5,r5,4468
  80a4ac:	3009883a 	mov	r4,r6
  80a4b0:	dc000015 	stw	r16,0(sp)
  80a4b4:	dfc00115 	stw	ra,4(sp)
  80a4b8:	3021883a 	mov	r16,r6
  80a4bc:	080a6a80 	call	80a6a8 <strcmp>
  80a4c0:	1000061e 	bne	r2,zero,80a4dc <_setlocale_r+0x40>
  80a4c4:	00802074 	movhi	r2,129
  80a4c8:	10845c04 	addi	r2,r2,4464
  80a4cc:	dfc00117 	ldw	ra,4(sp)
  80a4d0:	dc000017 	ldw	r16,0(sp)
  80a4d4:	dec00204 	addi	sp,sp,8
  80a4d8:	f800283a 	ret
  80a4dc:	80800003 	ldbu	r2,0(r16)
  80a4e0:	10bfef44 	addi	r2,r2,-67
  80a4e4:	10000726 	beq	r2,zero,80a504 <_setlocale_r+0x68>
  80a4e8:	80800003 	ldbu	r2,0(r16)
  80a4ec:	103ff526 	beq	r2,zero,80a4c4 <_setlocale_r+0x28>
  80a4f0:	0005883a 	mov	r2,zero
  80a4f4:	003ff506 	br	80a4cc <_setlocale_r+0x30>
  80a4f8:	00802074 	movhi	r2,129
  80a4fc:	10845c04 	addi	r2,r2,4464
  80a500:	f800283a 	ret
  80a504:	80800043 	ldbu	r2,1(r16)
  80a508:	103fee26 	beq	r2,zero,80a4c4 <_setlocale_r+0x28>
  80a50c:	003ff606 	br	80a4e8 <_setlocale_r+0x4c>

0080a510 <__locale_mb_cur_max>:
  80a510:	00802074 	movhi	r2,129
  80a514:	10876107 	ldb	r2,7556(r2)
  80a518:	f800283a 	ret

0080a51c <setlocale>:
  80a51c:	28001626 	beq	r5,zero,80a578 <setlocale+0x5c>
  80a520:	defffe04 	addi	sp,sp,-8
  80a524:	dc000015 	stw	r16,0(sp)
  80a528:	2821883a 	mov	r16,r5
  80a52c:	01402074 	movhi	r5,129
  80a530:	29445d04 	addi	r5,r5,4468
  80a534:	8009883a 	mov	r4,r16
  80a538:	dfc00115 	stw	ra,4(sp)
  80a53c:	080a6a80 	call	80a6a8 <strcmp>
  80a540:	1000061e 	bne	r2,zero,80a55c <setlocale+0x40>
  80a544:	00802074 	movhi	r2,129
  80a548:	10845c04 	addi	r2,r2,4464
  80a54c:	dfc00117 	ldw	ra,4(sp)
  80a550:	dc000017 	ldw	r16,0(sp)
  80a554:	dec00204 	addi	sp,sp,8
  80a558:	f800283a 	ret
  80a55c:	80800003 	ldbu	r2,0(r16)
  80a560:	10bfef44 	addi	r2,r2,-67
  80a564:	10000726 	beq	r2,zero,80a584 <setlocale+0x68>
  80a568:	80800003 	ldbu	r2,0(r16)
  80a56c:	103ff526 	beq	r2,zero,80a544 <setlocale+0x28>
  80a570:	0005883a 	mov	r2,zero
  80a574:	003ff506 	br	80a54c <setlocale+0x30>
  80a578:	00802074 	movhi	r2,129
  80a57c:	10845c04 	addi	r2,r2,4464
  80a580:	f800283a 	ret
  80a584:	80800043 	ldbu	r2,1(r16)
  80a588:	103fee26 	beq	r2,zero,80a544 <setlocale+0x28>
  80a58c:	003ff606 	br	80a568 <setlocale+0x4c>

0080a590 <_lseek_r>:
  80a590:	2807883a 	mov	r3,r5
  80a594:	defffe04 	addi	sp,sp,-8
  80a598:	dc000015 	stw	r16,0(sp)
  80a59c:	300b883a 	mov	r5,r6
  80a5a0:	00802074 	movhi	r2,129
  80a5a4:	380d883a 	mov	r6,r7
  80a5a8:	2021883a 	mov	r16,r4
  80a5ac:	1809883a 	mov	r4,r3
  80a5b0:	dfc00115 	stw	ra,4(sp)
  80a5b4:	1012fb15 	stw	zero,19436(r2)
  80a5b8:	080e9f00 	call	80e9f0 <lseek>
  80a5bc:	10ffffd8 	cmpnei	r3,r2,-1
  80a5c0:	18000426 	beq	r3,zero,80a5d4 <_lseek_r+0x44>
  80a5c4:	dfc00117 	ldw	ra,4(sp)
  80a5c8:	dc000017 	ldw	r16,0(sp)
  80a5cc:	dec00204 	addi	sp,sp,8
  80a5d0:	f800283a 	ret
  80a5d4:	00c02074 	movhi	r3,129
  80a5d8:	18d2fb17 	ldw	r3,19436(r3)
  80a5dc:	183ff926 	beq	r3,zero,80a5c4 <_lseek_r+0x34>
  80a5e0:	80c00015 	stw	r3,0(r16)
  80a5e4:	dfc00117 	ldw	ra,4(sp)
  80a5e8:	dc000017 	ldw	r16,0(sp)
  80a5ec:	dec00204 	addi	sp,sp,8
  80a5f0:	f800283a 	ret

0080a5f4 <_mbtowc_r>:
  80a5f4:	00802074 	movhi	r2,129
  80a5f8:	10875017 	ldw	r2,7488(r2)
  80a5fc:	1000683a 	jmp	r2

0080a600 <__ascii_mbtowc>:
  80a600:	deffff04 	addi	sp,sp,-4
  80a604:	28000826 	beq	r5,zero,80a628 <__ascii_mbtowc+0x28>
  80a608:	30000926 	beq	r6,zero,80a630 <__ascii_mbtowc+0x30>
  80a60c:	38000b26 	beq	r7,zero,80a63c <__ascii_mbtowc+0x3c>
  80a610:	30800003 	ldbu	r2,0(r6)
  80a614:	28800015 	stw	r2,0(r5)
  80a618:	30800003 	ldbu	r2,0(r6)
  80a61c:	1004c03a 	cmpne	r2,r2,zero
  80a620:	dec00104 	addi	sp,sp,4
  80a624:	f800283a 	ret
  80a628:	d80b883a 	mov	r5,sp
  80a62c:	303ff71e 	bne	r6,zero,80a60c <__ascii_mbtowc+0xc>
  80a630:	0005883a 	mov	r2,zero
  80a634:	dec00104 	addi	sp,sp,4
  80a638:	f800283a 	ret
  80a63c:	00bfff84 	movi	r2,-2
  80a640:	003ff706 	br	80a620 <__ascii_mbtowc+0x20>

0080a644 <_read_r>:
  80a644:	2807883a 	mov	r3,r5
  80a648:	defffe04 	addi	sp,sp,-8
  80a64c:	dc000015 	stw	r16,0(sp)
  80a650:	300b883a 	mov	r5,r6
  80a654:	00802074 	movhi	r2,129
  80a658:	380d883a 	mov	r6,r7
  80a65c:	2021883a 	mov	r16,r4
  80a660:	1809883a 	mov	r4,r3
  80a664:	dfc00115 	stw	ra,4(sp)
  80a668:	1012fb15 	stw	zero,19436(r2)
  80a66c:	080ebd00 	call	80ebd0 <read>
  80a670:	10ffffd8 	cmpnei	r3,r2,-1
  80a674:	18000426 	beq	r3,zero,80a688 <_read_r+0x44>
  80a678:	dfc00117 	ldw	ra,4(sp)
  80a67c:	dc000017 	ldw	r16,0(sp)
  80a680:	dec00204 	addi	sp,sp,8
  80a684:	f800283a 	ret
  80a688:	00c02074 	movhi	r3,129
  80a68c:	18d2fb17 	ldw	r3,19436(r3)
  80a690:	183ff926 	beq	r3,zero,80a678 <_read_r+0x34>
  80a694:	80c00015 	stw	r3,0(r16)
  80a698:	dfc00117 	ldw	ra,4(sp)
  80a69c:	dc000017 	ldw	r16,0(sp)
  80a6a0:	dec00204 	addi	sp,sp,8
  80a6a4:	f800283a 	ret

0080a6a8 <strcmp>:
  80a6a8:	2144b03a 	or	r2,r4,r5
  80a6ac:	108000cc 	andi	r2,r2,3
  80a6b0:	1000141e 	bne	r2,zero,80a704 <strcmp+0x5c>
  80a6b4:	20800017 	ldw	r2,0(r4)
  80a6b8:	28c00017 	ldw	r3,0(r5)
  80a6bc:	10c0111e 	bne	r2,r3,80a704 <strcmp+0x5c>
  80a6c0:	01ffbff4 	movhi	r7,65279
  80a6c4:	01a02074 	movhi	r6,32897
  80a6c8:	39ffbfc4 	addi	r7,r7,-257
  80a6cc:	31a02004 	addi	r6,r6,-32640
  80a6d0:	00000306 	br	80a6e0 <strcmp+0x38>
  80a6d4:	20800017 	ldw	r2,0(r4)
  80a6d8:	28c00017 	ldw	r3,0(r5)
  80a6dc:	10c0091e 	bne	r2,r3,80a704 <strcmp+0x5c>
  80a6e0:	11c7883a 	add	r3,r2,r7
  80a6e4:	0084303a 	nor	r2,zero,r2
  80a6e8:	1884703a 	and	r2,r3,r2
  80a6ec:	1184703a 	and	r2,r2,r6
  80a6f0:	21000104 	addi	r4,r4,4
  80a6f4:	29400104 	addi	r5,r5,4
  80a6f8:	103ff626 	beq	r2,zero,80a6d4 <strcmp+0x2c>
  80a6fc:	0005883a 	mov	r2,zero
  80a700:	f800283a 	ret
  80a704:	20c00003 	ldbu	r3,0(r4)
  80a708:	18803fcc 	andi	r2,r3,255
  80a70c:	1080201c 	xori	r2,r2,128
  80a710:	10bfe004 	addi	r2,r2,-128
  80a714:	1000071e 	bne	r2,zero,80a734 <strcmp+0x8c>
  80a718:	00000a06 	br	80a744 <strcmp+0x9c>
  80a71c:	20c00003 	ldbu	r3,0(r4)
  80a720:	29400044 	addi	r5,r5,1
  80a724:	18803fcc 	andi	r2,r3,255
  80a728:	1080201c 	xori	r2,r2,128
  80a72c:	10bfe004 	addi	r2,r2,-128
  80a730:	10000726 	beq	r2,zero,80a750 <strcmp+0xa8>
  80a734:	29800007 	ldb	r6,0(r5)
  80a738:	21000044 	addi	r4,r4,1
  80a73c:	30bff726 	beq	r6,r2,80a71c <strcmp+0x74>
  80a740:	18803fcc 	andi	r2,r3,255
  80a744:	28c00003 	ldbu	r3,0(r5)
  80a748:	10c5c83a 	sub	r2,r2,r3
  80a74c:	f800283a 	ret
  80a750:	28c00003 	ldbu	r3,0(r5)
  80a754:	0005883a 	mov	r2,zero
  80a758:	10c5c83a 	sub	r2,r2,r3
  80a75c:	f800283a 	ret

0080a760 <_vfiprintf_r>:
  80a760:	08089d41 	jmpi	8089d4 <___vfiprintf_internal_r>

0080a764 <__swbuf_r>:
  80a764:	defffb04 	addi	sp,sp,-20
  80a768:	dcc00315 	stw	r19,12(sp)
  80a76c:	dc400115 	stw	r17,4(sp)
  80a770:	dc000015 	stw	r16,0(sp)
  80a774:	dfc00415 	stw	ra,16(sp)
  80a778:	dc800215 	stw	r18,8(sp)
  80a77c:	2027883a 	mov	r19,r4
  80a780:	2823883a 	mov	r17,r5
  80a784:	3021883a 	mov	r16,r6
  80a788:	20000226 	beq	r4,zero,80a794 <__swbuf_r+0x30>
  80a78c:	20800e17 	ldw	r2,56(r4)
  80a790:	10003e26 	beq	r2,zero,80a88c <__swbuf_r+0x128>
  80a794:	80800617 	ldw	r2,24(r16)
  80a798:	80c0030b 	ldhu	r3,12(r16)
  80a79c:	80800215 	stw	r2,8(r16)
  80a7a0:	1880020c 	andi	r2,r3,8
  80a7a4:	10001f26 	beq	r2,zero,80a824 <__swbuf_r+0xc0>
  80a7a8:	80800417 	ldw	r2,16(r16)
  80a7ac:	10001d26 	beq	r2,zero,80a824 <__swbuf_r+0xc0>
  80a7b0:	1948000c 	andi	r5,r3,8192
  80a7b4:	8c803fcc 	andi	r18,r17,255
  80a7b8:	28002326 	beq	r5,zero,80a848 <__swbuf_r+0xe4>
  80a7bc:	80c00017 	ldw	r3,0(r16)
  80a7c0:	81000517 	ldw	r4,20(r16)
  80a7c4:	1885c83a 	sub	r2,r3,r2
  80a7c8:	1100290e 	bge	r2,r4,80a870 <__swbuf_r+0x10c>
  80a7cc:	10800044 	addi	r2,r2,1
  80a7d0:	81400217 	ldw	r5,8(r16)
  80a7d4:	19000044 	addi	r4,r3,1
  80a7d8:	81000015 	stw	r4,0(r16)
  80a7dc:	297fffc4 	addi	r5,r5,-1
  80a7e0:	81400215 	stw	r5,8(r16)
  80a7e4:	1c400005 	stb	r17,0(r3)
  80a7e8:	80c00517 	ldw	r3,20(r16)
  80a7ec:	18802926 	beq	r3,r2,80a894 <__swbuf_r+0x130>
  80a7f0:	8080030b 	ldhu	r2,12(r16)
  80a7f4:	1080004c 	andi	r2,r2,1
  80a7f8:	10000226 	beq	r2,zero,80a804 <__swbuf_r+0xa0>
  80a7fc:	90800298 	cmpnei	r2,r18,10
  80a800:	10002426 	beq	r2,zero,80a894 <__swbuf_r+0x130>
  80a804:	9005883a 	mov	r2,r18
  80a808:	dfc00417 	ldw	ra,16(sp)
  80a80c:	dcc00317 	ldw	r19,12(sp)
  80a810:	dc800217 	ldw	r18,8(sp)
  80a814:	dc400117 	ldw	r17,4(sp)
  80a818:	dc000017 	ldw	r16,0(sp)
  80a81c:	dec00504 	addi	sp,sp,20
  80a820:	f800283a 	ret
  80a824:	800b883a 	mov	r5,r16
  80a828:	9809883a 	mov	r4,r19
  80a82c:	08036040 	call	803604 <__swsetup_r>
  80a830:	10001c1e 	bne	r2,zero,80a8a4 <__swbuf_r+0x140>
  80a834:	80c0030b 	ldhu	r3,12(r16)
  80a838:	80800417 	ldw	r2,16(r16)
  80a83c:	8c803fcc 	andi	r18,r17,255
  80a840:	1948000c 	andi	r5,r3,8192
  80a844:	283fdd1e 	bne	r5,zero,80a7bc <__swbuf_r+0x58>
  80a848:	81001917 	ldw	r4,100(r16)
  80a84c:	18c80014 	ori	r3,r3,8192
  80a850:	0177ffc4 	movi	r5,-8193
  80a854:	2148703a 	and	r4,r4,r5
  80a858:	80c0030d 	sth	r3,12(r16)
  80a85c:	80c00017 	ldw	r3,0(r16)
  80a860:	81001915 	stw	r4,100(r16)
  80a864:	81000517 	ldw	r4,20(r16)
  80a868:	1885c83a 	sub	r2,r3,r2
  80a86c:	113fd716 	blt	r2,r4,80a7cc <__swbuf_r+0x68>
  80a870:	800b883a 	mov	r5,r16
  80a874:	9809883a 	mov	r4,r19
  80a878:	08052f80 	call	8052f8 <_fflush_r>
  80a87c:	1000091e 	bne	r2,zero,80a8a4 <__swbuf_r+0x140>
  80a880:	80c00017 	ldw	r3,0(r16)
  80a884:	00800044 	movi	r2,1
  80a888:	003fd106 	br	80a7d0 <__swbuf_r+0x6c>
  80a88c:	08057400 	call	805740 <__sinit>
  80a890:	003fc006 	br	80a794 <__swbuf_r+0x30>
  80a894:	800b883a 	mov	r5,r16
  80a898:	9809883a 	mov	r4,r19
  80a89c:	08052f80 	call	8052f8 <_fflush_r>
  80a8a0:	103fd826 	beq	r2,zero,80a804 <__swbuf_r+0xa0>
  80a8a4:	04bfffc4 	movi	r18,-1
  80a8a8:	003fd606 	br	80a804 <__swbuf_r+0xa0>

0080a8ac <__swbuf>:
  80a8ac:	00c02074 	movhi	r3,129
  80a8b0:	2005883a 	mov	r2,r4
  80a8b4:	190bf517 	ldw	r4,12244(r3)
  80a8b8:	280d883a 	mov	r6,r5
  80a8bc:	100b883a 	mov	r5,r2
  80a8c0:	080a7641 	jmpi	80a764 <__swbuf_r>

0080a8c4 <_wcrtomb_r>:
  80a8c4:	defffa04 	addi	sp,sp,-24
  80a8c8:	dc400415 	stw	r17,16(sp)
  80a8cc:	dc000315 	stw	r16,12(sp)
  80a8d0:	00802074 	movhi	r2,129
  80a8d4:	dfc00515 	stw	ra,20(sp)
  80a8d8:	10874f17 	ldw	r2,7484(r2)
  80a8dc:	2023883a 	mov	r17,r4
  80a8e0:	3821883a 	mov	r16,r7
  80a8e4:	28000826 	beq	r5,zero,80a908 <_wcrtomb_r+0x44>
  80a8e8:	103ee83a 	callr	r2
  80a8ec:	10ffffd8 	cmpnei	r3,r2,-1
  80a8f0:	18000a26 	beq	r3,zero,80a91c <_wcrtomb_r+0x58>
  80a8f4:	dfc00517 	ldw	ra,20(sp)
  80a8f8:	dc400417 	ldw	r17,16(sp)
  80a8fc:	dc000317 	ldw	r16,12(sp)
  80a900:	dec00604 	addi	sp,sp,24
  80a904:	f800283a 	ret
  80a908:	000d883a 	mov	r6,zero
  80a90c:	d9400084 	addi	r5,sp,2
  80a910:	103ee83a 	callr	r2
  80a914:	10ffffd8 	cmpnei	r3,r2,-1
  80a918:	183ff61e 	bne	r3,zero,80a8f4 <_wcrtomb_r+0x30>
  80a91c:	00802284 	movi	r2,138
  80a920:	80000015 	stw	zero,0(r16)
  80a924:	88800015 	stw	r2,0(r17)
  80a928:	00bfffc4 	movi	r2,-1
  80a92c:	003ff106 	br	80a8f4 <_wcrtomb_r+0x30>

0080a930 <wcrtomb>:
  80a930:	defffa04 	addi	sp,sp,-24
  80a934:	00c02074 	movhi	r3,129
  80a938:	dc400415 	stw	r17,16(sp)
  80a93c:	dc000315 	stw	r16,12(sp)
  80a940:	1c4bf517 	ldw	r17,12244(r3)
  80a944:	dfc00515 	stw	ra,20(sp)
  80a948:	00c02074 	movhi	r3,129
  80a94c:	18c74f17 	ldw	r3,7484(r3)
  80a950:	3021883a 	mov	r16,r6
  80a954:	20000c26 	beq	r4,zero,80a988 <wcrtomb+0x58>
  80a958:	280d883a 	mov	r6,r5
  80a95c:	800f883a 	mov	r7,r16
  80a960:	200b883a 	mov	r5,r4
  80a964:	8809883a 	mov	r4,r17
  80a968:	183ee83a 	callr	r3
  80a96c:	10ffffd8 	cmpnei	r3,r2,-1
  80a970:	18000c26 	beq	r3,zero,80a9a4 <wcrtomb+0x74>
  80a974:	dfc00517 	ldw	ra,20(sp)
  80a978:	dc400417 	ldw	r17,16(sp)
  80a97c:	dc000317 	ldw	r16,12(sp)
  80a980:	dec00604 	addi	sp,sp,24
  80a984:	f800283a 	ret
  80a988:	300f883a 	mov	r7,r6
  80a98c:	d9400084 	addi	r5,sp,2
  80a990:	000d883a 	mov	r6,zero
  80a994:	8809883a 	mov	r4,r17
  80a998:	183ee83a 	callr	r3
  80a99c:	10ffffd8 	cmpnei	r3,r2,-1
  80a9a0:	183ff41e 	bne	r3,zero,80a974 <wcrtomb+0x44>
  80a9a4:	00802284 	movi	r2,138
  80a9a8:	80000015 	stw	zero,0(r16)
  80a9ac:	88800015 	stw	r2,0(r17)
  80a9b0:	00bfffc4 	movi	r2,-1
  80a9b4:	003fef06 	br	80a974 <wcrtomb+0x44>

0080a9b8 <_wctomb_r>:
  80a9b8:	00802074 	movhi	r2,129
  80a9bc:	10874f17 	ldw	r2,7484(r2)
  80a9c0:	1000683a 	jmp	r2

0080a9c4 <__ascii_wctomb>:
  80a9c4:	28000926 	beq	r5,zero,80a9ec <__ascii_wctomb+0x28>
  80a9c8:	30804030 	cmpltui	r2,r6,256
  80a9cc:	10000326 	beq	r2,zero,80a9dc <__ascii_wctomb+0x18>
  80a9d0:	29800005 	stb	r6,0(r5)
  80a9d4:	00800044 	movi	r2,1
  80a9d8:	f800283a 	ret
  80a9dc:	00802284 	movi	r2,138
  80a9e0:	20800015 	stw	r2,0(r4)
  80a9e4:	00bfffc4 	movi	r2,-1
  80a9e8:	f800283a 	ret
  80a9ec:	0005883a 	mov	r2,zero
  80a9f0:	f800283a 	ret

0080a9f4 <abort>:
  80a9f4:	deffff04 	addi	sp,sp,-4
  80a9f8:	01000184 	movi	r4,6
  80a9fc:	dfc00015 	stw	ra,0(sp)
  80aa00:	080ac800 	call	80ac80 <raise>
  80aa04:	01000044 	movi	r4,1
  80aa08:	080e5240 	call	80e524 <_exit>

0080aa0c <_init_signal_r>:
  80aa0c:	2080b717 	ldw	r2,732(r4)
  80aa10:	10000226 	beq	r2,zero,80aa1c <_init_signal_r+0x10>
  80aa14:	0005883a 	mov	r2,zero
  80aa18:	f800283a 	ret
  80aa1c:	defffe04 	addi	sp,sp,-8
  80aa20:	01402004 	movi	r5,128
  80aa24:	dc000015 	stw	r16,0(sp)
  80aa28:	dfc00115 	stw	ra,4(sp)
  80aa2c:	2021883a 	mov	r16,r4
  80aa30:	08064100 	call	806410 <_malloc_r>
  80aa34:	8080b715 	stw	r2,732(r16)
  80aa38:	1009883a 	mov	r4,r2
  80aa3c:	10000826 	beq	r2,zero,80aa60 <_init_signal_r+0x54>
  80aa40:	01802004 	movi	r6,128
  80aa44:	000b883a 	mov	r5,zero
  80aa48:	0806eec0 	call	806eec <memset>
  80aa4c:	0005883a 	mov	r2,zero
  80aa50:	dfc00117 	ldw	ra,4(sp)
  80aa54:	dc000017 	ldw	r16,0(sp)
  80aa58:	dec00204 	addi	sp,sp,8
  80aa5c:	f800283a 	ret
  80aa60:	00bfffc4 	movi	r2,-1
  80aa64:	003ffa06 	br	80aa50 <_init_signal_r+0x44>

0080aa68 <_signal_r>:
  80aa68:	defffc04 	addi	sp,sp,-16
  80aa6c:	dc400115 	stw	r17,4(sp)
  80aa70:	dfc00315 	stw	ra,12(sp)
  80aa74:	dc800215 	stw	r18,8(sp)
  80aa78:	dc000015 	stw	r16,0(sp)
  80aa7c:	28800830 	cmpltui	r2,r5,32
  80aa80:	2023883a 	mov	r17,r4
  80aa84:	10000e26 	beq	r2,zero,80aac0 <_signal_r+0x58>
  80aa88:	20c0b717 	ldw	r3,732(r4)
  80aa8c:	2821883a 	mov	r16,r5
  80aa90:	3025883a 	mov	r18,r6
  80aa94:	18000e26 	beq	r3,zero,80aad0 <_signal_r+0x68>
  80aa98:	802090ba 	slli	r16,r16,2
  80aa9c:	1c21883a 	add	r16,r3,r16
  80aaa0:	80800017 	ldw	r2,0(r16)
  80aaa4:	84800015 	stw	r18,0(r16)
  80aaa8:	dfc00317 	ldw	ra,12(sp)
  80aaac:	dc800217 	ldw	r18,8(sp)
  80aab0:	dc400117 	ldw	r17,4(sp)
  80aab4:	dc000017 	ldw	r16,0(sp)
  80aab8:	dec00404 	addi	sp,sp,16
  80aabc:	f800283a 	ret
  80aac0:	00800584 	movi	r2,22
  80aac4:	20800015 	stw	r2,0(r4)
  80aac8:	00bfffc4 	movi	r2,-1
  80aacc:	003ff606 	br	80aaa8 <_signal_r+0x40>
  80aad0:	01402004 	movi	r5,128
  80aad4:	08064100 	call	806410 <_malloc_r>
  80aad8:	8880b715 	stw	r2,732(r17)
  80aadc:	10000626 	beq	r2,zero,80aaf8 <_signal_r+0x90>
  80aae0:	01802004 	movi	r6,128
  80aae4:	000b883a 	mov	r5,zero
  80aae8:	1009883a 	mov	r4,r2
  80aaec:	0806eec0 	call	806eec <memset>
  80aaf0:	1007883a 	mov	r3,r2
  80aaf4:	003fe806 	br	80aa98 <_signal_r+0x30>
  80aaf8:	00bfffc4 	movi	r2,-1
  80aafc:	003fea06 	br	80aaa8 <_signal_r+0x40>

0080ab00 <_raise_r>:
  80ab00:	28800830 	cmpltui	r2,r5,32
  80ab04:	10002b26 	beq	r2,zero,80abb4 <_raise_r+0xb4>
  80ab08:	2080b717 	ldw	r2,732(r4)
  80ab0c:	defffd04 	addi	sp,sp,-12
  80ab10:	dc000115 	stw	r16,4(sp)
  80ab14:	dfc00215 	stw	ra,8(sp)
  80ab18:	2821883a 	mov	r16,r5
  80ab1c:	10001026 	beq	r2,zero,80ab60 <_raise_r+0x60>
  80ab20:	280690ba 	slli	r3,r5,2
  80ab24:	10c5883a 	add	r2,r2,r3
  80ab28:	10c00017 	ldw	r3,0(r2)
  80ab2c:	18000c26 	beq	r3,zero,80ab60 <_raise_r+0x60>
  80ab30:	19400060 	cmpeqi	r5,r3,1
  80ab34:	28001a1e 	bne	r5,zero,80aba0 <_raise_r+0xa0>
  80ab38:	197fffd8 	cmpnei	r5,r3,-1
  80ab3c:	28001126 	beq	r5,zero,80ab84 <_raise_r+0x84>
  80ab40:	10000015 	stw	zero,0(r2)
  80ab44:	8009883a 	mov	r4,r16
  80ab48:	183ee83a 	callr	r3
  80ab4c:	0005883a 	mov	r2,zero
  80ab50:	dfc00217 	ldw	ra,8(sp)
  80ab54:	dc000117 	ldw	r16,4(sp)
  80ab58:	dec00304 	addi	sp,sp,12
  80ab5c:	f800283a 	ret
  80ab60:	d9000015 	stw	r4,0(sp)
  80ab64:	080af580 	call	80af58 <_getpid_r>
  80ab68:	d9000017 	ldw	r4,0(sp)
  80ab6c:	800d883a 	mov	r6,r16
  80ab70:	100b883a 	mov	r5,r2
  80ab74:	dfc00217 	ldw	ra,8(sp)
  80ab78:	dc000117 	ldw	r16,4(sp)
  80ab7c:	dec00304 	addi	sp,sp,12
  80ab80:	080aef81 	jmpi	80aef8 <_kill_r>
  80ab84:	00800584 	movi	r2,22
  80ab88:	20800015 	stw	r2,0(r4)
  80ab8c:	00800044 	movi	r2,1
  80ab90:	dfc00217 	ldw	ra,8(sp)
  80ab94:	dc000117 	ldw	r16,4(sp)
  80ab98:	dec00304 	addi	sp,sp,12
  80ab9c:	f800283a 	ret
  80aba0:	0005883a 	mov	r2,zero
  80aba4:	dfc00217 	ldw	ra,8(sp)
  80aba8:	dc000117 	ldw	r16,4(sp)
  80abac:	dec00304 	addi	sp,sp,12
  80abb0:	f800283a 	ret
  80abb4:	00800584 	movi	r2,22
  80abb8:	20800015 	stw	r2,0(r4)
  80abbc:	00bfffc4 	movi	r2,-1
  80abc0:	f800283a 	ret

0080abc4 <__sigtramp_r>:
  80abc4:	28800830 	cmpltui	r2,r5,32
  80abc8:	10002b26 	beq	r2,zero,80ac78 <__sigtramp_r+0xb4>
  80abcc:	20c0b717 	ldw	r3,732(r4)
  80abd0:	defffd04 	addi	sp,sp,-12
  80abd4:	dc400115 	stw	r17,4(sp)
  80abd8:	dc000015 	stw	r16,0(sp)
  80abdc:	dfc00215 	stw	ra,8(sp)
  80abe0:	2821883a 	mov	r16,r5
  80abe4:	2023883a 	mov	r17,r4
  80abe8:	18001326 	beq	r3,zero,80ac38 <__sigtramp_r+0x74>
  80abec:	800490ba 	slli	r2,r16,2
  80abf0:	1887883a 	add	r3,r3,r2
  80abf4:	18800017 	ldw	r2,0(r3)
  80abf8:	10000d26 	beq	r2,zero,80ac30 <__sigtramp_r+0x6c>
  80abfc:	113fffe0 	cmpeqi	r4,r2,-1
  80ac00:	2000191e 	bne	r4,zero,80ac68 <__sigtramp_r+0xa4>
  80ac04:	11000060 	cmpeqi	r4,r2,1
  80ac08:	2000151e 	bne	r4,zero,80ac60 <__sigtramp_r+0x9c>
  80ac0c:	18000015 	stw	zero,0(r3)
  80ac10:	8009883a 	mov	r4,r16
  80ac14:	103ee83a 	callr	r2
  80ac18:	0005883a 	mov	r2,zero
  80ac1c:	dfc00217 	ldw	ra,8(sp)
  80ac20:	dc400117 	ldw	r17,4(sp)
  80ac24:	dc000017 	ldw	r16,0(sp)
  80ac28:	dec00304 	addi	sp,sp,12
  80ac2c:	f800283a 	ret
  80ac30:	00800044 	movi	r2,1
  80ac34:	003ff906 	br	80ac1c <__sigtramp_r+0x58>
  80ac38:	01402004 	movi	r5,128
  80ac3c:	08064100 	call	806410 <_malloc_r>
  80ac40:	8880b715 	stw	r2,732(r17)
  80ac44:	10000a26 	beq	r2,zero,80ac70 <__sigtramp_r+0xac>
  80ac48:	01802004 	movi	r6,128
  80ac4c:	000b883a 	mov	r5,zero
  80ac50:	1009883a 	mov	r4,r2
  80ac54:	0806eec0 	call	806eec <memset>
  80ac58:	1007883a 	mov	r3,r2
  80ac5c:	003fe306 	br	80abec <__sigtramp_r+0x28>
  80ac60:	008000c4 	movi	r2,3
  80ac64:	003fed06 	br	80ac1c <__sigtramp_r+0x58>
  80ac68:	00800084 	movi	r2,2
  80ac6c:	003feb06 	br	80ac1c <__sigtramp_r+0x58>
  80ac70:	00bfffc4 	movi	r2,-1
  80ac74:	003fe906 	br	80ac1c <__sigtramp_r+0x58>
  80ac78:	00bfffc4 	movi	r2,-1
  80ac7c:	f800283a 	ret

0080ac80 <raise>:
  80ac80:	defffd04 	addi	sp,sp,-12
  80ac84:	dc400115 	stw	r17,4(sp)
  80ac88:	00c02074 	movhi	r3,129
  80ac8c:	dfc00215 	stw	ra,8(sp)
  80ac90:	dc000015 	stw	r16,0(sp)
  80ac94:	20800830 	cmpltui	r2,r4,32
  80ac98:	1c4bf517 	ldw	r17,12244(r3)
  80ac9c:	10002326 	beq	r2,zero,80ad2c <raise+0xac>
  80aca0:	8880b717 	ldw	r2,732(r17)
  80aca4:	2021883a 	mov	r16,r4
  80aca8:	10001026 	beq	r2,zero,80acec <raise+0x6c>
  80acac:	200690ba 	slli	r3,r4,2
  80acb0:	10c5883a 	add	r2,r2,r3
  80acb4:	10c00017 	ldw	r3,0(r2)
  80acb8:	18000c26 	beq	r3,zero,80acec <raise+0x6c>
  80acbc:	19400060 	cmpeqi	r5,r3,1
  80acc0:	2800181e 	bne	r5,zero,80ad24 <raise+0xa4>
  80acc4:	197fffd8 	cmpnei	r5,r3,-1
  80acc8:	28001226 	beq	r5,zero,80ad14 <raise+0x94>
  80accc:	10000015 	stw	zero,0(r2)
  80acd0:	183ee83a 	callr	r3
  80acd4:	0005883a 	mov	r2,zero
  80acd8:	dfc00217 	ldw	ra,8(sp)
  80acdc:	dc400117 	ldw	r17,4(sp)
  80ace0:	dc000017 	ldw	r16,0(sp)
  80ace4:	dec00304 	addi	sp,sp,12
  80ace8:	f800283a 	ret
  80acec:	8809883a 	mov	r4,r17
  80acf0:	080af580 	call	80af58 <_getpid_r>
  80acf4:	800d883a 	mov	r6,r16
  80acf8:	100b883a 	mov	r5,r2
  80acfc:	8809883a 	mov	r4,r17
  80ad00:	dfc00217 	ldw	ra,8(sp)
  80ad04:	dc400117 	ldw	r17,4(sp)
  80ad08:	dc000017 	ldw	r16,0(sp)
  80ad0c:	dec00304 	addi	sp,sp,12
  80ad10:	080aef81 	jmpi	80aef8 <_kill_r>
  80ad14:	00800584 	movi	r2,22
  80ad18:	88800015 	stw	r2,0(r17)
  80ad1c:	00800044 	movi	r2,1
  80ad20:	003fed06 	br	80acd8 <raise+0x58>
  80ad24:	0005883a 	mov	r2,zero
  80ad28:	003feb06 	br	80acd8 <raise+0x58>
  80ad2c:	00800584 	movi	r2,22
  80ad30:	88800015 	stw	r2,0(r17)
  80ad34:	00bfffc4 	movi	r2,-1
  80ad38:	003fe706 	br	80acd8 <raise+0x58>

0080ad3c <signal>:
  80ad3c:	defffc04 	addi	sp,sp,-16
  80ad40:	dc800215 	stw	r18,8(sp)
  80ad44:	00c02074 	movhi	r3,129
  80ad48:	dfc00315 	stw	ra,12(sp)
  80ad4c:	dc400115 	stw	r17,4(sp)
  80ad50:	dc000015 	stw	r16,0(sp)
  80ad54:	20800830 	cmpltui	r2,r4,32
  80ad58:	1c8bf517 	ldw	r18,12244(r3)
  80ad5c:	10000e26 	beq	r2,zero,80ad98 <signal+0x5c>
  80ad60:	2021883a 	mov	r16,r4
  80ad64:	9100b717 	ldw	r4,732(r18)
  80ad68:	2823883a 	mov	r17,r5
  80ad6c:	20000e26 	beq	r4,zero,80ada8 <signal+0x6c>
  80ad70:	802090ba 	slli	r16,r16,2
  80ad74:	2421883a 	add	r16,r4,r16
  80ad78:	80800017 	ldw	r2,0(r16)
  80ad7c:	84400015 	stw	r17,0(r16)
  80ad80:	dfc00317 	ldw	ra,12(sp)
  80ad84:	dc800217 	ldw	r18,8(sp)
  80ad88:	dc400117 	ldw	r17,4(sp)
  80ad8c:	dc000017 	ldw	r16,0(sp)
  80ad90:	dec00404 	addi	sp,sp,16
  80ad94:	f800283a 	ret
  80ad98:	00800584 	movi	r2,22
  80ad9c:	90800015 	stw	r2,0(r18)
  80ada0:	00bfffc4 	movi	r2,-1
  80ada4:	003ff606 	br	80ad80 <signal+0x44>
  80ada8:	9009883a 	mov	r4,r18
  80adac:	01402004 	movi	r5,128
  80adb0:	08064100 	call	806410 <_malloc_r>
  80adb4:	9080b715 	stw	r2,732(r18)
  80adb8:	1009883a 	mov	r4,r2
  80adbc:	10000526 	beq	r2,zero,80add4 <signal+0x98>
  80adc0:	01802004 	movi	r6,128
  80adc4:	000b883a 	mov	r5,zero
  80adc8:	0806eec0 	call	806eec <memset>
  80adcc:	1009883a 	mov	r4,r2
  80add0:	003fe706 	br	80ad70 <signal+0x34>
  80add4:	00bfffc4 	movi	r2,-1
  80add8:	003fe906 	br	80ad80 <signal+0x44>

0080addc <_init_signal>:
  80addc:	defffe04 	addi	sp,sp,-8
  80ade0:	00802074 	movhi	r2,129
  80ade4:	dc000015 	stw	r16,0(sp)
  80ade8:	140bf517 	ldw	r16,12244(r2)
  80adec:	dfc00115 	stw	ra,4(sp)
  80adf0:	8080b717 	ldw	r2,732(r16)
  80adf4:	10000526 	beq	r2,zero,80ae0c <_init_signal+0x30>
  80adf8:	0005883a 	mov	r2,zero
  80adfc:	dfc00117 	ldw	ra,4(sp)
  80ae00:	dc000017 	ldw	r16,0(sp)
  80ae04:	dec00204 	addi	sp,sp,8
  80ae08:	f800283a 	ret
  80ae0c:	8009883a 	mov	r4,r16
  80ae10:	01402004 	movi	r5,128
  80ae14:	08064100 	call	806410 <_malloc_r>
  80ae18:	8080b715 	stw	r2,732(r16)
  80ae1c:	1009883a 	mov	r4,r2
  80ae20:	10000426 	beq	r2,zero,80ae34 <_init_signal+0x58>
  80ae24:	01802004 	movi	r6,128
  80ae28:	000b883a 	mov	r5,zero
  80ae2c:	0806eec0 	call	806eec <memset>
  80ae30:	003ff106 	br	80adf8 <_init_signal+0x1c>
  80ae34:	00bfffc4 	movi	r2,-1
  80ae38:	003ff006 	br	80adfc <_init_signal+0x20>

0080ae3c <__sigtramp>:
  80ae3c:	defffd04 	addi	sp,sp,-12
  80ae40:	dc400115 	stw	r17,4(sp)
  80ae44:	00c02074 	movhi	r3,129
  80ae48:	dfc00215 	stw	ra,8(sp)
  80ae4c:	dc000015 	stw	r16,0(sp)
  80ae50:	20800830 	cmpltui	r2,r4,32
  80ae54:	1c4bf517 	ldw	r17,12244(r3)
  80ae58:	10002526 	beq	r2,zero,80aef0 <__sigtramp+0xb4>
  80ae5c:	88c0b717 	ldw	r3,732(r17)
  80ae60:	2021883a 	mov	r16,r4
  80ae64:	18001326 	beq	r3,zero,80aeb4 <__sigtramp+0x78>
  80ae68:	800890ba 	slli	r4,r16,2
  80ae6c:	1907883a 	add	r3,r3,r4
  80ae70:	18800017 	ldw	r2,0(r3)
  80ae74:	10000d26 	beq	r2,zero,80aeac <__sigtramp+0x70>
  80ae78:	113fffe0 	cmpeqi	r4,r2,-1
  80ae7c:	20001a1e 	bne	r4,zero,80aee8 <__sigtramp+0xac>
  80ae80:	11000060 	cmpeqi	r4,r2,1
  80ae84:	2000161e 	bne	r4,zero,80aee0 <__sigtramp+0xa4>
  80ae88:	18000015 	stw	zero,0(r3)
  80ae8c:	8009883a 	mov	r4,r16
  80ae90:	103ee83a 	callr	r2
  80ae94:	0005883a 	mov	r2,zero
  80ae98:	dfc00217 	ldw	ra,8(sp)
  80ae9c:	dc400117 	ldw	r17,4(sp)
  80aea0:	dc000017 	ldw	r16,0(sp)
  80aea4:	dec00304 	addi	sp,sp,12
  80aea8:	f800283a 	ret
  80aeac:	00800044 	movi	r2,1
  80aeb0:	003ff906 	br	80ae98 <__sigtramp+0x5c>
  80aeb4:	01402004 	movi	r5,128
  80aeb8:	8809883a 	mov	r4,r17
  80aebc:	08064100 	call	806410 <_malloc_r>
  80aec0:	8880b715 	stw	r2,732(r17)
  80aec4:	10000a26 	beq	r2,zero,80aef0 <__sigtramp+0xb4>
  80aec8:	01802004 	movi	r6,128
  80aecc:	000b883a 	mov	r5,zero
  80aed0:	1009883a 	mov	r4,r2
  80aed4:	0806eec0 	call	806eec <memset>
  80aed8:	1007883a 	mov	r3,r2
  80aedc:	003fe206 	br	80ae68 <__sigtramp+0x2c>
  80aee0:	008000c4 	movi	r2,3
  80aee4:	003fec06 	br	80ae98 <__sigtramp+0x5c>
  80aee8:	00800084 	movi	r2,2
  80aeec:	003fea06 	br	80ae98 <__sigtramp+0x5c>
  80aef0:	00bfffc4 	movi	r2,-1
  80aef4:	003fe806 	br	80ae98 <__sigtramp+0x5c>

0080aef8 <_kill_r>:
  80aef8:	2807883a 	mov	r3,r5
  80aefc:	defffe04 	addi	sp,sp,-8
  80af00:	dc000015 	stw	r16,0(sp)
  80af04:	00802074 	movhi	r2,129
  80af08:	300b883a 	mov	r5,r6
  80af0c:	2021883a 	mov	r16,r4
  80af10:	1809883a 	mov	r4,r3
  80af14:	dfc00115 	stw	ra,4(sp)
  80af18:	1012fb15 	stw	zero,19436(r2)
  80af1c:	080e79c0 	call	80e79c <kill>
  80af20:	10ffffd8 	cmpnei	r3,r2,-1
  80af24:	18000426 	beq	r3,zero,80af38 <_kill_r+0x40>
  80af28:	dfc00117 	ldw	ra,4(sp)
  80af2c:	dc000017 	ldw	r16,0(sp)
  80af30:	dec00204 	addi	sp,sp,8
  80af34:	f800283a 	ret
  80af38:	00c02074 	movhi	r3,129
  80af3c:	18d2fb17 	ldw	r3,19436(r3)
  80af40:	183ff926 	beq	r3,zero,80af28 <_kill_r+0x30>
  80af44:	80c00015 	stw	r3,0(r16)
  80af48:	dfc00117 	ldw	ra,4(sp)
  80af4c:	dc000017 	ldw	r16,0(sp)
  80af50:	dec00204 	addi	sp,sp,8
  80af54:	f800283a 	ret

0080af58 <_getpid_r>:
  80af58:	080e6541 	jmpi	80e654 <getpid>

0080af5c <__udivdi3>:
  80af5c:	defff504 	addi	sp,sp,-44
  80af60:	dd000515 	stw	r20,20(sp)
  80af64:	dc800315 	stw	r18,12(sp)
  80af68:	dfc00a15 	stw	ra,40(sp)
  80af6c:	df000915 	stw	fp,36(sp)
  80af70:	ddc00815 	stw	r23,32(sp)
  80af74:	dd800715 	stw	r22,28(sp)
  80af78:	dd400615 	stw	r21,24(sp)
  80af7c:	dcc00415 	stw	r19,16(sp)
  80af80:	dc400215 	stw	r17,8(sp)
  80af84:	dc000115 	stw	r16,4(sp)
  80af88:	2029883a 	mov	r20,r4
  80af8c:	2825883a 	mov	r18,r5
  80af90:	3800461e 	bne	r7,zero,80b0ac <__udivdi3+0x150>
  80af94:	3823883a 	mov	r17,r7
  80af98:	3021883a 	mov	r16,r6
  80af9c:	2027883a 	mov	r19,r4
  80afa0:	2980622e 	bgeu	r5,r6,80b12c <__udivdi3+0x1d0>
  80afa4:	00bfffd4 	movui	r2,65535
  80afa8:	282b883a 	mov	r21,r5
  80afac:	1180aa2e 	bgeu	r2,r6,80b258 <__udivdi3+0x2fc>
  80afb0:	00804034 	movhi	r2,256
  80afb4:	30815a36 	bltu	r6,r2,80b520 <__udivdi3+0x5c4>
  80afb8:	3006d63a 	srli	r3,r6,24
  80afbc:	04400604 	movi	r17,24
  80afc0:	00802074 	movhi	r2,129
  80afc4:	1885883a 	add	r2,r3,r2
  80afc8:	10837803 	ldbu	r2,3552(r2)
  80afcc:	00c00804 	movi	r3,32
  80afd0:	1463883a 	add	r17,r2,r17
  80afd4:	1c45c83a 	sub	r2,r3,r17
  80afd8:	1c400526 	beq	r3,r17,80aff0 <__udivdi3+0x94>
  80afdc:	9086983a 	sll	r3,r18,r2
  80afe0:	a462d83a 	srl	r17,r20,r17
  80afe4:	30a0983a 	sll	r16,r6,r2
  80afe8:	a0a6983a 	sll	r19,r20,r2
  80afec:	88eab03a 	or	r21,r17,r3
  80aff0:	802cd43a 	srli	r22,r16,16
  80aff4:	a809883a 	mov	r4,r21
  80aff8:	853fffcc 	andi	r20,r16,65535
  80affc:	b00b883a 	mov	r5,r22
  80b000:	080bc980 	call	80bc98 <__umodsi3>
  80b004:	a809883a 	mov	r4,r21
  80b008:	b00b883a 	mov	r5,r22
  80b00c:	1025883a 	mov	r18,r2
  80b010:	080bc340 	call	80bc34 <__udivsi3>
  80b014:	a009883a 	mov	r4,r20
  80b018:	100b883a 	mov	r5,r2
  80b01c:	102b883a 	mov	r21,r2
  80b020:	08012200 	call	801220 <__mulsi3>
  80b024:	9024943a 	slli	r18,r18,16
  80b028:	9808d43a 	srli	r4,r19,16
  80b02c:	9108b03a 	or	r4,r18,r4
  80b030:	2080052e 	bgeu	r4,r2,80b048 <__udivdi3+0xec>
  80b034:	2409883a 	add	r4,r4,r16
  80b038:	a8ffffc4 	addi	r3,r21,-1
  80b03c:	24000136 	bltu	r4,r16,80b044 <__udivdi3+0xe8>
  80b040:	20814836 	bltu	r4,r2,80b564 <__udivdi3+0x608>
  80b044:	182b883a 	mov	r21,r3
  80b048:	20a3c83a 	sub	r17,r4,r2
  80b04c:	8809883a 	mov	r4,r17
  80b050:	b00b883a 	mov	r5,r22
  80b054:	080bc980 	call	80bc98 <__umodsi3>
  80b058:	8809883a 	mov	r4,r17
  80b05c:	1023883a 	mov	r17,r2
  80b060:	b00b883a 	mov	r5,r22
  80b064:	8822943a 	slli	r17,r17,16
  80b068:	080bc340 	call	80bc34 <__udivsi3>
  80b06c:	100b883a 	mov	r5,r2
  80b070:	a009883a 	mov	r4,r20
  80b074:	9cffffcc 	andi	r19,r19,65535
  80b078:	1025883a 	mov	r18,r2
  80b07c:	8ce6b03a 	or	r19,r17,r19
  80b080:	08012200 	call	801220 <__mulsi3>
  80b084:	9880052e 	bgeu	r19,r2,80b09c <__udivdi3+0x140>
  80b088:	84e7883a 	add	r19,r16,r19
  80b08c:	90ffffc4 	addi	r3,r18,-1
  80b090:	9c000136 	bltu	r19,r16,80b098 <__udivdi3+0x13c>
  80b094:	98813136 	bltu	r19,r2,80b55c <__udivdi3+0x600>
  80b098:	1825883a 	mov	r18,r3
  80b09c:	a80c943a 	slli	r6,r21,16
  80b0a0:	0007883a 	mov	r3,zero
  80b0a4:	3484b03a 	or	r2,r6,r18
  80b0a8:	00000306 	br	80b0b8 <__udivdi3+0x15c>
  80b0ac:	29c00e2e 	bgeu	r5,r7,80b0e8 <__udivdi3+0x18c>
  80b0b0:	0007883a 	mov	r3,zero
  80b0b4:	0005883a 	mov	r2,zero
  80b0b8:	dfc00a17 	ldw	ra,40(sp)
  80b0bc:	df000917 	ldw	fp,36(sp)
  80b0c0:	ddc00817 	ldw	r23,32(sp)
  80b0c4:	dd800717 	ldw	r22,28(sp)
  80b0c8:	dd400617 	ldw	r21,24(sp)
  80b0cc:	dd000517 	ldw	r20,20(sp)
  80b0d0:	dcc00417 	ldw	r19,16(sp)
  80b0d4:	dc800317 	ldw	r18,12(sp)
  80b0d8:	dc400217 	ldw	r17,8(sp)
  80b0dc:	dc000117 	ldw	r16,4(sp)
  80b0e0:	dec00b04 	addi	sp,sp,44
  80b0e4:	f800283a 	ret
  80b0e8:	00bfffd4 	movui	r2,65535
  80b0ec:	11c05f2e 	bgeu	r2,r7,80b26c <__udivdi3+0x310>
  80b0f0:	00804034 	movhi	r2,256
  80b0f4:	3880fc36 	bltu	r7,r2,80b4e8 <__udivdi3+0x58c>
  80b0f8:	3804d63a 	srli	r2,r7,24
  80b0fc:	01000604 	movi	r4,24
  80b100:	00c02074 	movhi	r3,129
  80b104:	10c7883a 	add	r3,r2,r3
  80b108:	18837803 	ldbu	r2,3552(r3)
  80b10c:	00c00804 	movi	r3,32
  80b110:	1105883a 	add	r2,r2,r4
  80b114:	18a3c83a 	sub	r17,r3,r2
  80b118:	1880901e 	bne	r3,r2,80b35c <__udivdi3+0x400>
  80b11c:	3c80f736 	bltu	r7,r18,80b4fc <__udivdi3+0x5a0>
  80b120:	a185403a 	cmpgeu	r2,r20,r6
  80b124:	0007883a 	mov	r3,zero
  80b128:	003fe306 	br	80b0b8 <__udivdi3+0x15c>
  80b12c:	3000041e 	bne	r6,zero,80b140 <__udivdi3+0x1e4>
  80b130:	000b883a 	mov	r5,zero
  80b134:	01000044 	movi	r4,1
  80b138:	080bc340 	call	80bc34 <__udivsi3>
  80b13c:	1021883a 	mov	r16,r2
  80b140:	00bfffd4 	movui	r2,65535
  80b144:	14003f2e 	bgeu	r2,r16,80b244 <__udivdi3+0x2e8>
  80b148:	00804034 	movhi	r2,256
  80b14c:	8080f136 	bltu	r16,r2,80b514 <__udivdi3+0x5b8>
  80b150:	8006d63a 	srli	r3,r16,24
  80b154:	04400604 	movi	r17,24
  80b158:	00802074 	movhi	r2,129
  80b15c:	1885883a 	add	r2,r3,r2
  80b160:	10837803 	ldbu	r2,3552(r2)
  80b164:	00c00804 	movi	r3,32
  80b168:	1463883a 	add	r17,r2,r17
  80b16c:	1c45c83a 	sub	r2,r3,r17
  80b170:	1c40431e 	bne	r3,r17,80b280 <__udivdi3+0x324>
  80b174:	802cd43a 	srli	r22,r16,16
  80b178:	9423c83a 	sub	r17,r18,r16
  80b17c:	853fffcc 	andi	r20,r16,65535
  80b180:	00c00044 	movi	r3,1
  80b184:	b00b883a 	mov	r5,r22
  80b188:	8809883a 	mov	r4,r17
  80b18c:	d8c00015 	stw	r3,0(sp)
  80b190:	080bc980 	call	80bc98 <__umodsi3>
  80b194:	b00b883a 	mov	r5,r22
  80b198:	8809883a 	mov	r4,r17
  80b19c:	1025883a 	mov	r18,r2
  80b1a0:	080bc340 	call	80bc34 <__udivsi3>
  80b1a4:	1009883a 	mov	r4,r2
  80b1a8:	a00b883a 	mov	r5,r20
  80b1ac:	102b883a 	mov	r21,r2
  80b1b0:	08012200 	call	801220 <__mulsi3>
  80b1b4:	9024943a 	slli	r18,r18,16
  80b1b8:	9808d43a 	srli	r4,r19,16
  80b1bc:	d8c00017 	ldw	r3,0(sp)
  80b1c0:	9108b03a 	or	r4,r18,r4
  80b1c4:	2080052e 	bgeu	r4,r2,80b1dc <__udivdi3+0x280>
  80b1c8:	2409883a 	add	r4,r4,r16
  80b1cc:	a97fffc4 	addi	r5,r21,-1
  80b1d0:	24000136 	bltu	r4,r16,80b1d8 <__udivdi3+0x27c>
  80b1d4:	2080e636 	bltu	r4,r2,80b570 <__udivdi3+0x614>
  80b1d8:	282b883a 	mov	r21,r5
  80b1dc:	20a3c83a 	sub	r17,r4,r2
  80b1e0:	8809883a 	mov	r4,r17
  80b1e4:	b00b883a 	mov	r5,r22
  80b1e8:	d8c00015 	stw	r3,0(sp)
  80b1ec:	080bc980 	call	80bc98 <__umodsi3>
  80b1f0:	8809883a 	mov	r4,r17
  80b1f4:	1023883a 	mov	r17,r2
  80b1f8:	b00b883a 	mov	r5,r22
  80b1fc:	8822943a 	slli	r17,r17,16
  80b200:	080bc340 	call	80bc34 <__udivsi3>
  80b204:	a00b883a 	mov	r5,r20
  80b208:	1009883a 	mov	r4,r2
  80b20c:	9cffffcc 	andi	r19,r19,65535
  80b210:	1025883a 	mov	r18,r2
  80b214:	8ce6b03a 	or	r19,r17,r19
  80b218:	08012200 	call	801220 <__mulsi3>
  80b21c:	d8c00017 	ldw	r3,0(sp)
  80b220:	9880052e 	bgeu	r19,r2,80b238 <__udivdi3+0x2dc>
  80b224:	84e7883a 	add	r19,r16,r19
  80b228:	913fffc4 	addi	r4,r18,-1
  80b22c:	9c000136 	bltu	r19,r16,80b234 <__udivdi3+0x2d8>
  80b230:	9880c836 	bltu	r19,r2,80b554 <__udivdi3+0x5f8>
  80b234:	2025883a 	mov	r18,r4
  80b238:	a80c943a 	slli	r6,r21,16
  80b23c:	3484b03a 	or	r2,r6,r18
  80b240:	003f9d06 	br	80b0b8 <__udivdi3+0x15c>
  80b244:	80804030 	cmpltui	r2,r16,256
  80b248:	1000b81e 	bne	r2,zero,80b52c <__udivdi3+0x5d0>
  80b24c:	8006d23a 	srli	r3,r16,8
  80b250:	04400204 	movi	r17,8
  80b254:	003fc006 	br	80b158 <__udivdi3+0x1fc>
  80b258:	30804030 	cmpltui	r2,r6,256
  80b25c:	1000a51e 	bne	r2,zero,80b4f4 <__udivdi3+0x598>
  80b260:	3006d23a 	srli	r3,r6,8
  80b264:	04400204 	movi	r17,8
  80b268:	003f5506 	br	80afc0 <__udivdi3+0x64>
  80b26c:	38804030 	cmpltui	r2,r7,256
  80b270:	1000a51e 	bne	r2,zero,80b508 <__udivdi3+0x5ac>
  80b274:	3804d23a 	srli	r2,r7,8
  80b278:	01000204 	movi	r4,8
  80b27c:	003fa006 	br	80b100 <__udivdi3+0x1a4>
  80b280:	80a0983a 	sll	r16,r16,r2
  80b284:	946ed83a 	srl	r23,r18,r17
  80b288:	9086983a 	sll	r3,r18,r2
  80b28c:	802cd43a 	srli	r22,r16,16
  80b290:	a462d83a 	srl	r17,r20,r17
  80b294:	b809883a 	mov	r4,r23
  80b298:	b00b883a 	mov	r5,r22
  80b29c:	88eab03a 	or	r21,r17,r3
  80b2a0:	a0a6983a 	sll	r19,r20,r2
  80b2a4:	080bc980 	call	80bc98 <__umodsi3>
  80b2a8:	b809883a 	mov	r4,r23
  80b2ac:	b00b883a 	mov	r5,r22
  80b2b0:	1025883a 	mov	r18,r2
  80b2b4:	853fffcc 	andi	r20,r16,65535
  80b2b8:	080bc340 	call	80bc34 <__udivsi3>
  80b2bc:	a009883a 	mov	r4,r20
  80b2c0:	100b883a 	mov	r5,r2
  80b2c4:	102f883a 	mov	r23,r2
  80b2c8:	08012200 	call	801220 <__mulsi3>
  80b2cc:	9024943a 	slli	r18,r18,16
  80b2d0:	a808d43a 	srli	r4,r21,16
  80b2d4:	9108b03a 	or	r4,r18,r4
  80b2d8:	2080062e 	bgeu	r4,r2,80b2f4 <__udivdi3+0x398>
  80b2dc:	2409883a 	add	r4,r4,r16
  80b2e0:	b8ffffc4 	addi	r3,r23,-1
  80b2e4:	24009936 	bltu	r4,r16,80b54c <__udivdi3+0x5f0>
  80b2e8:	2080982e 	bgeu	r4,r2,80b54c <__udivdi3+0x5f0>
  80b2ec:	bdffff84 	addi	r23,r23,-2
  80b2f0:	2409883a 	add	r4,r4,r16
  80b2f4:	20a3c83a 	sub	r17,r4,r2
  80b2f8:	8809883a 	mov	r4,r17
  80b2fc:	b00b883a 	mov	r5,r22
  80b300:	080bc980 	call	80bc98 <__umodsi3>
  80b304:	1025883a 	mov	r18,r2
  80b308:	8809883a 	mov	r4,r17
  80b30c:	b00b883a 	mov	r5,r22
  80b310:	9024943a 	slli	r18,r18,16
  80b314:	080bc340 	call	80bc34 <__udivsi3>
  80b318:	100b883a 	mov	r5,r2
  80b31c:	a009883a 	mov	r4,r20
  80b320:	ac7fffcc 	andi	r17,r21,65535
  80b324:	1039883a 	mov	fp,r2
  80b328:	9462b03a 	or	r17,r18,r17
  80b32c:	08012200 	call	801220 <__mulsi3>
  80b330:	8880062e 	bgeu	r17,r2,80b34c <__udivdi3+0x3f0>
  80b334:	8c23883a 	add	r17,r17,r16
  80b338:	e0ffffc4 	addi	r3,fp,-1
  80b33c:	8c007f36 	bltu	r17,r16,80b53c <__udivdi3+0x5e0>
  80b340:	88807e2e 	bgeu	r17,r2,80b53c <__udivdi3+0x5e0>
  80b344:	e73fff84 	addi	fp,fp,-2
  80b348:	8c23883a 	add	r17,r17,r16
  80b34c:	b806943a 	slli	r3,r23,16
  80b350:	88a3c83a 	sub	r17,r17,r2
  80b354:	1f06b03a 	or	r3,r3,fp
  80b358:	003f8a06 	br	80b184 <__udivdi3+0x228>
  80b35c:	30a6d83a 	srl	r19,r6,r2
  80b360:	3c4e983a 	sll	r7,r7,r17
  80b364:	90a0d83a 	srl	r16,r18,r2
  80b368:	9446983a 	sll	r3,r18,r17
  80b36c:	99e6b03a 	or	r19,r19,r7
  80b370:	a084d83a 	srl	r2,r20,r2
  80b374:	9838d43a 	srli	fp,r19,16
  80b378:	8009883a 	mov	r4,r16
  80b37c:	10eab03a 	or	r21,r2,r3
  80b380:	e00b883a 	mov	r5,fp
  80b384:	346c983a 	sll	r22,r6,r17
  80b388:	dd400015 	stw	r21,0(sp)
  80b38c:	080bc980 	call	80bc98 <__umodsi3>
  80b390:	8009883a 	mov	r4,r16
  80b394:	e00b883a 	mov	r5,fp
  80b398:	102f883a 	mov	r23,r2
  80b39c:	9cbfffcc 	andi	r18,r19,65535
  80b3a0:	080bc340 	call	80bc34 <__udivsi3>
  80b3a4:	9009883a 	mov	r4,r18
  80b3a8:	100b883a 	mov	r5,r2
  80b3ac:	1021883a 	mov	r16,r2
  80b3b0:	08012200 	call	801220 <__mulsi3>
  80b3b4:	b82e943a 	slli	r23,r23,16
  80b3b8:	a808d43a 	srli	r4,r21,16
  80b3bc:	b908b03a 	or	r4,r23,r4
  80b3c0:	2080062e 	bgeu	r4,r2,80b3dc <__udivdi3+0x480>
  80b3c4:	24c9883a 	add	r4,r4,r19
  80b3c8:	817fffc4 	addi	r5,r16,-1
  80b3cc:	24c05d36 	bltu	r4,r19,80b544 <__udivdi3+0x5e8>
  80b3d0:	20805c2e 	bgeu	r4,r2,80b544 <__udivdi3+0x5e8>
  80b3d4:	843fff84 	addi	r16,r16,-2
  80b3d8:	24c9883a 	add	r4,r4,r19
  80b3dc:	20abc83a 	sub	r21,r4,r2
  80b3e0:	a809883a 	mov	r4,r21
  80b3e4:	e00b883a 	mov	r5,fp
  80b3e8:	080bc980 	call	80bc98 <__umodsi3>
  80b3ec:	a809883a 	mov	r4,r21
  80b3f0:	e00b883a 	mov	r5,fp
  80b3f4:	102b883a 	mov	r21,r2
  80b3f8:	080bc340 	call	80bc34 <__udivsi3>
  80b3fc:	9009883a 	mov	r4,r18
  80b400:	100b883a 	mov	r5,r2
  80b404:	102f883a 	mov	r23,r2
  80b408:	08012200 	call	801220 <__mulsi3>
  80b40c:	d8c00017 	ldw	r3,0(sp)
  80b410:	a82a943a 	slli	r21,r21,16
  80b414:	100d883a 	mov	r6,r2
  80b418:	1cbfffcc 	andi	r18,r3,65535
  80b41c:	aca4b03a 	or	r18,r21,r18
  80b420:	9080062e 	bgeu	r18,r2,80b43c <__udivdi3+0x4e0>
  80b424:	94e5883a 	add	r18,r18,r19
  80b428:	b8bfffc4 	addi	r2,r23,-1
  80b42c:	94c04136 	bltu	r18,r19,80b534 <__udivdi3+0x5d8>
  80b430:	9180402e 	bgeu	r18,r6,80b534 <__udivdi3+0x5d8>
  80b434:	bdffff84 	addi	r23,r23,-2
  80b438:	94e5883a 	add	r18,r18,r19
  80b43c:	8004943a 	slli	r2,r16,16
  80b440:	bd7fffcc 	andi	r21,r23,65535
  80b444:	b73fffcc 	andi	fp,r22,65535
  80b448:	15e0b03a 	or	r16,r2,r23
  80b44c:	8026d43a 	srli	r19,r16,16
  80b450:	a809883a 	mov	r4,r21
  80b454:	e00b883a 	mov	r5,fp
  80b458:	91a5c83a 	sub	r18,r18,r6
  80b45c:	b02cd43a 	srli	r22,r22,16
  80b460:	08012200 	call	801220 <__mulsi3>
  80b464:	9809883a 	mov	r4,r19
  80b468:	e00b883a 	mov	r5,fp
  80b46c:	102f883a 	mov	r23,r2
  80b470:	08012200 	call	801220 <__mulsi3>
  80b474:	9809883a 	mov	r4,r19
  80b478:	b00b883a 	mov	r5,r22
  80b47c:	1027883a 	mov	r19,r2
  80b480:	08012200 	call	801220 <__mulsi3>
  80b484:	a809883a 	mov	r4,r21
  80b488:	b00b883a 	mov	r5,r22
  80b48c:	102b883a 	mov	r21,r2
  80b490:	08012200 	call	801220 <__mulsi3>
  80b494:	b806d43a 	srli	r3,r23,16
  80b498:	14c5883a 	add	r2,r2,r19
  80b49c:	1887883a 	add	r3,r3,r2
  80b4a0:	1cc0022e 	bgeu	r3,r19,80b4ac <__udivdi3+0x550>
  80b4a4:	00800074 	movhi	r2,1
  80b4a8:	a8ab883a 	add	r21,r21,r2
  80b4ac:	1804d43a 	srli	r2,r3,16
  80b4b0:	156b883a 	add	r21,r2,r21
  80b4b4:	95400936 	bltu	r18,r21,80b4dc <__udivdi3+0x580>
  80b4b8:	95400326 	beq	r18,r21,80b4c8 <__udivdi3+0x56c>
  80b4bc:	8005883a 	mov	r2,r16
  80b4c0:	0007883a 	mov	r3,zero
  80b4c4:	003efc06 	br	80b0b8 <__udivdi3+0x15c>
  80b4c8:	1806943a 	slli	r3,r3,16
  80b4cc:	a44c983a 	sll	r6,r20,r17
  80b4d0:	bdffffcc 	andi	r23,r23,65535
  80b4d4:	1dc7883a 	add	r3,r3,r23
  80b4d8:	30fff82e 	bgeu	r6,r3,80b4bc <__udivdi3+0x560>
  80b4dc:	80bfffc4 	addi	r2,r16,-1
  80b4e0:	0007883a 	mov	r3,zero
  80b4e4:	003ef406 	br	80b0b8 <__udivdi3+0x15c>
  80b4e8:	3804d43a 	srli	r2,r7,16
  80b4ec:	01000404 	movi	r4,16
  80b4f0:	003f0306 	br	80b100 <__udivdi3+0x1a4>
  80b4f4:	3007883a 	mov	r3,r6
  80b4f8:	003eb106 	br	80afc0 <__udivdi3+0x64>
  80b4fc:	0007883a 	mov	r3,zero
  80b500:	00800044 	movi	r2,1
  80b504:	003eec06 	br	80b0b8 <__udivdi3+0x15c>
  80b508:	3805883a 	mov	r2,r7
  80b50c:	0009883a 	mov	r4,zero
  80b510:	003efb06 	br	80b100 <__udivdi3+0x1a4>
  80b514:	8006d43a 	srli	r3,r16,16
  80b518:	04400404 	movi	r17,16
  80b51c:	003f0e06 	br	80b158 <__udivdi3+0x1fc>
  80b520:	3006d43a 	srli	r3,r6,16
  80b524:	04400404 	movi	r17,16
  80b528:	003ea506 	br	80afc0 <__udivdi3+0x64>
  80b52c:	8007883a 	mov	r3,r16
  80b530:	003f0906 	br	80b158 <__udivdi3+0x1fc>
  80b534:	102f883a 	mov	r23,r2
  80b538:	003fc006 	br	80b43c <__udivdi3+0x4e0>
  80b53c:	1839883a 	mov	fp,r3
  80b540:	003f8206 	br	80b34c <__udivdi3+0x3f0>
  80b544:	2821883a 	mov	r16,r5
  80b548:	003fa406 	br	80b3dc <__udivdi3+0x480>
  80b54c:	182f883a 	mov	r23,r3
  80b550:	003f6806 	br	80b2f4 <__udivdi3+0x398>
  80b554:	94bfff84 	addi	r18,r18,-2
  80b558:	003f3706 	br	80b238 <__udivdi3+0x2dc>
  80b55c:	94bfff84 	addi	r18,r18,-2
  80b560:	003ece06 	br	80b09c <__udivdi3+0x140>
  80b564:	ad7fff84 	addi	r21,r21,-2
  80b568:	2409883a 	add	r4,r4,r16
  80b56c:	003eb606 	br	80b048 <__udivdi3+0xec>
  80b570:	ad7fff84 	addi	r21,r21,-2
  80b574:	2409883a 	add	r4,r4,r16
  80b578:	003f1806 	br	80b1dc <__udivdi3+0x280>

0080b57c <__umoddi3>:
  80b57c:	defff304 	addi	sp,sp,-52
  80b580:	dc400415 	stw	r17,16(sp)
  80b584:	dc000315 	stw	r16,12(sp)
  80b588:	dfc00c15 	stw	ra,48(sp)
  80b58c:	df000b15 	stw	fp,44(sp)
  80b590:	ddc00a15 	stw	r23,40(sp)
  80b594:	dd800915 	stw	r22,36(sp)
  80b598:	dd400815 	stw	r21,32(sp)
  80b59c:	dd000715 	stw	r20,28(sp)
  80b5a0:	dcc00615 	stw	r19,24(sp)
  80b5a4:	dc800515 	stw	r18,20(sp)
  80b5a8:	2823883a 	mov	r17,r5
  80b5ac:	2021883a 	mov	r16,r4
  80b5b0:	38003b1e 	bne	r7,zero,80b6a0 <__umoddi3+0x124>
  80b5b4:	3825883a 	mov	r18,r7
  80b5b8:	3029883a 	mov	r20,r6
  80b5bc:	2027883a 	mov	r19,r4
  80b5c0:	29805b2e 	bgeu	r5,r6,80b730 <__umoddi3+0x1b4>
  80b5c4:	00bfffd4 	movui	r2,65535
  80b5c8:	282d883a 	mov	r22,r5
  80b5cc:	11809a2e 	bgeu	r2,r6,80b838 <__umoddi3+0x2bc>
  80b5d0:	00804034 	movhi	r2,256
  80b5d4:	30814436 	bltu	r6,r2,80bae8 <__umoddi3+0x56c>
  80b5d8:	3006d63a 	srli	r3,r6,24
  80b5dc:	04800604 	movi	r18,24
  80b5e0:	00802074 	movhi	r2,129
  80b5e4:	1885883a 	add	r2,r3,r2
  80b5e8:	10837803 	ldbu	r2,3552(r2)
  80b5ec:	00c00804 	movi	r3,32
  80b5f0:	1485883a 	add	r2,r2,r18
  80b5f4:	18a5c83a 	sub	r18,r3,r2
  80b5f8:	18800526 	beq	r3,r2,80b610 <__umoddi3+0x94>
  80b5fc:	8ca2983a 	sll	r17,r17,r18
  80b600:	8084d83a 	srl	r2,r16,r2
  80b604:	34a8983a 	sll	r20,r6,r18
  80b608:	84a6983a 	sll	r19,r16,r18
  80b60c:	146cb03a 	or	r22,r2,r17
  80b610:	a02ed43a 	srli	r23,r20,16
  80b614:	b009883a 	mov	r4,r22
  80b618:	a57fffcc 	andi	r21,r20,65535
  80b61c:	b80b883a 	mov	r5,r23
  80b620:	080bc980 	call	80bc98 <__umodsi3>
  80b624:	b80b883a 	mov	r5,r23
  80b628:	b009883a 	mov	r4,r22
  80b62c:	1023883a 	mov	r17,r2
  80b630:	080bc340 	call	80bc34 <__udivsi3>
  80b634:	a809883a 	mov	r4,r21
  80b638:	100b883a 	mov	r5,r2
  80b63c:	08012200 	call	801220 <__mulsi3>
  80b640:	8822943a 	slli	r17,r17,16
  80b644:	9808d43a 	srli	r4,r19,16
  80b648:	8908b03a 	or	r4,r17,r4
  80b64c:	2080042e 	bgeu	r4,r2,80b660 <__umoddi3+0xe4>
  80b650:	2509883a 	add	r4,r4,r20
  80b654:	25000236 	bltu	r4,r20,80b660 <__umoddi3+0xe4>
  80b658:	2080012e 	bgeu	r4,r2,80b660 <__umoddi3+0xe4>
  80b65c:	2509883a 	add	r4,r4,r20
  80b660:	20a1c83a 	sub	r16,r4,r2
  80b664:	b80b883a 	mov	r5,r23
  80b668:	8009883a 	mov	r4,r16
  80b66c:	080bc980 	call	80bc98 <__umodsi3>
  80b670:	b80b883a 	mov	r5,r23
  80b674:	8009883a 	mov	r4,r16
  80b678:	1023883a 	mov	r17,r2
  80b67c:	080bc340 	call	80bc34 <__udivsi3>
  80b680:	8822943a 	slli	r17,r17,16
  80b684:	100b883a 	mov	r5,r2
  80b688:	a809883a 	mov	r4,r21
  80b68c:	08012200 	call	801220 <__mulsi3>
  80b690:	98ffffcc 	andi	r3,r19,65535
  80b694:	88c6b03a 	or	r3,r17,r3
  80b698:	18805e2e 	bgeu	r3,r2,80b814 <__umoddi3+0x298>
  80b69c:	00005906 	br	80b804 <__umoddi3+0x288>
  80b6a0:	2005883a 	mov	r2,r4
  80b6a4:	29c00d2e 	bgeu	r5,r7,80b6dc <__umoddi3+0x160>
  80b6a8:	2807883a 	mov	r3,r5
  80b6ac:	dfc00c17 	ldw	ra,48(sp)
  80b6b0:	df000b17 	ldw	fp,44(sp)
  80b6b4:	ddc00a17 	ldw	r23,40(sp)
  80b6b8:	dd800917 	ldw	r22,36(sp)
  80b6bc:	dd400817 	ldw	r21,32(sp)
  80b6c0:	dd000717 	ldw	r20,28(sp)
  80b6c4:	dcc00617 	ldw	r19,24(sp)
  80b6c8:	dc800517 	ldw	r18,20(sp)
  80b6cc:	dc400417 	ldw	r17,16(sp)
  80b6d0:	dc000317 	ldw	r16,12(sp)
  80b6d4:	dec00d04 	addi	sp,sp,52
  80b6d8:	f800283a 	ret
  80b6dc:	013fffd4 	movui	r4,65535
  80b6e0:	2807883a 	mov	r3,r5
  80b6e4:	21c0592e 	bgeu	r4,r7,80b84c <__umoddi3+0x2d0>
  80b6e8:	01004034 	movhi	r4,256
  80b6ec:	39010336 	bltu	r7,r4,80bafc <__umoddi3+0x580>
  80b6f0:	3808d63a 	srli	r4,r7,24
  80b6f4:	02000604 	movi	r8,24
  80b6f8:	01402074 	movhi	r5,129
  80b6fc:	214b883a 	add	r5,r4,r5
  80b700:	2d037803 	ldbu	r20,3552(r5)
  80b704:	01000804 	movi	r4,32
  80b708:	a229883a 	add	r20,r20,r8
  80b70c:	252bc83a 	sub	r21,r4,r20
  80b710:	2500531e 	bne	r4,r20,80b860 <__umoddi3+0x2e4>
  80b714:	3c400136 	bltu	r7,r17,80b71c <__umoddi3+0x1a0>
  80b718:	81bfe436 	bltu	r16,r6,80b6ac <__umoddi3+0x130>
  80b71c:	8185c83a 	sub	r2,r16,r6
  80b720:	89cfc83a 	sub	r7,r17,r7
  80b724:	8087803a 	cmpltu	r3,r16,r2
  80b728:	38c7c83a 	sub	r3,r7,r3
  80b72c:	003fdf06 	br	80b6ac <__umoddi3+0x130>
  80b730:	3000041e 	bne	r6,zero,80b744 <__umoddi3+0x1c8>
  80b734:	000b883a 	mov	r5,zero
  80b738:	01000044 	movi	r4,1
  80b73c:	080bc340 	call	80bc34 <__udivsi3>
  80b740:	1029883a 	mov	r20,r2
  80b744:	00bfffd4 	movui	r2,65535
  80b748:	1500362e 	bgeu	r2,r20,80b824 <__umoddi3+0x2a8>
  80b74c:	00804034 	movhi	r2,256
  80b750:	a080ed36 	bltu	r20,r2,80bb08 <__umoddi3+0x58c>
  80b754:	a006d63a 	srli	r3,r20,24
  80b758:	04800604 	movi	r18,24
  80b75c:	00802074 	movhi	r2,129
  80b760:	1885883a 	add	r2,r3,r2
  80b764:	15837803 	ldbu	r22,3552(r2)
  80b768:	00800804 	movi	r2,32
  80b76c:	b4ad883a 	add	r22,r22,r18
  80b770:	15a5c83a 	sub	r18,r2,r22
  80b774:	1580a51e 	bne	r2,r22,80ba0c <__umoddi3+0x490>
  80b778:	a02ed43a 	srli	r23,r20,16
  80b77c:	8d23c83a 	sub	r17,r17,r20
  80b780:	a57fffcc 	andi	r21,r20,65535
  80b784:	8809883a 	mov	r4,r17
  80b788:	b80b883a 	mov	r5,r23
  80b78c:	080bc980 	call	80bc98 <__umodsi3>
  80b790:	8809883a 	mov	r4,r17
  80b794:	b80b883a 	mov	r5,r23
  80b798:	1023883a 	mov	r17,r2
  80b79c:	080bc340 	call	80bc34 <__udivsi3>
  80b7a0:	1009883a 	mov	r4,r2
  80b7a4:	a80b883a 	mov	r5,r21
  80b7a8:	08012200 	call	801220 <__mulsi3>
  80b7ac:	8822943a 	slli	r17,r17,16
  80b7b0:	9808d43a 	srli	r4,r19,16
  80b7b4:	8908b03a 	or	r4,r17,r4
  80b7b8:	2080032e 	bgeu	r4,r2,80b7c8 <__umoddi3+0x24c>
  80b7bc:	2509883a 	add	r4,r4,r20
  80b7c0:	25000136 	bltu	r4,r20,80b7c8 <__umoddi3+0x24c>
  80b7c4:	2080dc36 	bltu	r4,r2,80bb38 <__umoddi3+0x5bc>
  80b7c8:	20a1c83a 	sub	r16,r4,r2
  80b7cc:	b80b883a 	mov	r5,r23
  80b7d0:	8009883a 	mov	r4,r16
  80b7d4:	080bc980 	call	80bc98 <__umodsi3>
  80b7d8:	b80b883a 	mov	r5,r23
  80b7dc:	8009883a 	mov	r4,r16
  80b7e0:	1023883a 	mov	r17,r2
  80b7e4:	8822943a 	slli	r17,r17,16
  80b7e8:	080bc340 	call	80bc34 <__udivsi3>
  80b7ec:	a80b883a 	mov	r5,r21
  80b7f0:	1009883a 	mov	r4,r2
  80b7f4:	08012200 	call	801220 <__mulsi3>
  80b7f8:	9cffffcc 	andi	r19,r19,65535
  80b7fc:	8cc6b03a 	or	r3,r17,r19
  80b800:	1880042e 	bgeu	r3,r2,80b814 <__umoddi3+0x298>
  80b804:	1d07883a 	add	r3,r3,r20
  80b808:	1d000236 	bltu	r3,r20,80b814 <__umoddi3+0x298>
  80b80c:	1880012e 	bgeu	r3,r2,80b814 <__umoddi3+0x298>
  80b810:	1d07883a 	add	r3,r3,r20
  80b814:	1885c83a 	sub	r2,r3,r2
  80b818:	1484d83a 	srl	r2,r2,r18
  80b81c:	0007883a 	mov	r3,zero
  80b820:	003fa206 	br	80b6ac <__umoddi3+0x130>
  80b824:	a0804030 	cmpltui	r2,r20,256
  80b828:	1000ba1e 	bne	r2,zero,80bb14 <__umoddi3+0x598>
  80b82c:	a006d23a 	srli	r3,r20,8
  80b830:	04800204 	movi	r18,8
  80b834:	003fc906 	br	80b75c <__umoddi3+0x1e0>
  80b838:	30804030 	cmpltui	r2,r6,256
  80b83c:	1000ad1e 	bne	r2,zero,80baf4 <__umoddi3+0x578>
  80b840:	3006d23a 	srli	r3,r6,8
  80b844:	04800204 	movi	r18,8
  80b848:	003f6506 	br	80b5e0 <__umoddi3+0x64>
  80b84c:	39004030 	cmpltui	r4,r7,256
  80b850:	2000b21e 	bne	r4,zero,80bb1c <__umoddi3+0x5a0>
  80b854:	3808d23a 	srli	r4,r7,8
  80b858:	02000204 	movi	r8,8
  80b85c:	003fa606 	br	80b6f8 <__umoddi3+0x17c>
  80b860:	3d4e983a 	sll	r7,r7,r21
  80b864:	3508d83a 	srl	r4,r6,r20
  80b868:	8d2cd83a 	srl	r22,r17,r20
  80b86c:	8504d83a 	srl	r2,r16,r20
  80b870:	21e4b03a 	or	r18,r4,r7
  80b874:	8d62983a 	sll	r17,r17,r21
  80b878:	9026d43a 	srli	r19,r18,16
  80b87c:	354c983a 	sll	r6,r6,r21
  80b880:	1444b03a 	or	r2,r2,r17
  80b884:	b009883a 	mov	r4,r22
  80b888:	980b883a 	mov	r5,r19
  80b88c:	d9800115 	stw	r6,4(sp)
  80b890:	d8800015 	stw	r2,0(sp)
  80b894:	080bc980 	call	80bc98 <__umodsi3>
  80b898:	980b883a 	mov	r5,r19
  80b89c:	b009883a 	mov	r4,r22
  80b8a0:	102f883a 	mov	r23,r2
  80b8a4:	947fffcc 	andi	r17,r18,65535
  80b8a8:	080bc340 	call	80bc34 <__udivsi3>
  80b8ac:	8809883a 	mov	r4,r17
  80b8b0:	100b883a 	mov	r5,r2
  80b8b4:	1039883a 	mov	fp,r2
  80b8b8:	08012200 	call	801220 <__mulsi3>
  80b8bc:	d8c00017 	ldw	r3,0(sp)
  80b8c0:	b82e943a 	slli	r23,r23,16
  80b8c4:	8560983a 	sll	r16,r16,r21
  80b8c8:	1808d43a 	srli	r4,r3,16
  80b8cc:	b908b03a 	or	r4,r23,r4
  80b8d0:	2080062e 	bgeu	r4,r2,80b8ec <__umoddi3+0x370>
  80b8d4:	2489883a 	add	r4,r4,r18
  80b8d8:	e17fffc4 	addi	r5,fp,-1
  80b8dc:	24809436 	bltu	r4,r18,80bb30 <__umoddi3+0x5b4>
  80b8e0:	2080932e 	bgeu	r4,r2,80bb30 <__umoddi3+0x5b4>
  80b8e4:	e73fff84 	addi	fp,fp,-2
  80b8e8:	2489883a 	add	r4,r4,r18
  80b8ec:	20adc83a 	sub	r22,r4,r2
  80b8f0:	980b883a 	mov	r5,r19
  80b8f4:	b009883a 	mov	r4,r22
  80b8f8:	080bc980 	call	80bc98 <__umodsi3>
  80b8fc:	980b883a 	mov	r5,r19
  80b900:	b009883a 	mov	r4,r22
  80b904:	102f883a 	mov	r23,r2
  80b908:	080bc340 	call	80bc34 <__udivsi3>
  80b90c:	100b883a 	mov	r5,r2
  80b910:	8809883a 	mov	r4,r17
  80b914:	d8800215 	stw	r2,8(sp)
  80b918:	08012200 	call	801220 <__mulsi3>
  80b91c:	d8c00017 	ldw	r3,0(sp)
  80b920:	b82e943a 	slli	r23,r23,16
  80b924:	d9400217 	ldw	r5,8(sp)
  80b928:	1c7fffcc 	andi	r17,r3,65535
  80b92c:	bc62b03a 	or	r17,r23,r17
  80b930:	8880062e 	bgeu	r17,r2,80b94c <__umoddi3+0x3d0>
  80b934:	8ca3883a 	add	r17,r17,r18
  80b938:	28ffffc4 	addi	r3,r5,-1
  80b93c:	8c807a36 	bltu	r17,r18,80bb28 <__umoddi3+0x5ac>
  80b940:	8880792e 	bgeu	r17,r2,80bb28 <__umoddi3+0x5ac>
  80b944:	297fff84 	addi	r5,r5,-2
  80b948:	8ca3883a 	add	r17,r17,r18
  80b94c:	e02c943a 	slli	r22,fp,16
  80b950:	d9c00117 	ldw	r7,4(sp)
  80b954:	29bfffcc 	andi	r6,r5,65535
  80b958:	b16cb03a 	or	r22,r22,r5
  80b95c:	38ffffcc 	andi	r3,r7,65535
  80b960:	b02cd43a 	srli	r22,r22,16
  80b964:	180b883a 	mov	r5,r3
  80b968:	3009883a 	mov	r4,r6
  80b96c:	3838d43a 	srli	fp,r7,16
  80b970:	182f883a 	mov	r23,r3
  80b974:	d9800015 	stw	r6,0(sp)
  80b978:	88a3c83a 	sub	r17,r17,r2
  80b97c:	08012200 	call	801220 <__mulsi3>
  80b980:	b80b883a 	mov	r5,r23
  80b984:	b009883a 	mov	r4,r22
  80b988:	102f883a 	mov	r23,r2
  80b98c:	08012200 	call	801220 <__mulsi3>
  80b990:	e00b883a 	mov	r5,fp
  80b994:	b009883a 	mov	r4,r22
  80b998:	102d883a 	mov	r22,r2
  80b99c:	08012200 	call	801220 <__mulsi3>
  80b9a0:	d9800017 	ldw	r6,0(sp)
  80b9a4:	e00b883a 	mov	r5,fp
  80b9a8:	1039883a 	mov	fp,r2
  80b9ac:	3009883a 	mov	r4,r6
  80b9b0:	08012200 	call	801220 <__mulsi3>
  80b9b4:	b808d43a 	srli	r4,r23,16
  80b9b8:	1585883a 	add	r2,r2,r22
  80b9bc:	2089883a 	add	r4,r4,r2
  80b9c0:	2580022e 	bgeu	r4,r22,80b9cc <__umoddi3+0x450>
  80b9c4:	00800074 	movhi	r2,1
  80b9c8:	e0b9883a 	add	fp,fp,r2
  80b9cc:	2006d43a 	srli	r3,r4,16
  80b9d0:	2008943a 	slli	r4,r4,16
  80b9d4:	bdffffcc 	andi	r23,r23,65535
  80b9d8:	1f07883a 	add	r3,r3,fp
  80b9dc:	25c9883a 	add	r4,r4,r23
  80b9e0:	88c03a36 	bltu	r17,r3,80bacc <__umoddi3+0x550>
  80b9e4:	88c03826 	beq	r17,r3,80bac8 <__umoddi3+0x54c>
  80b9e8:	8109c83a 	sub	r4,r16,r4
  80b9ec:	8121803a 	cmpltu	r16,r16,r4
  80b9f0:	88c7c83a 	sub	r3,r17,r3
  80b9f4:	1c07c83a 	sub	r3,r3,r16
  80b9f8:	1d04983a 	sll	r2,r3,r20
  80b9fc:	2548d83a 	srl	r4,r4,r21
  80ba00:	1d46d83a 	srl	r3,r3,r21
  80ba04:	1104b03a 	or	r2,r2,r4
  80ba08:	003f2806 	br	80b6ac <__umoddi3+0x130>
  80ba0c:	a4a8983a 	sll	r20,r20,r18
  80ba10:	8da6d83a 	srl	r19,r17,r22
  80ba14:	8ca2983a 	sll	r17,r17,r18
  80ba18:	a02ed43a 	srli	r23,r20,16
  80ba1c:	9809883a 	mov	r4,r19
  80ba20:	85acd83a 	srl	r22,r16,r22
  80ba24:	b80b883a 	mov	r5,r23
  80ba28:	080bc980 	call	80bc98 <__umodsi3>
  80ba2c:	9809883a 	mov	r4,r19
  80ba30:	b80b883a 	mov	r5,r23
  80ba34:	b46cb03a 	or	r22,r22,r17
  80ba38:	a57fffcc 	andi	r21,r20,65535
  80ba3c:	1023883a 	mov	r17,r2
  80ba40:	080bc340 	call	80bc34 <__udivsi3>
  80ba44:	a809883a 	mov	r4,r21
  80ba48:	100b883a 	mov	r5,r2
  80ba4c:	08012200 	call	801220 <__mulsi3>
  80ba50:	8822943a 	slli	r17,r17,16
  80ba54:	b008d43a 	srli	r4,r22,16
  80ba58:	84a6983a 	sll	r19,r16,r18
  80ba5c:	8908b03a 	or	r4,r17,r4
  80ba60:	2080042e 	bgeu	r4,r2,80ba74 <__umoddi3+0x4f8>
  80ba64:	2509883a 	add	r4,r4,r20
  80ba68:	25000236 	bltu	r4,r20,80ba74 <__umoddi3+0x4f8>
  80ba6c:	2080012e 	bgeu	r4,r2,80ba74 <__umoddi3+0x4f8>
  80ba70:	2509883a 	add	r4,r4,r20
  80ba74:	20a1c83a 	sub	r16,r4,r2
  80ba78:	8009883a 	mov	r4,r16
  80ba7c:	b80b883a 	mov	r5,r23
  80ba80:	080bc980 	call	80bc98 <__umodsi3>
  80ba84:	8009883a 	mov	r4,r16
  80ba88:	1021883a 	mov	r16,r2
  80ba8c:	b80b883a 	mov	r5,r23
  80ba90:	8020943a 	slli	r16,r16,16
  80ba94:	080bc340 	call	80bc34 <__udivsi3>
  80ba98:	100b883a 	mov	r5,r2
  80ba9c:	a809883a 	mov	r4,r21
  80baa0:	b47fffcc 	andi	r17,r22,65535
  80baa4:	08012200 	call	801220 <__mulsi3>
  80baa8:	8462b03a 	or	r17,r16,r17
  80baac:	8880042e 	bgeu	r17,r2,80bac0 <__umoddi3+0x544>
  80bab0:	8d23883a 	add	r17,r17,r20
  80bab4:	8d000236 	bltu	r17,r20,80bac0 <__umoddi3+0x544>
  80bab8:	8880012e 	bgeu	r17,r2,80bac0 <__umoddi3+0x544>
  80babc:	8d23883a 	add	r17,r17,r20
  80bac0:	88a3c83a 	sub	r17,r17,r2
  80bac4:	003f2f06 	br	80b784 <__umoddi3+0x208>
  80bac8:	813fc72e 	bgeu	r16,r4,80b9e8 <__umoddi3+0x46c>
  80bacc:	d8800117 	ldw	r2,4(sp)
  80bad0:	20a7c83a 	sub	r19,r4,r2
  80bad4:	24c9803a 	cmpltu	r4,r4,r19
  80bad8:	2489883a 	add	r4,r4,r18
  80badc:	1907c83a 	sub	r3,r3,r4
  80bae0:	9809883a 	mov	r4,r19
  80bae4:	003fc006 	br	80b9e8 <__umoddi3+0x46c>
  80bae8:	3006d43a 	srli	r3,r6,16
  80baec:	04800404 	movi	r18,16
  80baf0:	003ebb06 	br	80b5e0 <__umoddi3+0x64>
  80baf4:	3007883a 	mov	r3,r6
  80baf8:	003eb906 	br	80b5e0 <__umoddi3+0x64>
  80bafc:	3808d43a 	srli	r4,r7,16
  80bb00:	02000404 	movi	r8,16
  80bb04:	003efc06 	br	80b6f8 <__umoddi3+0x17c>
  80bb08:	a006d43a 	srli	r3,r20,16
  80bb0c:	04800404 	movi	r18,16
  80bb10:	003f1206 	br	80b75c <__umoddi3+0x1e0>
  80bb14:	a007883a 	mov	r3,r20
  80bb18:	003f1006 	br	80b75c <__umoddi3+0x1e0>
  80bb1c:	3809883a 	mov	r4,r7
  80bb20:	0011883a 	mov	r8,zero
  80bb24:	003ef406 	br	80b6f8 <__umoddi3+0x17c>
  80bb28:	180b883a 	mov	r5,r3
  80bb2c:	003f8706 	br	80b94c <__umoddi3+0x3d0>
  80bb30:	2839883a 	mov	fp,r5
  80bb34:	003f6d06 	br	80b8ec <__umoddi3+0x370>
  80bb38:	2509883a 	add	r4,r4,r20
  80bb3c:	003f2206 	br	80b7c8 <__umoddi3+0x24c>

0080bb40 <__divsi3>:
  80bb40:	20001a16 	blt	r4,zero,80bbac <__divsi3+0x6c>
  80bb44:	000f883a 	mov	r7,zero
  80bb48:	2800020e 	bge	r5,zero,80bb54 <__divsi3+0x14>
  80bb4c:	014bc83a 	sub	r5,zero,r5
  80bb50:	39c0005c 	xori	r7,r7,1
  80bb54:	200d883a 	mov	r6,r4
  80bb58:	00c00044 	movi	r3,1
  80bb5c:	2900092e 	bgeu	r5,r4,80bb84 <__divsi3+0x44>
  80bb60:	00800804 	movi	r2,32
  80bb64:	00c00044 	movi	r3,1
  80bb68:	00000106 	br	80bb70 <__divsi3+0x30>
  80bb6c:	10001226 	beq	r2,zero,80bbb8 <__divsi3+0x78>
  80bb70:	294b883a 	add	r5,r5,r5
  80bb74:	10bfffc4 	addi	r2,r2,-1
  80bb78:	18c7883a 	add	r3,r3,r3
  80bb7c:	293ffb36 	bltu	r5,r4,80bb6c <__divsi3+0x2c>
  80bb80:	18000d26 	beq	r3,zero,80bbb8 <__divsi3+0x78>
  80bb84:	0005883a 	mov	r2,zero
  80bb88:	31400236 	bltu	r6,r5,80bb94 <__divsi3+0x54>
  80bb8c:	314dc83a 	sub	r6,r6,r5
  80bb90:	10c4b03a 	or	r2,r2,r3
  80bb94:	1806d07a 	srli	r3,r3,1
  80bb98:	280ad07a 	srli	r5,r5,1
  80bb9c:	183ffa1e 	bne	r3,zero,80bb88 <__divsi3+0x48>
  80bba0:	38000126 	beq	r7,zero,80bba8 <__divsi3+0x68>
  80bba4:	0085c83a 	sub	r2,zero,r2
  80bba8:	f800283a 	ret
  80bbac:	0109c83a 	sub	r4,zero,r4
  80bbb0:	01c00044 	movi	r7,1
  80bbb4:	003fe406 	br	80bb48 <__divsi3+0x8>
  80bbb8:	0005883a 	mov	r2,zero
  80bbbc:	003ff806 	br	80bba0 <__divsi3+0x60>

0080bbc0 <__modsi3>:
  80bbc0:	20001916 	blt	r4,zero,80bc28 <__modsi3+0x68>
  80bbc4:	000f883a 	mov	r7,zero
  80bbc8:	2005883a 	mov	r2,r4
  80bbcc:	2800010e 	bge	r5,zero,80bbd4 <__modsi3+0x14>
  80bbd0:	014bc83a 	sub	r5,zero,r5
  80bbd4:	00c00044 	movi	r3,1
  80bbd8:	2900092e 	bgeu	r5,r4,80bc00 <__modsi3+0x40>
  80bbdc:	01800804 	movi	r6,32
  80bbe0:	00c00044 	movi	r3,1
  80bbe4:	00000106 	br	80bbec <__modsi3+0x2c>
  80bbe8:	30000d26 	beq	r6,zero,80bc20 <__modsi3+0x60>
  80bbec:	294b883a 	add	r5,r5,r5
  80bbf0:	31bfffc4 	addi	r6,r6,-1
  80bbf4:	18c7883a 	add	r3,r3,r3
  80bbf8:	293ffb36 	bltu	r5,r4,80bbe8 <__modsi3+0x28>
  80bbfc:	18000826 	beq	r3,zero,80bc20 <__modsi3+0x60>
  80bc00:	1806d07a 	srli	r3,r3,1
  80bc04:	11400136 	bltu	r2,r5,80bc0c <__modsi3+0x4c>
  80bc08:	1145c83a 	sub	r2,r2,r5
  80bc0c:	280ad07a 	srli	r5,r5,1
  80bc10:	183ffb1e 	bne	r3,zero,80bc00 <__modsi3+0x40>
  80bc14:	38000126 	beq	r7,zero,80bc1c <__modsi3+0x5c>
  80bc18:	0085c83a 	sub	r2,zero,r2
  80bc1c:	f800283a 	ret
  80bc20:	2005883a 	mov	r2,r4
  80bc24:	003ffb06 	br	80bc14 <__modsi3+0x54>
  80bc28:	0109c83a 	sub	r4,zero,r4
  80bc2c:	01c00044 	movi	r7,1
  80bc30:	003fe506 	br	80bbc8 <__modsi3+0x8>

0080bc34 <__udivsi3>:
  80bc34:	200d883a 	mov	r6,r4
  80bc38:	2900152e 	bgeu	r5,r4,80bc90 <__udivsi3+0x5c>
  80bc3c:	28001416 	blt	r5,zero,80bc90 <__udivsi3+0x5c>
  80bc40:	00800804 	movi	r2,32
  80bc44:	00c00044 	movi	r3,1
  80bc48:	00000206 	br	80bc54 <__udivsi3+0x20>
  80bc4c:	10000e26 	beq	r2,zero,80bc88 <__udivsi3+0x54>
  80bc50:	28000516 	blt	r5,zero,80bc68 <__udivsi3+0x34>
  80bc54:	294b883a 	add	r5,r5,r5
  80bc58:	10bfffc4 	addi	r2,r2,-1
  80bc5c:	18c7883a 	add	r3,r3,r3
  80bc60:	293ffa36 	bltu	r5,r4,80bc4c <__udivsi3+0x18>
  80bc64:	18000826 	beq	r3,zero,80bc88 <__udivsi3+0x54>
  80bc68:	0005883a 	mov	r2,zero
  80bc6c:	31400236 	bltu	r6,r5,80bc78 <__udivsi3+0x44>
  80bc70:	314dc83a 	sub	r6,r6,r5
  80bc74:	10c4b03a 	or	r2,r2,r3
  80bc78:	1806d07a 	srli	r3,r3,1
  80bc7c:	280ad07a 	srli	r5,r5,1
  80bc80:	183ffa1e 	bne	r3,zero,80bc6c <__udivsi3+0x38>
  80bc84:	f800283a 	ret
  80bc88:	0005883a 	mov	r2,zero
  80bc8c:	f800283a 	ret
  80bc90:	00c00044 	movi	r3,1
  80bc94:	003ff406 	br	80bc68 <__udivsi3+0x34>

0080bc98 <__umodsi3>:
  80bc98:	2005883a 	mov	r2,r4
  80bc9c:	2900132e 	bgeu	r5,r4,80bcec <__umodsi3+0x54>
  80bca0:	28001216 	blt	r5,zero,80bcec <__umodsi3+0x54>
  80bca4:	01800804 	movi	r6,32
  80bca8:	00c00044 	movi	r3,1
  80bcac:	00000206 	br	80bcb8 <__umodsi3+0x20>
  80bcb0:	30000c26 	beq	r6,zero,80bce4 <__umodsi3+0x4c>
  80bcb4:	28000516 	blt	r5,zero,80bccc <__umodsi3+0x34>
  80bcb8:	294b883a 	add	r5,r5,r5
  80bcbc:	31bfffc4 	addi	r6,r6,-1
  80bcc0:	18c7883a 	add	r3,r3,r3
  80bcc4:	293ffa36 	bltu	r5,r4,80bcb0 <__umodsi3+0x18>
  80bcc8:	18000626 	beq	r3,zero,80bce4 <__umodsi3+0x4c>
  80bccc:	1806d07a 	srli	r3,r3,1
  80bcd0:	11400136 	bltu	r2,r5,80bcd8 <__umodsi3+0x40>
  80bcd4:	1145c83a 	sub	r2,r2,r5
  80bcd8:	280ad07a 	srli	r5,r5,1
  80bcdc:	183ffb1e 	bne	r3,zero,80bccc <__umodsi3+0x34>
  80bce0:	f800283a 	ret
  80bce4:	2005883a 	mov	r2,r4
  80bce8:	f800283a 	ret
  80bcec:	00c00044 	movi	r3,1
  80bcf0:	003ff606 	br	80bccc <__umodsi3+0x34>

0080bcf4 <__adddf3>:
  80bcf4:	02000434 	movhi	r8,16
  80bcf8:	423fffc4 	addi	r8,r8,-1
  80bcfc:	2806d53a 	srli	r3,r5,20
  80bd00:	3804d53a 	srli	r2,r7,20
  80bd04:	2a14703a 	and	r10,r5,r8
  80bd08:	3a12703a 	and	r9,r7,r8
  80bd0c:	280ad7fa 	srli	r5,r5,31
  80bd10:	501490fa 	slli	r10,r10,3
  80bd14:	2018d77a 	srli	r12,r4,29
  80bd18:	481290fa 	slli	r9,r9,3
  80bd1c:	3016d77a 	srli	r11,r6,29
  80bd20:	380ed7fa 	srli	r7,r7,31
  80bd24:	defffb04 	addi	sp,sp,-20
  80bd28:	dc800215 	stw	r18,8(sp)
  80bd2c:	dc000015 	stw	r16,0(sp)
  80bd30:	1c81ffcc 	andi	r18,r3,2047
  80bd34:	1081ffcc 	andi	r2,r2,2047
  80bd38:	dfc00415 	stw	ra,16(sp)
  80bd3c:	dcc00315 	stw	r19,12(sp)
  80bd40:	dc400115 	stw	r17,4(sp)
  80bd44:	201c90fa 	slli	r14,r4,3
  80bd48:	301a90fa 	slli	r13,r6,3
  80bd4c:	2821883a 	mov	r16,r5
  80bd50:	6294b03a 	or	r10,r12,r10
  80bd54:	5a52b03a 	or	r9,r11,r9
  80bd58:	9087c83a 	sub	r3,r18,r2
  80bd5c:	29c06126 	beq	r5,r7,80bee4 <__adddf3+0x1f0>
  80bd60:	00c0550e 	bge	zero,r3,80beb8 <__adddf3+0x1c4>
  80bd64:	10007326 	beq	r2,zero,80bf34 <__adddf3+0x240>
  80bd68:	9081ffd8 	cmpnei	r2,r18,2047
  80bd6c:	1000bd26 	beq	r2,zero,80c064 <__adddf3+0x370>
  80bd70:	4a402034 	orhi	r9,r9,128
  80bd74:	18800e48 	cmpgei	r2,r3,57
  80bd78:	1000ef1e 	bne	r2,zero,80c138 <__adddf3+0x444>
  80bd7c:	18800808 	cmpgei	r2,r3,32
  80bd80:	1001321e 	bne	r2,zero,80c24c <__adddf3+0x558>
  80bd84:	00800804 	movi	r2,32
  80bd88:	10c5c83a 	sub	r2,r2,r3
  80bd8c:	68c8d83a 	srl	r4,r13,r3
  80bd90:	48a2983a 	sll	r17,r9,r2
  80bd94:	689a983a 	sll	r13,r13,r2
  80bd98:	48c6d83a 	srl	r3,r9,r3
  80bd9c:	8922b03a 	or	r17,r17,r4
  80bda0:	681ac03a 	cmpne	r13,r13,zero
  80bda4:	8b62b03a 	or	r17,r17,r13
  80bda8:	50d5c83a 	sub	r10,r10,r3
  80bdac:	7463c83a 	sub	r17,r14,r17
  80bdb0:	7451803a 	cmpltu	r8,r14,r17
  80bdb4:	5211c83a 	sub	r8,r10,r8
  80bdb8:	4080202c 	andhi	r2,r8,128
  80bdbc:	10008d26 	beq	r2,zero,80bff4 <__adddf3+0x300>
  80bdc0:	02402034 	movhi	r9,128
  80bdc4:	4a7fffc4 	addi	r9,r9,-1
  80bdc8:	4266703a 	and	r19,r8,r9
  80bdcc:	9800b326 	beq	r19,zero,80c09c <__adddf3+0x3a8>
  80bdd0:	9809883a 	mov	r4,r19
  80bdd4:	08011cc0 	call	8011cc <__clzsi2>
  80bdd8:	10fffe04 	addi	r3,r2,-8
  80bddc:	02000804 	movi	r8,32
  80bde0:	40d1c83a 	sub	r8,r8,r3
  80bde4:	8a10d83a 	srl	r8,r17,r8
  80bde8:	98d2983a 	sll	r9,r19,r3
  80bdec:	88e2983a 	sll	r17,r17,r3
  80bdf0:	4250b03a 	or	r8,r8,r9
  80bdf4:	1c80b216 	blt	r3,r18,80c0c0 <__adddf3+0x3cc>
  80bdf8:	1c87c83a 	sub	r3,r3,r18
  80bdfc:	19000044 	addi	r4,r3,1
  80be00:	20800808 	cmpgei	r2,r4,32
  80be04:	10006f1e 	bne	r2,zero,80bfc4 <__adddf3+0x2d0>
  80be08:	00800804 	movi	r2,32
  80be0c:	1105c83a 	sub	r2,r2,r4
  80be10:	8906d83a 	srl	r3,r17,r4
  80be14:	88a2983a 	sll	r17,r17,r2
  80be18:	4084983a 	sll	r2,r8,r2
  80be1c:	4110d83a 	srl	r8,r8,r4
  80be20:	8822c03a 	cmpne	r17,r17,zero
  80be24:	10c4b03a 	or	r2,r2,r3
  80be28:	1462b03a 	or	r17,r2,r17
  80be2c:	0025883a 	mov	r18,zero
  80be30:	888001cc 	andi	r2,r17,7
  80be34:	10000726 	beq	r2,zero,80be54 <__adddf3+0x160>
  80be38:	888003cc 	andi	r2,r17,15
  80be3c:	10800120 	cmpeqi	r2,r2,4
  80be40:	1000041e 	bne	r2,zero,80be54 <__adddf3+0x160>
  80be44:	88c00104 	addi	r3,r17,4
  80be48:	1c63803a 	cmpltu	r17,r3,r17
  80be4c:	4451883a 	add	r8,r8,r17
  80be50:	1823883a 	mov	r17,r3
  80be54:	4080202c 	andhi	r2,r8,128
  80be58:	10006826 	beq	r2,zero,80bffc <__adddf3+0x308>
  80be5c:	90c00044 	addi	r3,r18,1
  80be60:	1881ffe0 	cmpeqi	r2,r3,2047
  80be64:	18c1ffcc 	andi	r3,r3,2047
  80be68:	10007a1e 	bne	r2,zero,80c054 <__adddf3+0x360>
  80be6c:	00bfe034 	movhi	r2,65408
  80be70:	10bfffc4 	addi	r2,r2,-1
  80be74:	4090703a 	and	r8,r8,r2
  80be78:	4004977a 	slli	r2,r8,29
  80be7c:	4010927a 	slli	r8,r8,9
  80be80:	8822d0fa 	srli	r17,r17,3
  80be84:	4010d33a 	srli	r8,r8,12
  80be88:	1444b03a 	or	r2,r2,r17
  80be8c:	1806953a 	slli	r3,r3,20
  80be90:	802097fa 	slli	r16,r16,31
  80be94:	1a06b03a 	or	r3,r3,r8
  80be98:	1c06b03a 	or	r3,r3,r16
  80be9c:	dfc00417 	ldw	ra,16(sp)
  80bea0:	dcc00317 	ldw	r19,12(sp)
  80bea4:	dc800217 	ldw	r18,8(sp)
  80bea8:	dc400117 	ldw	r17,4(sp)
  80beac:	dc000017 	ldw	r16,0(sp)
  80beb0:	dec00504 	addi	sp,sp,20
  80beb4:	f800283a 	ret
  80beb8:	18002626 	beq	r3,zero,80bf54 <__adddf3+0x260>
  80bebc:	1487c83a 	sub	r3,r2,r18
  80bec0:	9000ba1e 	bne	r18,zero,80c1ac <__adddf3+0x4b8>
  80bec4:	5388b03a 	or	r4,r10,r14
  80bec8:	20011826 	beq	r4,zero,80c32c <__adddf3+0x638>
  80becc:	193fffc4 	addi	r4,r3,-1
  80bed0:	20015726 	beq	r4,zero,80c430 <__adddf3+0x73c>
  80bed4:	18c1ffd8 	cmpnei	r3,r3,2047
  80bed8:	18013026 	beq	r3,zero,80c39c <__adddf3+0x6a8>
  80bedc:	2007883a 	mov	r3,r4
  80bee0:	0000b506 	br	80c1b8 <__adddf3+0x4c4>
  80bee4:	00c07b0e 	bge	zero,r3,80c0d4 <__adddf3+0x3e0>
  80bee8:	10002e26 	beq	r2,zero,80bfa4 <__adddf3+0x2b0>
  80beec:	9081ffd8 	cmpnei	r2,r18,2047
  80bef0:	10005c26 	beq	r2,zero,80c064 <__adddf3+0x370>
  80bef4:	4a402034 	orhi	r9,r9,128
  80bef8:	18800e48 	cmpgei	r2,r3,57
  80befc:	10004b1e 	bne	r2,zero,80c02c <__adddf3+0x338>
  80bf00:	18800808 	cmpgei	r2,r3,32
  80bf04:	1000ec26 	beq	r2,zero,80c2b8 <__adddf3+0x5c4>
  80bf08:	1c7ff804 	addi	r17,r3,-32
  80bf0c:	19000820 	cmpeqi	r4,r3,32
  80bf10:	4c44d83a 	srl	r2,r9,r17
  80bf14:	2000041e 	bne	r4,zero,80bf28 <__adddf3+0x234>
  80bf18:	01001004 	movi	r4,64
  80bf1c:	20c7c83a 	sub	r3,r4,r3
  80bf20:	48d2983a 	sll	r9,r9,r3
  80bf24:	6a5ab03a 	or	r13,r13,r9
  80bf28:	6822c03a 	cmpne	r17,r13,zero
  80bf2c:	88a2b03a 	or	r17,r17,r2
  80bf30:	00004006 	br	80c034 <__adddf3+0x340>
  80bf34:	4b44b03a 	or	r2,r9,r13
  80bf38:	10008226 	beq	r2,zero,80c144 <__adddf3+0x450>
  80bf3c:	18bfffc4 	addi	r2,r3,-1
  80bf40:	10011026 	beq	r2,zero,80c384 <__adddf3+0x690>
  80bf44:	18c1ffd8 	cmpnei	r3,r3,2047
  80bf48:	18004626 	beq	r3,zero,80c064 <__adddf3+0x370>
  80bf4c:	1007883a 	mov	r3,r2
  80bf50:	003f8806 	br	80bd74 <__adddf3+0x80>
  80bf54:	90800044 	addi	r2,r18,1
  80bf58:	1081ff8c 	andi	r2,r2,2046
  80bf5c:	1000a51e 	bne	r2,zero,80c1f4 <__adddf3+0x500>
  80bf60:	538ab03a 	or	r5,r10,r14
  80bf64:	4b44b03a 	or	r2,r9,r13
  80bf68:	9000f81e 	bne	r18,zero,80c34c <__adddf3+0x658>
  80bf6c:	28013726 	beq	r5,zero,80c44c <__adddf3+0x758>
  80bf70:	10011226 	beq	r2,zero,80c3bc <__adddf3+0x6c8>
  80bf74:	7363c83a 	sub	r17,r14,r13
  80bf78:	7445803a 	cmpltu	r2,r14,r17
  80bf7c:	5251c83a 	sub	r8,r10,r9
  80bf80:	4091c83a 	sub	r8,r8,r2
  80bf84:	4080202c 	andhi	r2,r8,128
  80bf88:	10018f26 	beq	r2,zero,80c5c8 <__adddf3+0x8d4>
  80bf8c:	6ba3c83a 	sub	r17,r13,r14
  80bf90:	4a95c83a 	sub	r10,r9,r10
  80bf94:	6c51803a 	cmpltu	r8,r13,r17
  80bf98:	5211c83a 	sub	r8,r10,r8
  80bf9c:	3821883a 	mov	r16,r7
  80bfa0:	003fa306 	br	80be30 <__adddf3+0x13c>
  80bfa4:	4b44b03a 	or	r2,r9,r13
  80bfa8:	10006626 	beq	r2,zero,80c144 <__adddf3+0x450>
  80bfac:	18bfffc4 	addi	r2,r3,-1
  80bfb0:	1000ec26 	beq	r2,zero,80c364 <__adddf3+0x670>
  80bfb4:	18c1ffd8 	cmpnei	r3,r3,2047
  80bfb8:	18012d26 	beq	r3,zero,80c470 <__adddf3+0x77c>
  80bfbc:	1007883a 	mov	r3,r2
  80bfc0:	003fcd06 	br	80bef8 <__adddf3+0x204>
  80bfc4:	18fff844 	addi	r3,r3,-31
  80bfc8:	20800820 	cmpeqi	r2,r4,32
  80bfcc:	40c6d83a 	srl	r3,r8,r3
  80bfd0:	1000041e 	bne	r2,zero,80bfe4 <__adddf3+0x2f0>
  80bfd4:	00801004 	movi	r2,64
  80bfd8:	1109c83a 	sub	r4,r2,r4
  80bfdc:	4110983a 	sll	r8,r8,r4
  80bfe0:	8a22b03a 	or	r17,r17,r8
  80bfe4:	8822c03a 	cmpne	r17,r17,zero
  80bfe8:	88e2b03a 	or	r17,r17,r3
  80bfec:	0011883a 	mov	r8,zero
  80bff0:	0025883a 	mov	r18,zero
  80bff4:	888001cc 	andi	r2,r17,7
  80bff8:	103f8f1e 	bne	r2,zero,80be38 <__adddf3+0x144>
  80bffc:	8822d0fa 	srli	r17,r17,3
  80c000:	4004977a 	slli	r2,r8,29
  80c004:	4014d0fa 	srli	r10,r8,3
  80c008:	9007883a 	mov	r3,r18
  80c00c:	8884b03a 	or	r2,r17,r2
  80c010:	1901ffe0 	cmpeqi	r4,r3,2047
  80c014:	2000191e 	bne	r4,zero,80c07c <__adddf3+0x388>
  80c018:	02000434 	movhi	r8,16
  80c01c:	423fffc4 	addi	r8,r8,-1
  80c020:	5210703a 	and	r8,r10,r8
  80c024:	18c1ffcc 	andi	r3,r3,2047
  80c028:	003f9806 	br	80be8c <__adddf3+0x198>
  80c02c:	4b62b03a 	or	r17,r9,r13
  80c030:	8822c03a 	cmpne	r17,r17,zero
  80c034:	8ba3883a 	add	r17,r17,r14
  80c038:	8b91803a 	cmpltu	r8,r17,r14
  80c03c:	4291883a 	add	r8,r8,r10
  80c040:	4080202c 	andhi	r2,r8,128
  80c044:	103feb26 	beq	r2,zero,80bff4 <__adddf3+0x300>
  80c048:	94800044 	addi	r18,r18,1
  80c04c:	9081ffe0 	cmpeqi	r2,r18,2047
  80c050:	10007426 	beq	r2,zero,80c224 <__adddf3+0x530>
  80c054:	00c1ffc4 	movi	r3,2047
  80c058:	0011883a 	mov	r8,zero
  80c05c:	0005883a 	mov	r2,zero
  80c060:	003f8a06 	br	80be8c <__adddf3+0x198>
  80c064:	500a977a 	slli	r5,r10,29
  80c068:	00c80034 	movhi	r3,8192
  80c06c:	18ffffc4 	addi	r3,r3,-1
  80c070:	5014d0fa 	srli	r10,r10,3
  80c074:	20c4703a 	and	r2,r4,r3
  80c078:	1144b03a 	or	r2,r2,r5
  80c07c:	1286b03a 	or	r3,r2,r10
  80c080:	18015426 	beq	r3,zero,80c5d4 <__adddf3+0x8e0>
  80c084:	00c00434 	movhi	r3,16
  80c088:	18ffffc4 	addi	r3,r3,-1
  80c08c:	52000234 	orhi	r8,r10,8
  80c090:	40d0703a 	and	r8,r8,r3
  80c094:	00c1ffc4 	movi	r3,2047
  80c098:	003f7c06 	br	80be8c <__adddf3+0x198>
  80c09c:	8809883a 	mov	r4,r17
  80c0a0:	08011cc0 	call	8011cc <__clzsi2>
  80c0a4:	10c00604 	addi	r3,r2,24
  80c0a8:	19000808 	cmpgei	r4,r3,32
  80c0ac:	203f4b26 	beq	r4,zero,80bddc <__adddf3+0xe8>
  80c0b0:	123ffe04 	addi	r8,r2,-8
  80c0b4:	8a10983a 	sll	r8,r17,r8
  80c0b8:	0023883a 	mov	r17,zero
  80c0bc:	1cbf4e0e 	bge	r3,r18,80bdf8 <__adddf3+0x104>
  80c0c0:	00bfe034 	movhi	r2,65408
  80c0c4:	10bfffc4 	addi	r2,r2,-1
  80c0c8:	90e5c83a 	sub	r18,r18,r3
  80c0cc:	4090703a 	and	r8,r8,r2
  80c0d0:	003f5706 	br	80be30 <__adddf3+0x13c>
  80c0d4:	18002226 	beq	r3,zero,80c160 <__adddf3+0x46c>
  80c0d8:	1487c83a 	sub	r3,r2,r18
  80c0dc:	90006e26 	beq	r18,zero,80c298 <__adddf3+0x5a4>
  80c0e0:	1101ffd8 	cmpnei	r4,r2,2047
  80c0e4:	2000e926 	beq	r4,zero,80c48c <__adddf3+0x798>
  80c0e8:	52802034 	orhi	r10,r10,128
  80c0ec:	19000e48 	cmpgei	r4,r3,57
  80c0f0:	2000b91e 	bne	r4,zero,80c3d8 <__adddf3+0x6e4>
  80c0f4:	19000808 	cmpgei	r4,r3,32
  80c0f8:	2001101e 	bne	r4,zero,80c53c <__adddf3+0x848>
  80c0fc:	01000804 	movi	r4,32
  80c100:	20c9c83a 	sub	r4,r4,r3
  80c104:	5122983a 	sll	r17,r10,r4
  80c108:	70cad83a 	srl	r5,r14,r3
  80c10c:	7108983a 	sll	r4,r14,r4
  80c110:	50d4d83a 	srl	r10,r10,r3
  80c114:	8962b03a 	or	r17,r17,r5
  80c118:	2008c03a 	cmpne	r4,r4,zero
  80c11c:	8922b03a 	or	r17,r17,r4
  80c120:	4a93883a 	add	r9,r9,r10
  80c124:	8b63883a 	add	r17,r17,r13
  80c128:	8b51803a 	cmpltu	r8,r17,r13
  80c12c:	4251883a 	add	r8,r8,r9
  80c130:	1025883a 	mov	r18,r2
  80c134:	003fc206 	br	80c040 <__adddf3+0x34c>
  80c138:	4b62b03a 	or	r17,r9,r13
  80c13c:	8822c03a 	cmpne	r17,r17,zero
  80c140:	003f1a06 	br	80bdac <__adddf3+0xb8>
  80c144:	500c977a 	slli	r6,r10,29
  80c148:	01480034 	movhi	r5,8192
  80c14c:	297fffc4 	addi	r5,r5,-1
  80c150:	2144703a 	and	r2,r4,r5
  80c154:	5014d0fa 	srli	r10,r10,3
  80c158:	1184b03a 	or	r2,r2,r6
  80c15c:	003fac06 	br	80c010 <__adddf3+0x31c>
  80c160:	90800044 	addi	r2,r18,1
  80c164:	1141ff8c 	andi	r5,r2,2046
  80c168:	28005e1e 	bne	r5,zero,80c2e4 <__adddf3+0x5f0>
  80c16c:	5384b03a 	or	r2,r10,r14
  80c170:	9000a71e 	bne	r18,zero,80c410 <__adddf3+0x71c>
  80c174:	1000e526 	beq	r2,zero,80c50c <__adddf3+0x818>
  80c178:	4b44b03a 	or	r2,r9,r13
  80c17c:	10008f26 	beq	r2,zero,80c3bc <__adddf3+0x6c8>
  80c180:	7363883a 	add	r17,r14,r13
  80c184:	5255883a 	add	r10,r10,r9
  80c188:	8b91803a 	cmpltu	r8,r17,r14
  80c18c:	5211883a 	add	r8,r10,r8
  80c190:	4080202c 	andhi	r2,r8,128
  80c194:	103f9726 	beq	r2,zero,80bff4 <__adddf3+0x300>
  80c198:	00bfe034 	movhi	r2,65408
  80c19c:	10bfffc4 	addi	r2,r2,-1
  80c1a0:	4090703a 	and	r8,r8,r2
  80c1a4:	04800044 	movi	r18,1
  80c1a8:	003f9206 	br	80bff4 <__adddf3+0x300>
  80c1ac:	1101ffd8 	cmpnei	r4,r2,2047
  80c1b0:	20007a26 	beq	r4,zero,80c39c <__adddf3+0x6a8>
  80c1b4:	52802034 	orhi	r10,r10,128
  80c1b8:	19000e48 	cmpgei	r4,r3,57
  80c1bc:	20002e1e 	bne	r4,zero,80c278 <__adddf3+0x584>
  80c1c0:	19000808 	cmpgei	r4,r3,32
  80c1c4:	2000871e 	bne	r4,zero,80c3e4 <__adddf3+0x6f0>
  80c1c8:	01000804 	movi	r4,32
  80c1cc:	20c9c83a 	sub	r4,r4,r3
  80c1d0:	5122983a 	sll	r17,r10,r4
  80c1d4:	70cad83a 	srl	r5,r14,r3
  80c1d8:	711c983a 	sll	r14,r14,r4
  80c1dc:	50d4d83a 	srl	r10,r10,r3
  80c1e0:	8962b03a 	or	r17,r17,r5
  80c1e4:	701cc03a 	cmpne	r14,r14,zero
  80c1e8:	8ba2b03a 	or	r17,r17,r14
  80c1ec:	4a93c83a 	sub	r9,r9,r10
  80c1f0:	00002306 	br	80c280 <__adddf3+0x58c>
  80c1f4:	7363c83a 	sub	r17,r14,r13
  80c1f8:	5267c83a 	sub	r19,r10,r9
  80c1fc:	7451803a 	cmpltu	r8,r14,r17
  80c200:	9a27c83a 	sub	r19,r19,r8
  80c204:	9880202c 	andhi	r2,r19,128
  80c208:	1000421e 	bne	r2,zero,80c314 <__adddf3+0x620>
  80c20c:	8cc4b03a 	or	r2,r17,r19
  80c210:	103eee1e 	bne	r2,zero,80bdcc <__adddf3+0xd8>
  80c214:	0015883a 	mov	r10,zero
  80c218:	0021883a 	mov	r16,zero
  80c21c:	003f7e06 	br	80c018 <__adddf3+0x324>
  80c220:	04800084 	movi	r18,2
  80c224:	00bfe034 	movhi	r2,65408
  80c228:	10bfffc4 	addi	r2,r2,-1
  80c22c:	8806d07a 	srli	r3,r17,1
  80c230:	4090703a 	and	r8,r8,r2
  80c234:	400497fa 	slli	r2,r8,31
  80c238:	8c40004c 	andi	r17,r17,1
  80c23c:	1c62b03a 	or	r17,r3,r17
  80c240:	4010d07a 	srli	r8,r8,1
  80c244:	1462b03a 	or	r17,r2,r17
  80c248:	003ef906 	br	80be30 <__adddf3+0x13c>
  80c24c:	1c7ff804 	addi	r17,r3,-32
  80c250:	19000820 	cmpeqi	r4,r3,32
  80c254:	4c44d83a 	srl	r2,r9,r17
  80c258:	2000041e 	bne	r4,zero,80c26c <__adddf3+0x578>
  80c25c:	01001004 	movi	r4,64
  80c260:	20c7c83a 	sub	r3,r4,r3
  80c264:	48d2983a 	sll	r9,r9,r3
  80c268:	6a5ab03a 	or	r13,r13,r9
  80c26c:	6822c03a 	cmpne	r17,r13,zero
  80c270:	88a2b03a 	or	r17,r17,r2
  80c274:	003ecd06 	br	80bdac <__adddf3+0xb8>
  80c278:	5394b03a 	or	r10,r10,r14
  80c27c:	5022c03a 	cmpne	r17,r10,zero
  80c280:	6c63c83a 	sub	r17,r13,r17
  80c284:	6c51803a 	cmpltu	r8,r13,r17
  80c288:	4a11c83a 	sub	r8,r9,r8
  80c28c:	3821883a 	mov	r16,r7
  80c290:	1025883a 	mov	r18,r2
  80c294:	003ec806 	br	80bdb8 <__adddf3+0xc4>
  80c298:	5388b03a 	or	r4,r10,r14
  80c29c:	20008226 	beq	r4,zero,80c4a8 <__adddf3+0x7b4>
  80c2a0:	193fffc4 	addi	r4,r3,-1
  80c2a4:	2000b026 	beq	r4,zero,80c568 <__adddf3+0x874>
  80c2a8:	18c1ffd8 	cmpnei	r3,r3,2047
  80c2ac:	18007726 	beq	r3,zero,80c48c <__adddf3+0x798>
  80c2b0:	2007883a 	mov	r3,r4
  80c2b4:	003f8d06 	br	80c0ec <__adddf3+0x3f8>
  80c2b8:	00800804 	movi	r2,32
  80c2bc:	10c5c83a 	sub	r2,r2,r3
  80c2c0:	68c8d83a 	srl	r4,r13,r3
  80c2c4:	48a2983a 	sll	r17,r9,r2
  80c2c8:	689a983a 	sll	r13,r13,r2
  80c2cc:	48c6d83a 	srl	r3,r9,r3
  80c2d0:	8922b03a 	or	r17,r17,r4
  80c2d4:	681ac03a 	cmpne	r13,r13,zero
  80c2d8:	8b62b03a 	or	r17,r17,r13
  80c2dc:	50d5883a 	add	r10,r10,r3
  80c2e0:	003f5406 	br	80c034 <__adddf3+0x340>
  80c2e4:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c2e8:	183f5a1e 	bne	r3,zero,80c054 <__adddf3+0x360>
  80c2ec:	7351883a 	add	r8,r14,r13
  80c2f0:	4387803a 	cmpltu	r3,r8,r14
  80c2f4:	5255883a 	add	r10,r10,r9
  80c2f8:	50c7883a 	add	r3,r10,r3
  80c2fc:	401ad07a 	srli	r13,r8,1
  80c300:	182297fa 	slli	r17,r3,31
  80c304:	1810d07a 	srli	r8,r3,1
  80c308:	1025883a 	mov	r18,r2
  80c30c:	8b62b03a 	or	r17,r17,r13
  80c310:	003f3806 	br	80bff4 <__adddf3+0x300>
  80c314:	6ba3c83a 	sub	r17,r13,r14
  80c318:	4a93c83a 	sub	r9,r9,r10
  80c31c:	6c51803a 	cmpltu	r8,r13,r17
  80c320:	4a27c83a 	sub	r19,r9,r8
  80c324:	3821883a 	mov	r16,r7
  80c328:	003ea806 	br	80bdcc <__adddf3+0xd8>
  80c32c:	480a977a 	slli	r5,r9,29
  80c330:	01080034 	movhi	r4,8192
  80c334:	213fffc4 	addi	r4,r4,-1
  80c338:	3104703a 	and	r2,r6,r4
  80c33c:	4814d0fa 	srli	r10,r9,3
  80c340:	1144b03a 	or	r2,r2,r5
  80c344:	3821883a 	mov	r16,r7
  80c348:	003f3106 	br	80c010 <__adddf3+0x31c>
  80c34c:	28005d1e 	bne	r5,zero,80c4c4 <__adddf3+0x7d0>
  80c350:	1000121e 	bne	r2,zero,80c39c <__adddf3+0x6a8>
  80c354:	0021883a 	mov	r16,zero
  80c358:	4015883a 	mov	r10,r8
  80c35c:	00bfffc4 	movi	r2,-1
  80c360:	003f4806 	br	80c084 <__adddf3+0x390>
  80c364:	7363883a 	add	r17,r14,r13
  80c368:	5255883a 	add	r10,r10,r9
  80c36c:	8b91803a 	cmpltu	r8,r17,r14
  80c370:	5211883a 	add	r8,r10,r8
  80c374:	4080202c 	andhi	r2,r8,128
  80c378:	103fa91e 	bne	r2,zero,80c220 <__adddf3+0x52c>
  80c37c:	04800044 	movi	r18,1
  80c380:	003f1c06 	br	80bff4 <__adddf3+0x300>
  80c384:	7363c83a 	sub	r17,r14,r13
  80c388:	5255c83a 	sub	r10,r10,r9
  80c38c:	7451803a 	cmpltu	r8,r14,r17
  80c390:	5211c83a 	sub	r8,r10,r8
  80c394:	04800044 	movi	r18,1
  80c398:	003e8706 	br	80bdb8 <__adddf3+0xc4>
  80c39c:	4806977a 	slli	r3,r9,29
  80c3a0:	00880034 	movhi	r2,8192
  80c3a4:	10bfffc4 	addi	r2,r2,-1
  80c3a8:	3084703a 	and	r2,r6,r2
  80c3ac:	4814d0fa 	srli	r10,r9,3
  80c3b0:	10c4b03a 	or	r2,r2,r3
  80c3b4:	3821883a 	mov	r16,r7
  80c3b8:	003f3006 	br	80c07c <__adddf3+0x388>
  80c3bc:	500a977a 	slli	r5,r10,29
  80c3c0:	00880034 	movhi	r2,8192
  80c3c4:	10bfffc4 	addi	r2,r2,-1
  80c3c8:	2084703a 	and	r2,r4,r2
  80c3cc:	5014d0fa 	srli	r10,r10,3
  80c3d0:	1144b03a 	or	r2,r2,r5
  80c3d4:	003f1006 	br	80c018 <__adddf3+0x324>
  80c3d8:	5394b03a 	or	r10,r10,r14
  80c3dc:	5022c03a 	cmpne	r17,r10,zero
  80c3e0:	003f5006 	br	80c124 <__adddf3+0x430>
  80c3e4:	1c7ff804 	addi	r17,r3,-32
  80c3e8:	19400820 	cmpeqi	r5,r3,32
  80c3ec:	5448d83a 	srl	r4,r10,r17
  80c3f0:	2800041e 	bne	r5,zero,80c404 <__adddf3+0x710>
  80c3f4:	01401004 	movi	r5,64
  80c3f8:	28c7c83a 	sub	r3,r5,r3
  80c3fc:	50d4983a 	sll	r10,r10,r3
  80c400:	729cb03a 	or	r14,r14,r10
  80c404:	7022c03a 	cmpne	r17,r14,zero
  80c408:	8922b03a 	or	r17,r17,r4
  80c40c:	003f9c06 	br	80c280 <__adddf3+0x58c>
  80c410:	10005a1e 	bne	r2,zero,80c57c <__adddf3+0x888>
  80c414:	4804977a 	slli	r2,r9,29
  80c418:	00c80034 	movhi	r3,8192
  80c41c:	18ffffc4 	addi	r3,r3,-1
  80c420:	30cc703a 	and	r6,r6,r3
  80c424:	4814d0fa 	srli	r10,r9,3
  80c428:	1184b03a 	or	r2,r2,r6
  80c42c:	003f1306 	br	80c07c <__adddf3+0x388>
  80c430:	6ba3c83a 	sub	r17,r13,r14
  80c434:	4a95c83a 	sub	r10,r9,r10
  80c438:	6c51803a 	cmpltu	r8,r13,r17
  80c43c:	5211c83a 	sub	r8,r10,r8
  80c440:	3821883a 	mov	r16,r7
  80c444:	04800044 	movi	r18,1
  80c448:	003e5b06 	br	80bdb8 <__adddf3+0xc4>
  80c44c:	103f7126 	beq	r2,zero,80c214 <__adddf3+0x520>
  80c450:	4808977a 	slli	r4,r9,29
  80c454:	00880034 	movhi	r2,8192
  80c458:	10bfffc4 	addi	r2,r2,-1
  80c45c:	3084703a 	and	r2,r6,r2
  80c460:	4814d0fa 	srli	r10,r9,3
  80c464:	1104b03a 	or	r2,r2,r4
  80c468:	3821883a 	mov	r16,r7
  80c46c:	003eea06 	br	80c018 <__adddf3+0x324>
  80c470:	5006977a 	slli	r3,r10,29
  80c474:	00880034 	movhi	r2,8192
  80c478:	10bfffc4 	addi	r2,r2,-1
  80c47c:	2084703a 	and	r2,r4,r2
  80c480:	5014d0fa 	srli	r10,r10,3
  80c484:	10c4b03a 	or	r2,r2,r3
  80c488:	003efc06 	br	80c07c <__adddf3+0x388>
  80c48c:	4806977a 	slli	r3,r9,29
  80c490:	00880034 	movhi	r2,8192
  80c494:	10bfffc4 	addi	r2,r2,-1
  80c498:	3084703a 	and	r2,r6,r2
  80c49c:	4814d0fa 	srli	r10,r9,3
  80c4a0:	10c4b03a 	or	r2,r2,r3
  80c4a4:	003ef506 	br	80c07c <__adddf3+0x388>
  80c4a8:	4808977a 	slli	r4,r9,29
  80c4ac:	00880034 	movhi	r2,8192
  80c4b0:	10bfffc4 	addi	r2,r2,-1
  80c4b4:	3084703a 	and	r2,r6,r2
  80c4b8:	4814d0fa 	srli	r10,r9,3
  80c4bc:	1104b03a 	or	r2,r2,r4
  80c4c0:	003ed306 	br	80c010 <__adddf3+0x31c>
  80c4c4:	500a977a 	slli	r5,r10,29
  80c4c8:	5014d0fa 	srli	r10,r10,3
  80c4cc:	10001626 	beq	r2,zero,80c528 <__adddf3+0x834>
  80c4d0:	00c80034 	movhi	r3,8192
  80c4d4:	18ffffc4 	addi	r3,r3,-1
  80c4d8:	20c4703a 	and	r2,r4,r3
  80c4dc:	5100022c 	andhi	r4,r10,8
  80c4e0:	1144b03a 	or	r2,r2,r5
  80c4e4:	203ee526 	beq	r4,zero,80c07c <__adddf3+0x388>
  80c4e8:	4808d0fa 	srli	r4,r9,3
  80c4ec:	2140022c 	andhi	r5,r4,8
  80c4f0:	283ee21e 	bne	r5,zero,80c07c <__adddf3+0x388>
  80c4f4:	4812977a 	slli	r9,r9,29
  80c4f8:	30c4703a 	and	r2,r6,r3
  80c4fc:	3821883a 	mov	r16,r7
  80c500:	1244b03a 	or	r2,r2,r9
  80c504:	2015883a 	mov	r10,r4
  80c508:	003edc06 	br	80c07c <__adddf3+0x388>
  80c50c:	4804977a 	slli	r2,r9,29
  80c510:	01080034 	movhi	r4,8192
  80c514:	213fffc4 	addi	r4,r4,-1
  80c518:	310c703a 	and	r6,r6,r4
  80c51c:	4814d0fa 	srli	r10,r9,3
  80c520:	1184b03a 	or	r2,r2,r6
  80c524:	003ebc06 	br	80c018 <__adddf3+0x324>
  80c528:	00880034 	movhi	r2,8192
  80c52c:	10bfffc4 	addi	r2,r2,-1
  80c530:	2084703a 	and	r2,r4,r2
  80c534:	1144b03a 	or	r2,r2,r5
  80c538:	003ed006 	br	80c07c <__adddf3+0x388>
  80c53c:	193ff804 	addi	r4,r3,-32
  80c540:	19400820 	cmpeqi	r5,r3,32
  80c544:	5108d83a 	srl	r4,r10,r4
  80c548:	2800041e 	bne	r5,zero,80c55c <__adddf3+0x868>
  80c54c:	01401004 	movi	r5,64
  80c550:	28c7c83a 	sub	r3,r5,r3
  80c554:	50d4983a 	sll	r10,r10,r3
  80c558:	729cb03a 	or	r14,r14,r10
  80c55c:	7022c03a 	cmpne	r17,r14,zero
  80c560:	8922b03a 	or	r17,r17,r4
  80c564:	003eef06 	br	80c124 <__adddf3+0x430>
  80c568:	7363883a 	add	r17,r14,r13
  80c56c:	5255883a 	add	r10,r10,r9
  80c570:	8b51803a 	cmpltu	r8,r17,r13
  80c574:	5211883a 	add	r8,r10,r8
  80c578:	003f7e06 	br	80c374 <__adddf3+0x680>
  80c57c:	4b50b03a 	or	r8,r9,r13
  80c580:	500a977a 	slli	r5,r10,29
  80c584:	5014d0fa 	srli	r10,r10,3
  80c588:	403fe726 	beq	r8,zero,80c528 <__adddf3+0x834>
  80c58c:	00c80034 	movhi	r3,8192
  80c590:	18ffffc4 	addi	r3,r3,-1
  80c594:	20c4703a 	and	r2,r4,r3
  80c598:	5100022c 	andhi	r4,r10,8
  80c59c:	1144b03a 	or	r2,r2,r5
  80c5a0:	203eb626 	beq	r4,zero,80c07c <__adddf3+0x388>
  80c5a4:	4808d0fa 	srli	r4,r9,3
  80c5a8:	2140022c 	andhi	r5,r4,8
  80c5ac:	283eb31e 	bne	r5,zero,80c07c <__adddf3+0x388>
  80c5b0:	4804977a 	slli	r2,r9,29
  80c5b4:	30cc703a 	and	r6,r6,r3
  80c5b8:	3821883a 	mov	r16,r7
  80c5bc:	3084b03a 	or	r2,r6,r2
  80c5c0:	2015883a 	mov	r10,r4
  80c5c4:	003ead06 	br	80c07c <__adddf3+0x388>
  80c5c8:	8a04b03a 	or	r2,r17,r8
  80c5cc:	103f1126 	beq	r2,zero,80c214 <__adddf3+0x520>
  80c5d0:	003e8806 	br	80bff4 <__adddf3+0x300>
  80c5d4:	0005883a 	mov	r2,zero
  80c5d8:	00c1ffc4 	movi	r3,2047
  80c5dc:	0011883a 	mov	r8,zero
  80c5e0:	003e2a06 	br	80be8c <__adddf3+0x198>

0080c5e4 <__divdf3>:
  80c5e4:	2810d53a 	srli	r8,r5,20
  80c5e8:	defff004 	addi	sp,sp,-64
  80c5ec:	dc000615 	stw	r16,24(sp)
  80c5f0:	04000434 	movhi	r16,16
  80c5f4:	df000e15 	stw	fp,56(sp)
  80c5f8:	ddc00d15 	stw	r23,52(sp)
  80c5fc:	dd800c15 	stw	r22,48(sp)
  80c600:	dd000a15 	stw	r20,40(sp)
  80c604:	843fffc4 	addi	r16,r16,-1
  80c608:	dfc00f15 	stw	ra,60(sp)
  80c60c:	dd400b15 	stw	r21,44(sp)
  80c610:	dcc00915 	stw	r19,36(sp)
  80c614:	dc800815 	stw	r18,32(sp)
  80c618:	dc400715 	stw	r17,28(sp)
  80c61c:	4201ffcc 	andi	r8,r8,2047
  80c620:	282ed7fa 	srli	r23,r5,31
  80c624:	3039883a 	mov	fp,r6
  80c628:	382d883a 	mov	r22,r7
  80c62c:	2029883a 	mov	r20,r4
  80c630:	2c20703a 	and	r16,r5,r16
  80c634:	40006826 	beq	r8,zero,80c7d8 <__divdf3+0x1f4>
  80c638:	4081ffe0 	cmpeqi	r2,r8,2047
  80c63c:	1000791e 	bne	r2,zero,80c824 <__divdf3+0x240>
  80c640:	2026d77a 	srli	r19,r4,29
  80c644:	800a90fa 	slli	r5,r16,3
  80c648:	202890fa 	slli	r20,r4,3
  80c64c:	44bf0044 	addi	r18,r8,-1023
  80c650:	994ab03a 	or	r5,r19,r5
  80c654:	2cc02034 	orhi	r19,r5,128
  80c658:	0021883a 	mov	r16,zero
  80c65c:	0023883a 	mov	r17,zero
  80c660:	b010d53a 	srli	r8,r22,20
  80c664:	00c00434 	movhi	r3,16
  80c668:	18ffffc4 	addi	r3,r3,-1
  80c66c:	4201ffcc 	andi	r8,r8,2047
  80c670:	b02ad7fa 	srli	r21,r22,31
  80c674:	b0ec703a 	and	r22,r22,r3
  80c678:	40004626 	beq	r8,zero,80c794 <__divdf3+0x1b0>
  80c67c:	4081ffe0 	cmpeqi	r2,r8,2047
  80c680:	10006f1e 	bne	r2,zero,80c840 <__divdf3+0x25c>
  80c684:	b00690fa 	slli	r3,r22,3
  80c688:	e004d77a 	srli	r2,fp,29
  80c68c:	e01290fa 	slli	r9,fp,3
  80c690:	423f0044 	addi	r8,r8,-1023
  80c694:	10c6b03a 	or	r3,r2,r3
  80c698:	1d802034 	orhi	r22,r3,128
  80c69c:	9225c83a 	sub	r18,r18,r8
  80c6a0:	0007883a 	mov	r3,zero
  80c6a4:	80800428 	cmpgeui	r2,r16,16
  80c6a8:	bd4ef03a 	xor	r7,r23,r21
  80c6ac:	1000a71e 	bne	r2,zero,80c94c <__divdf3+0x368>
  80c6b0:	800c90ba 	slli	r6,r16,2
  80c6b4:	00802074 	movhi	r2,129
  80c6b8:	3085883a 	add	r2,r6,r2
  80c6bc:	10b1b117 	ldw	r2,-14652(r2)
  80c6c0:	1000683a 	jmp	r2
  80c6c4:	0080c94c 	andi	r2,zero,805
  80c6c8:	0080c770 	cmpltui	r2,zero,797
  80c6cc:	0080c720 	cmpeqi	r2,zero,796
  80c6d0:	0080c780 	call	80c78 <__alt_mem_sdram-0x77f388>
  80c6d4:	0080c720 	cmpeqi	r2,zero,796
  80c6d8:	0080c8f0 	cmpltui	r2,zero,803
  80c6dc:	0080c720 	cmpeqi	r2,zero,796
  80c6e0:	0080c780 	call	80c78 <__alt_mem_sdram-0x77f388>
  80c6e4:	0080c770 	cmpltui	r2,zero,797
  80c6e8:	0080c770 	cmpltui	r2,zero,797
  80c6ec:	0080c8f0 	cmpltui	r2,zero,803
  80c6f0:	0080c780 	call	80c78 <__alt_mem_sdram-0x77f388>
  80c6f4:	0080c704 	movi	r2,796
  80c6f8:	0080c704 	movi	r2,796
  80c6fc:	0080c704 	movi	r2,796
  80c700:	0080c908 	cmpgei	r2,zero,804
  80c704:	b80f883a 	mov	r7,r23
  80c708:	888000a0 	cmpeqi	r2,r17,2
  80c70c:	1000181e 	bne	r2,zero,80c770 <__divdf3+0x18c>
  80c710:	888000e0 	cmpeqi	r2,r17,3
  80c714:	1001f61e 	bne	r2,zero,80cef0 <__divdf3+0x90c>
  80c718:	88800060 	cmpeqi	r2,r17,1
  80c71c:	10006126 	beq	r2,zero,80c8a4 <__divdf3+0x2c0>
  80c720:	0007883a 	mov	r3,zero
  80c724:	000b883a 	mov	r5,zero
  80c728:	0029883a 	mov	r20,zero
  80c72c:	1806953a 	slli	r3,r3,20
  80c730:	380e97fa 	slli	r7,r7,31
  80c734:	a005883a 	mov	r2,r20
  80c738:	1946b03a 	or	r3,r3,r5
  80c73c:	19c6b03a 	or	r3,r3,r7
  80c740:	dfc00f17 	ldw	ra,60(sp)
  80c744:	df000e17 	ldw	fp,56(sp)
  80c748:	ddc00d17 	ldw	r23,52(sp)
  80c74c:	dd800c17 	ldw	r22,48(sp)
  80c750:	dd400b17 	ldw	r21,44(sp)
  80c754:	dd000a17 	ldw	r20,40(sp)
  80c758:	dcc00917 	ldw	r19,36(sp)
  80c75c:	dc800817 	ldw	r18,32(sp)
  80c760:	dc400717 	ldw	r17,28(sp)
  80c764:	dc000617 	ldw	r16,24(sp)
  80c768:	dec01004 	addi	sp,sp,64
  80c76c:	f800283a 	ret
  80c770:	00c1ffc4 	movi	r3,2047
  80c774:	000b883a 	mov	r5,zero
  80c778:	0029883a 	mov	r20,zero
  80c77c:	003feb06 	br	80c72c <__divdf3+0x148>
  80c780:	a80f883a 	mov	r7,r21
  80c784:	b027883a 	mov	r19,r22
  80c788:	4829883a 	mov	r20,r9
  80c78c:	1823883a 	mov	r17,r3
  80c790:	003fdd06 	br	80c708 <__divdf3+0x124>
  80c794:	b712b03a 	or	r9,r22,fp
  80c798:	48003e26 	beq	r9,zero,80c894 <__divdf3+0x2b0>
  80c79c:	b0017726 	beq	r22,zero,80cd7c <__divdf3+0x798>
  80c7a0:	b009883a 	mov	r4,r22
  80c7a4:	08011cc0 	call	8011cc <__clzsi2>
  80c7a8:	117ffd44 	addi	r5,r2,-11
  80c7ac:	01000744 	movi	r4,29
  80c7b0:	127ffe04 	addi	r9,r2,-8
  80c7b4:	2149c83a 	sub	r4,r4,r5
  80c7b8:	b246983a 	sll	r3,r22,r9
  80c7bc:	e108d83a 	srl	r4,fp,r4
  80c7c0:	e252983a 	sll	r9,fp,r9
  80c7c4:	20ecb03a 	or	r22,r4,r3
  80c7c8:	1491883a 	add	r8,r2,r18
  80c7cc:	4480fcc4 	addi	r18,r8,1011
  80c7d0:	0007883a 	mov	r3,zero
  80c7d4:	003fb306 	br	80c6a4 <__divdf3+0xc0>
  80c7d8:	8126b03a 	or	r19,r16,r4
  80c7dc:	2023883a 	mov	r17,r4
  80c7e0:	98002726 	beq	r19,zero,80c880 <__divdf3+0x29c>
  80c7e4:	80017026 	beq	r16,zero,80cda8 <__divdf3+0x7c4>
  80c7e8:	8009883a 	mov	r4,r16
  80c7ec:	08011cc0 	call	8011cc <__clzsi2>
  80c7f0:	113ffd44 	addi	r4,r2,-11
  80c7f4:	00c00744 	movi	r3,29
  80c7f8:	14fffe04 	addi	r19,r2,-8
  80c7fc:	1907c83a 	sub	r3,r3,r4
  80c800:	84ca983a 	sll	r5,r16,r19
  80c804:	88c6d83a 	srl	r3,r17,r3
  80c808:	8ce8983a 	sll	r20,r17,r19
  80c80c:	1966b03a 	or	r19,r3,r5
  80c810:	023f0344 	movi	r8,-1011
  80c814:	40a5c83a 	sub	r18,r8,r2
  80c818:	0021883a 	mov	r16,zero
  80c81c:	0023883a 	mov	r17,zero
  80c820:	003f8f06 	br	80c660 <__divdf3+0x7c>
  80c824:	8126b03a 	or	r19,r16,r4
  80c828:	9800101e 	bne	r19,zero,80c86c <__divdf3+0x288>
  80c82c:	0029883a 	mov	r20,zero
  80c830:	04000204 	movi	r16,8
  80c834:	0481ffc4 	movi	r18,2047
  80c838:	04400084 	movi	r17,2
  80c83c:	003f8806 	br	80c660 <__divdf3+0x7c>
  80c840:	b712b03a 	or	r9,r22,fp
  80c844:	94be0044 	addi	r18,r18,-2047
  80c848:	4800041e 	bne	r9,zero,80c85c <__divdf3+0x278>
  80c84c:	84000094 	ori	r16,r16,2
  80c850:	002d883a 	mov	r22,zero
  80c854:	00c00084 	movi	r3,2
  80c858:	003f9206 	br	80c6a4 <__divdf3+0xc0>
  80c85c:	840000d4 	ori	r16,r16,3
  80c860:	e013883a 	mov	r9,fp
  80c864:	00c000c4 	movi	r3,3
  80c868:	003f8e06 	br	80c6a4 <__divdf3+0xc0>
  80c86c:	8027883a 	mov	r19,r16
  80c870:	0481ffc4 	movi	r18,2047
  80c874:	04000304 	movi	r16,12
  80c878:	044000c4 	movi	r17,3
  80c87c:	003f7806 	br	80c660 <__divdf3+0x7c>
  80c880:	0029883a 	mov	r20,zero
  80c884:	04000104 	movi	r16,4
  80c888:	0025883a 	mov	r18,zero
  80c88c:	04400044 	movi	r17,1
  80c890:	003f7306 	br	80c660 <__divdf3+0x7c>
  80c894:	84000054 	ori	r16,r16,1
  80c898:	002d883a 	mov	r22,zero
  80c89c:	00c00044 	movi	r3,1
  80c8a0:	003f8006 	br	80c6a4 <__divdf3+0xc0>
  80c8a4:	9440ffc4 	addi	r17,r18,1023
  80c8a8:	0441050e 	bge	zero,r17,80ccc0 <__divdf3+0x6dc>
  80c8ac:	a08001cc 	andi	r2,r20,7
  80c8b0:	10016c1e 	bne	r2,zero,80ce64 <__divdf3+0x880>
  80c8b4:	a008d0fa 	srli	r4,r20,3
  80c8b8:	9880402c 	andhi	r2,r19,256
  80c8bc:	10000426 	beq	r2,zero,80c8d0 <__divdf3+0x2ec>
  80c8c0:	00bfc034 	movhi	r2,65280
  80c8c4:	10bfffc4 	addi	r2,r2,-1
  80c8c8:	98a6703a 	and	r19,r19,r2
  80c8cc:	94410004 	addi	r17,r18,1024
  80c8d0:	8881ffc8 	cmpgei	r2,r17,2047
  80c8d4:	103fa61e 	bne	r2,zero,80c770 <__divdf3+0x18c>
  80c8d8:	9828977a 	slli	r20,r19,29
  80c8dc:	980a927a 	slli	r5,r19,9
  80c8e0:	88c1ffcc 	andi	r3,r17,2047
  80c8e4:	a128b03a 	or	r20,r20,r4
  80c8e8:	280ad33a 	srli	r5,r5,12
  80c8ec:	003f8f06 	br	80c72c <__divdf3+0x148>
  80c8f0:	01400434 	movhi	r5,16
  80c8f4:	000f883a 	mov	r7,zero
  80c8f8:	297fffc4 	addi	r5,r5,-1
  80c8fc:	053fffc4 	movi	r20,-1
  80c900:	00c1ffc4 	movi	r3,2047
  80c904:	003f8906 	br	80c72c <__divdf3+0x148>
  80c908:	9880022c 	andhi	r2,r19,8
  80c90c:	10000926 	beq	r2,zero,80c934 <__divdf3+0x350>
  80c910:	b080022c 	andhi	r2,r22,8
  80c914:	1000071e 	bne	r2,zero,80c934 <__divdf3+0x350>
  80c918:	00800434 	movhi	r2,16
  80c91c:	b1400234 	orhi	r5,r22,8
  80c920:	10bfffc4 	addi	r2,r2,-1
  80c924:	288a703a 	and	r5,r5,r2
  80c928:	a80f883a 	mov	r7,r21
  80c92c:	4829883a 	mov	r20,r9
  80c930:	003ff306 	br	80c900 <__divdf3+0x31c>
  80c934:	00800434 	movhi	r2,16
  80c938:	99400234 	orhi	r5,r19,8
  80c93c:	10bfffc4 	addi	r2,r2,-1
  80c940:	288a703a 	and	r5,r5,r2
  80c944:	b80f883a 	mov	r7,r23
  80c948:	003fed06 	br	80c900 <__divdf3+0x31c>
  80c94c:	b4c10536 	bltu	r22,r19,80cd64 <__divdf3+0x780>
  80c950:	b4c10326 	beq	r22,r19,80cd60 <__divdf3+0x77c>
  80c954:	94bfffc4 	addi	r18,r18,-1
  80c958:	a039883a 	mov	fp,r20
  80c95c:	9821883a 	mov	r16,r19
  80c960:	0023883a 	mov	r17,zero
  80c964:	b006923a 	slli	r3,r22,8
  80c968:	482cd63a 	srli	r22,r9,24
  80c96c:	8009883a 	mov	r4,r16
  80c970:	182ed43a 	srli	r23,r3,16
  80c974:	b0ecb03a 	or	r22,r22,r3
  80c978:	d9c00015 	stw	r7,0(sp)
  80c97c:	b80b883a 	mov	r5,r23
  80c980:	482a923a 	slli	r21,r9,8
  80c984:	b53fffcc 	andi	r20,r22,65535
  80c988:	080bc340 	call	80bc34 <__udivsi3>
  80c98c:	100b883a 	mov	r5,r2
  80c990:	a009883a 	mov	r4,r20
  80c994:	1027883a 	mov	r19,r2
  80c998:	08012200 	call	801220 <__mulsi3>
  80c99c:	8009883a 	mov	r4,r16
  80c9a0:	b80b883a 	mov	r5,r23
  80c9a4:	1021883a 	mov	r16,r2
  80c9a8:	080bc980 	call	80bc98 <__umodsi3>
  80c9ac:	1004943a 	slli	r2,r2,16
  80c9b0:	e008d43a 	srli	r4,fp,16
  80c9b4:	d9c00017 	ldw	r7,0(sp)
  80c9b8:	2088b03a 	or	r4,r4,r2
  80c9bc:	2400042e 	bgeu	r4,r16,80c9d0 <__divdf3+0x3ec>
  80c9c0:	2589883a 	add	r4,r4,r22
  80c9c4:	98bfffc4 	addi	r2,r19,-1
  80c9c8:	2581082e 	bgeu	r4,r22,80cdec <__divdf3+0x808>
  80c9cc:	1027883a 	mov	r19,r2
  80c9d0:	2421c83a 	sub	r16,r4,r16
  80c9d4:	b80b883a 	mov	r5,r23
  80c9d8:	8009883a 	mov	r4,r16
  80c9dc:	d9c00215 	stw	r7,8(sp)
  80c9e0:	080bc340 	call	80bc34 <__udivsi3>
  80c9e4:	100b883a 	mov	r5,r2
  80c9e8:	a009883a 	mov	r4,r20
  80c9ec:	d8800115 	stw	r2,4(sp)
  80c9f0:	08012200 	call	801220 <__mulsi3>
  80c9f4:	b80b883a 	mov	r5,r23
  80c9f8:	8009883a 	mov	r4,r16
  80c9fc:	d8800015 	stw	r2,0(sp)
  80ca00:	080bc980 	call	80bc98 <__umodsi3>
  80ca04:	100c943a 	slli	r6,r2,16
  80ca08:	d8c00017 	ldw	r3,0(sp)
  80ca0c:	e73fffcc 	andi	fp,fp,65535
  80ca10:	e18cb03a 	or	r6,fp,r6
  80ca14:	da000117 	ldw	r8,4(sp)
  80ca18:	d9c00217 	ldw	r7,8(sp)
  80ca1c:	30c0042e 	bgeu	r6,r3,80ca30 <__divdf3+0x44c>
  80ca20:	358d883a 	add	r6,r6,r22
  80ca24:	40bfffc4 	addi	r2,r8,-1
  80ca28:	3580ec2e 	bgeu	r6,r22,80cddc <__divdf3+0x7f8>
  80ca2c:	1011883a 	mov	r8,r2
  80ca30:	9826943a 	slli	r19,r19,16
  80ca34:	af3fffcc 	andi	fp,r21,65535
  80ca38:	30c7c83a 	sub	r3,r6,r3
  80ca3c:	9a26b03a 	or	r19,r19,r8
  80ca40:	9810d43a 	srli	r8,r19,16
  80ca44:	9abfffcc 	andi	r10,r19,65535
  80ca48:	5009883a 	mov	r4,r10
  80ca4c:	e00b883a 	mov	r5,fp
  80ca50:	d9c00515 	stw	r7,20(sp)
  80ca54:	d8c00315 	stw	r3,12(sp)
  80ca58:	da800415 	stw	r10,16(sp)
  80ca5c:	da000015 	stw	r8,0(sp)
  80ca60:	08012200 	call	801220 <__mulsi3>
  80ca64:	da000017 	ldw	r8,0(sp)
  80ca68:	e00b883a 	mov	r5,fp
  80ca6c:	d8800215 	stw	r2,8(sp)
  80ca70:	4009883a 	mov	r4,r8
  80ca74:	08012200 	call	801220 <__mulsi3>
  80ca78:	da000017 	ldw	r8,0(sp)
  80ca7c:	a820d43a 	srli	r16,r21,16
  80ca80:	d8800115 	stw	r2,4(sp)
  80ca84:	4009883a 	mov	r4,r8
  80ca88:	800b883a 	mov	r5,r16
  80ca8c:	08012200 	call	801220 <__mulsi3>
  80ca90:	da800417 	ldw	r10,16(sp)
  80ca94:	8009883a 	mov	r4,r16
  80ca98:	d8800015 	stw	r2,0(sp)
  80ca9c:	500b883a 	mov	r5,r10
  80caa0:	08012200 	call	801220 <__mulsi3>
  80caa4:	d9800217 	ldw	r6,8(sp)
  80caa8:	da000117 	ldw	r8,4(sp)
  80caac:	da400017 	ldw	r9,0(sp)
  80cab0:	3008d43a 	srli	r4,r6,16
  80cab4:	1205883a 	add	r2,r2,r8
  80cab8:	d8c00317 	ldw	r3,12(sp)
  80cabc:	2089883a 	add	r4,r4,r2
  80cac0:	d9c00517 	ldw	r7,20(sp)
  80cac4:	2200022e 	bgeu	r4,r8,80cad0 <__divdf3+0x4ec>
  80cac8:	00800074 	movhi	r2,1
  80cacc:	4893883a 	add	r9,r9,r2
  80cad0:	200ad43a 	srli	r5,r4,16
  80cad4:	2008943a 	slli	r4,r4,16
  80cad8:	31bfffcc 	andi	r6,r6,65535
  80cadc:	2a4b883a 	add	r5,r5,r9
  80cae0:	218d883a 	add	r6,r4,r6
  80cae4:	19409436 	bltu	r3,r5,80cd38 <__divdf3+0x754>
  80cae8:	19409226 	beq	r3,r5,80cd34 <__divdf3+0x750>
  80caec:	898dc83a 	sub	r6,r17,r6
  80caf0:	89a3803a 	cmpltu	r17,r17,r6
  80caf4:	1947c83a 	sub	r3,r3,r5
  80caf8:	1c47c83a 	sub	r3,r3,r17
  80cafc:	9440ffc4 	addi	r17,r18,1023
  80cb00:	b0c0d326 	beq	r22,r3,80ce50 <__divdf3+0x86c>
  80cb04:	1809883a 	mov	r4,r3
  80cb08:	b80b883a 	mov	r5,r23
  80cb0c:	d9800315 	stw	r6,12(sp)
  80cb10:	d9c00215 	stw	r7,8(sp)
  80cb14:	d8c00015 	stw	r3,0(sp)
  80cb18:	080bc340 	call	80bc34 <__udivsi3>
  80cb1c:	100b883a 	mov	r5,r2
  80cb20:	a009883a 	mov	r4,r20
  80cb24:	d8800115 	stw	r2,4(sp)
  80cb28:	08012200 	call	801220 <__mulsi3>
  80cb2c:	d8c00017 	ldw	r3,0(sp)
  80cb30:	b80b883a 	mov	r5,r23
  80cb34:	d8800015 	stw	r2,0(sp)
  80cb38:	1809883a 	mov	r4,r3
  80cb3c:	080bc980 	call	80bc98 <__umodsi3>
  80cb40:	d9800317 	ldw	r6,12(sp)
  80cb44:	1006943a 	slli	r3,r2,16
  80cb48:	da400017 	ldw	r9,0(sp)
  80cb4c:	3008d43a 	srli	r4,r6,16
  80cb50:	da000117 	ldw	r8,4(sp)
  80cb54:	d9c00217 	ldw	r7,8(sp)
  80cb58:	20c6b03a 	or	r3,r4,r3
  80cb5c:	1a40062e 	bgeu	r3,r9,80cb78 <__divdf3+0x594>
  80cb60:	1d87883a 	add	r3,r3,r22
  80cb64:	40bfffc4 	addi	r2,r8,-1
  80cb68:	1d80c836 	bltu	r3,r22,80ce8c <__divdf3+0x8a8>
  80cb6c:	1a40c72e 	bgeu	r3,r9,80ce8c <__divdf3+0x8a8>
  80cb70:	423fff84 	addi	r8,r8,-2
  80cb74:	1d87883a 	add	r3,r3,r22
  80cb78:	1a47c83a 	sub	r3,r3,r9
  80cb7c:	1809883a 	mov	r4,r3
  80cb80:	b80b883a 	mov	r5,r23
  80cb84:	d9800415 	stw	r6,16(sp)
  80cb88:	d9c00315 	stw	r7,12(sp)
  80cb8c:	da000215 	stw	r8,8(sp)
  80cb90:	d8c00115 	stw	r3,4(sp)
  80cb94:	080bc340 	call	80bc34 <__udivsi3>
  80cb98:	100b883a 	mov	r5,r2
  80cb9c:	a009883a 	mov	r4,r20
  80cba0:	d8800015 	stw	r2,0(sp)
  80cba4:	08012200 	call	801220 <__mulsi3>
  80cba8:	d8c00117 	ldw	r3,4(sp)
  80cbac:	b80b883a 	mov	r5,r23
  80cbb0:	102f883a 	mov	r23,r2
  80cbb4:	1809883a 	mov	r4,r3
  80cbb8:	080bc980 	call	80bc98 <__umodsi3>
  80cbbc:	d9800417 	ldw	r6,16(sp)
  80cbc0:	1004943a 	slli	r2,r2,16
  80cbc4:	da400017 	ldw	r9,0(sp)
  80cbc8:	31bfffcc 	andi	r6,r6,65535
  80cbcc:	308cb03a 	or	r6,r6,r2
  80cbd0:	da000217 	ldw	r8,8(sp)
  80cbd4:	d9c00317 	ldw	r7,12(sp)
  80cbd8:	35c0062e 	bgeu	r6,r23,80cbf4 <__divdf3+0x610>
  80cbdc:	358d883a 	add	r6,r6,r22
  80cbe0:	48bfffc4 	addi	r2,r9,-1
  80cbe4:	3580a736 	bltu	r6,r22,80ce84 <__divdf3+0x8a0>
  80cbe8:	35c0a62e 	bgeu	r6,r23,80ce84 <__divdf3+0x8a0>
  80cbec:	4a7fff84 	addi	r9,r9,-2
  80cbf0:	358d883a 	add	r6,r6,r22
  80cbf4:	4028943a 	slli	r20,r8,16
  80cbf8:	35d5c83a 	sub	r10,r6,r23
  80cbfc:	e009883a 	mov	r4,fp
  80cc00:	a268b03a 	or	r20,r20,r9
  80cc04:	a23fffcc 	andi	r8,r20,65535
  80cc08:	a02ed43a 	srli	r23,r20,16
  80cc0c:	400b883a 	mov	r5,r8
  80cc10:	d9c00315 	stw	r7,12(sp)
  80cc14:	da800215 	stw	r10,8(sp)
  80cc18:	da000115 	stw	r8,4(sp)
  80cc1c:	08012200 	call	801220 <__mulsi3>
  80cc20:	e00b883a 	mov	r5,fp
  80cc24:	b809883a 	mov	r4,r23
  80cc28:	1039883a 	mov	fp,r2
  80cc2c:	08012200 	call	801220 <__mulsi3>
  80cc30:	8009883a 	mov	r4,r16
  80cc34:	b80b883a 	mov	r5,r23
  80cc38:	d8800015 	stw	r2,0(sp)
  80cc3c:	08012200 	call	801220 <__mulsi3>
  80cc40:	da000117 	ldw	r8,4(sp)
  80cc44:	8009883a 	mov	r4,r16
  80cc48:	1021883a 	mov	r16,r2
  80cc4c:	400b883a 	mov	r5,r8
  80cc50:	08012200 	call	801220 <__mulsi3>
  80cc54:	d9800017 	ldw	r6,0(sp)
  80cc58:	e006d43a 	srli	r3,fp,16
  80cc5c:	da800217 	ldw	r10,8(sp)
  80cc60:	1185883a 	add	r2,r2,r6
  80cc64:	1887883a 	add	r3,r3,r2
  80cc68:	d9c00317 	ldw	r7,12(sp)
  80cc6c:	1980022e 	bgeu	r3,r6,80cc78 <__divdf3+0x694>
  80cc70:	00800074 	movhi	r2,1
  80cc74:	80a1883a 	add	r16,r16,r2
  80cc78:	1808d43a 	srli	r4,r3,16
  80cc7c:	1806943a 	slli	r3,r3,16
  80cc80:	e73fffcc 	andi	fp,fp,65535
  80cc84:	2409883a 	add	r4,r4,r16
  80cc88:	1f07883a 	add	r3,r3,fp
  80cc8c:	51000436 	bltu	r10,r4,80cca0 <__divdf3+0x6bc>
  80cc90:	51000226 	beq	r10,r4,80cc9c <__divdf3+0x6b8>
  80cc94:	a5000054 	ori	r20,r20,1
  80cc98:	003f0306 	br	80c8a8 <__divdf3+0x2c4>
  80cc9c:	183f0226 	beq	r3,zero,80c8a8 <__divdf3+0x2c4>
  80cca0:	b28d883a 	add	r6,r22,r10
  80cca4:	a0bfffc4 	addi	r2,r20,-1
  80cca8:	35806536 	bltu	r6,r22,80ce40 <__divdf3+0x85c>
  80ccac:	31008036 	bltu	r6,r4,80ceb0 <__divdf3+0x8cc>
  80ccb0:	31009426 	beq	r6,r4,80cf04 <__divdf3+0x920>
  80ccb4:	1029883a 	mov	r20,r2
  80ccb8:	003ff606 	br	80cc94 <__divdf3+0x6b0>
  80ccbc:	053fffc4 	movi	r20,-1
  80ccc0:	01400044 	movi	r5,1
  80ccc4:	2c4bc83a 	sub	r5,r5,r17
  80ccc8:	28800e48 	cmpgei	r2,r5,57
  80cccc:	103e941e 	bne	r2,zero,80c720 <__divdf3+0x13c>
  80ccd0:	28800808 	cmpgei	r2,r5,32
  80ccd4:	1000491e 	bne	r2,zero,80cdfc <__divdf3+0x818>
  80ccd8:	92010784 	addi	r8,r18,1054
  80ccdc:	9a04983a 	sll	r2,r19,r8
  80cce0:	a146d83a 	srl	r3,r20,r5
  80cce4:	a210983a 	sll	r8,r20,r8
  80cce8:	994ad83a 	srl	r5,r19,r5
  80ccec:	10e8b03a 	or	r20,r2,r3
  80ccf0:	4010c03a 	cmpne	r8,r8,zero
  80ccf4:	a228b03a 	or	r20,r20,r8
  80ccf8:	a08001cc 	andi	r2,r20,7
  80ccfc:	10000726 	beq	r2,zero,80cd1c <__divdf3+0x738>
  80cd00:	a08003cc 	andi	r2,r20,15
  80cd04:	10800120 	cmpeqi	r2,r2,4
  80cd08:	1000041e 	bne	r2,zero,80cd1c <__divdf3+0x738>
  80cd0c:	a0800104 	addi	r2,r20,4
  80cd10:	1529803a 	cmpltu	r20,r2,r20
  80cd14:	2d0b883a 	add	r5,r5,r20
  80cd18:	1029883a 	mov	r20,r2
  80cd1c:	2880202c 	andhi	r2,r5,128
  80cd20:	10006f26 	beq	r2,zero,80cee0 <__divdf3+0x8fc>
  80cd24:	00c00044 	movi	r3,1
  80cd28:	000b883a 	mov	r5,zero
  80cd2c:	0029883a 	mov	r20,zero
  80cd30:	003e7e06 	br	80c72c <__divdf3+0x148>
  80cd34:	89bf6d2e 	bgeu	r17,r6,80caec <__divdf3+0x508>
  80cd38:	8d63883a 	add	r17,r17,r21
  80cd3c:	8d45803a 	cmpltu	r2,r17,r21
  80cd40:	1585883a 	add	r2,r2,r22
  80cd44:	1887883a 	add	r3,r3,r2
  80cd48:	98bfffc4 	addi	r2,r19,-1
  80cd4c:	b0c0202e 	bgeu	r22,r3,80cdd0 <__divdf3+0x7ec>
  80cd50:	19405136 	bltu	r3,r5,80ce98 <__divdf3+0x8b4>
  80cd54:	28c04f26 	beq	r5,r3,80ce94 <__divdf3+0x8b0>
  80cd58:	1027883a 	mov	r19,r2
  80cd5c:	003f6306 	br	80caec <__divdf3+0x508>
  80cd60:	a27efc36 	bltu	r20,r9,80c954 <__divdf3+0x370>
  80cd64:	983897fa 	slli	fp,r19,31
  80cd68:	a004d07a 	srli	r2,r20,1
  80cd6c:	9820d07a 	srli	r16,r19,1
  80cd70:	a02297fa 	slli	r17,r20,31
  80cd74:	e0b8b03a 	or	fp,fp,r2
  80cd78:	003efa06 	br	80c964 <__divdf3+0x380>
  80cd7c:	e009883a 	mov	r4,fp
  80cd80:	08011cc0 	call	8011cc <__clzsi2>
  80cd84:	11400544 	addi	r5,r2,21
  80cd88:	29000748 	cmpgei	r4,r5,29
  80cd8c:	1007883a 	mov	r3,r2
  80cd90:	10800804 	addi	r2,r2,32
  80cd94:	203e8526 	beq	r4,zero,80c7ac <__divdf3+0x1c8>
  80cd98:	18fffe04 	addi	r3,r3,-8
  80cd9c:	e0ec983a 	sll	r22,fp,r3
  80cda0:	0013883a 	mov	r9,zero
  80cda4:	003e8806 	br	80c7c8 <__divdf3+0x1e4>
  80cda8:	08011cc0 	call	8011cc <__clzsi2>
  80cdac:	11000544 	addi	r4,r2,21
  80cdb0:	20c00748 	cmpgei	r3,r4,29
  80cdb4:	100b883a 	mov	r5,r2
  80cdb8:	10800804 	addi	r2,r2,32
  80cdbc:	183e8d26 	beq	r3,zero,80c7f4 <__divdf3+0x210>
  80cdc0:	297ffe04 	addi	r5,r5,-8
  80cdc4:	a166983a 	sll	r19,r20,r5
  80cdc8:	0029883a 	mov	r20,zero
  80cdcc:	003e9006 	br	80c810 <__divdf3+0x22c>
  80cdd0:	b0ffe11e 	bne	r22,r3,80cd58 <__divdf3+0x774>
  80cdd4:	8d7fe036 	bltu	r17,r21,80cd58 <__divdf3+0x774>
  80cdd8:	003fdd06 	br	80cd50 <__divdf3+0x76c>
  80cddc:	30ff132e 	bgeu	r6,r3,80ca2c <__divdf3+0x448>
  80cde0:	423fff84 	addi	r8,r8,-2
  80cde4:	358d883a 	add	r6,r6,r22
  80cde8:	003f1106 	br	80ca30 <__divdf3+0x44c>
  80cdec:	243ef72e 	bgeu	r4,r16,80c9cc <__divdf3+0x3e8>
  80cdf0:	9cffff84 	addi	r19,r19,-2
  80cdf4:	2589883a 	add	r4,r4,r22
  80cdf8:	003ef506 	br	80c9d0 <__divdf3+0x3ec>
  80cdfc:	00fff844 	movi	r3,-31
  80ce00:	1c47c83a 	sub	r3,r3,r17
  80ce04:	29400820 	cmpeqi	r5,r5,32
  80ce08:	98c6d83a 	srl	r3,r19,r3
  80ce0c:	2800031e 	bne	r5,zero,80ce1c <__divdf3+0x838>
  80ce10:	91410f84 	addi	r5,r18,1086
  80ce14:	994a983a 	sll	r5,r19,r5
  80ce18:	a168b03a 	or	r20,r20,r5
  80ce1c:	a028c03a 	cmpne	r20,r20,zero
  80ce20:	a0e8b03a 	or	r20,r20,r3
  80ce24:	a4c001cc 	andi	r19,r20,7
  80ce28:	9800291e 	bne	r19,zero,80ced0 <__divdf3+0x8ec>
  80ce2c:	000b883a 	mov	r5,zero
  80ce30:	a028d0fa 	srli	r20,r20,3
  80ce34:	0007883a 	mov	r3,zero
  80ce38:	a4e8b03a 	or	r20,r20,r19
  80ce3c:	003e3b06 	br	80c72c <__divdf3+0x148>
  80ce40:	1029883a 	mov	r20,r2
  80ce44:	313f931e 	bne	r6,r4,80cc94 <__divdf3+0x6b0>
  80ce48:	1d7f921e 	bne	r3,r21,80cc94 <__divdf3+0x6b0>
  80ce4c:	003e9606 	br	80c8a8 <__divdf3+0x2c4>
  80ce50:	047f9a0e 	bge	zero,r17,80ccbc <__divdf3+0x6d8>
  80ce54:	0009883a 	mov	r4,zero
  80ce58:	05000044 	movi	r20,1
  80ce5c:	9d27883a 	add	r19,r19,r20
  80ce60:	003e9506 	br	80c8b8 <__divdf3+0x2d4>
  80ce64:	a08003cc 	andi	r2,r20,15
  80ce68:	10800118 	cmpnei	r2,r2,4
  80ce6c:	103e9126 	beq	r2,zero,80c8b4 <__divdf3+0x2d0>
  80ce70:	a1000104 	addi	r4,r20,4
  80ce74:	00bffec4 	movi	r2,-5
  80ce78:	2008d0fa 	srli	r4,r4,3
  80ce7c:	1529803a 	cmpltu	r20,r2,r20
  80ce80:	003ff606 	br	80ce5c <__divdf3+0x878>
  80ce84:	1013883a 	mov	r9,r2
  80ce88:	003f5a06 	br	80cbf4 <__divdf3+0x610>
  80ce8c:	1011883a 	mov	r8,r2
  80ce90:	003f3906 	br	80cb78 <__divdf3+0x594>
  80ce94:	89bfb02e 	bgeu	r17,r6,80cd58 <__divdf3+0x774>
  80ce98:	8d63883a 	add	r17,r17,r21
  80ce9c:	8d45803a 	cmpltu	r2,r17,r21
  80cea0:	1585883a 	add	r2,r2,r22
  80cea4:	9cffff84 	addi	r19,r19,-2
  80cea8:	1887883a 	add	r3,r3,r2
  80ceac:	003f0f06 	br	80caec <__divdf3+0x508>
  80ceb0:	ad45883a 	add	r2,r21,r21
  80ceb4:	156b803a 	cmpltu	r21,r2,r21
  80ceb8:	adad883a 	add	r22,r21,r22
  80cebc:	358d883a 	add	r6,r6,r22
  80cec0:	a53fff84 	addi	r20,r20,-2
  80cec4:	102b883a 	mov	r21,r2
  80cec8:	313fdf26 	beq	r6,r4,80ce48 <__divdf3+0x864>
  80cecc:	003f7106 	br	80cc94 <__divdf3+0x6b0>
  80ced0:	a08003cc 	andi	r2,r20,15
  80ced4:	10800118 	cmpnei	r2,r2,4
  80ced8:	000b883a 	mov	r5,zero
  80cedc:	103f8b1e 	bne	r2,zero,80cd0c <__divdf3+0x728>
  80cee0:	2804927a 	slli	r2,r5,9
  80cee4:	2826977a 	slli	r19,r5,29
  80cee8:	100ad33a 	srli	r5,r2,12
  80ceec:	003fd006 	br	80ce30 <__divdf3+0x84c>
  80cef0:	00800434 	movhi	r2,16
  80cef4:	99400234 	orhi	r5,r19,8
  80cef8:	10bfffc4 	addi	r2,r2,-1
  80cefc:	288a703a 	and	r5,r5,r2
  80cf00:	003e7f06 	br	80c900 <__divdf3+0x31c>
  80cf04:	a8ffea36 	bltu	r21,r3,80ceb0 <__divdf3+0x8cc>
  80cf08:	1029883a 	mov	r20,r2
  80cf0c:	1d7f611e 	bne	r3,r21,80cc94 <__divdf3+0x6b0>
  80cf10:	003e6506 	br	80c8a8 <__divdf3+0x2c4>

0080cf14 <__eqdf2>:
  80cf14:	2810d53a 	srli	r8,r5,20
  80cf18:	3806d53a 	srli	r3,r7,20
  80cf1c:	00800434 	movhi	r2,16
  80cf20:	4201ffcc 	andi	r8,r8,2047
  80cf24:	10bfffc4 	addi	r2,r2,-1
  80cf28:	4241ffd8 	cmpnei	r9,r8,2047
  80cf2c:	2814d7fa 	srli	r10,r5,31
  80cf30:	3816d7fa 	srli	r11,r7,31
  80cf34:	288a703a 	and	r5,r5,r2
  80cf38:	388e703a 	and	r7,r7,r2
  80cf3c:	1881ffcc 	andi	r2,r3,2047
  80cf40:	48000626 	beq	r9,zero,80cf5c <__eqdf2+0x48>
  80cf44:	10c1ffe0 	cmpeqi	r3,r2,2047
  80cf48:	1800021e 	bne	r3,zero,80cf54 <__eqdf2+0x40>
  80cf4c:	4080011e 	bne	r8,r2,80cf54 <__eqdf2+0x40>
  80cf50:	29c00826 	beq	r5,r7,80cf74 <__eqdf2+0x60>
  80cf54:	00800044 	movi	r2,1
  80cf58:	f800283a 	ret
  80cf5c:	2906b03a 	or	r3,r5,r4
  80cf60:	183ffc1e 	bne	r3,zero,80cf54 <__eqdf2+0x40>
  80cf64:	1081ffd8 	cmpnei	r2,r2,2047
  80cf68:	103ffa1e 	bne	r2,zero,80cf54 <__eqdf2+0x40>
  80cf6c:	398eb03a 	or	r7,r7,r6
  80cf70:	383ff81e 	bne	r7,zero,80cf54 <__eqdf2+0x40>
  80cf74:	21bff71e 	bne	r4,r6,80cf54 <__eqdf2+0x40>
  80cf78:	52c00426 	beq	r10,r11,80cf8c <__eqdf2+0x78>
  80cf7c:	403ff51e 	bne	r8,zero,80cf54 <__eqdf2+0x40>
  80cf80:	290ab03a 	or	r5,r5,r4
  80cf84:	2804c03a 	cmpne	r2,r5,zero
  80cf88:	f800283a 	ret
  80cf8c:	0005883a 	mov	r2,zero
  80cf90:	f800283a 	ret

0080cf94 <__gedf2>:
  80cf94:	2810d53a 	srli	r8,r5,20
  80cf98:	3812d53a 	srli	r9,r7,20
  80cf9c:	00c00434 	movhi	r3,16
  80cfa0:	4201ffcc 	andi	r8,r8,2047
  80cfa4:	18ffffc4 	addi	r3,r3,-1
  80cfa8:	4281ffd8 	cmpnei	r10,r8,2047
  80cfac:	2816d7fa 	srli	r11,r5,31
  80cfb0:	3804d7fa 	srli	r2,r7,31
  80cfb4:	28ca703a 	and	r5,r5,r3
  80cfb8:	38ce703a 	and	r7,r7,r3
  80cfbc:	48c1ffcc 	andi	r3,r9,2047
  80cfc0:	50000a26 	beq	r10,zero,80cfec <__gedf2+0x58>
  80cfc4:	1a41ffd8 	cmpnei	r9,r3,2047
  80cfc8:	48000c26 	beq	r9,zero,80cffc <__gedf2+0x68>
  80cfcc:	4000171e 	bne	r8,zero,80d02c <__gedf2+0x98>
  80cfd0:	2912b03a 	or	r9,r5,r4
  80cfd4:	1800121e 	bne	r3,zero,80d020 <__gedf2+0x8c>
  80cfd8:	3994b03a 	or	r10,r7,r6
  80cfdc:	5000101e 	bne	r10,zero,80d020 <__gedf2+0x8c>
  80cfe0:	48000a1e 	bne	r9,zero,80d00c <__gedf2+0x78>
  80cfe4:	0005883a 	mov	r2,zero
  80cfe8:	f800283a 	ret
  80cfec:	2912b03a 	or	r9,r5,r4
  80cff0:	48001d1e 	bne	r9,zero,80d068 <__gedf2+0xd4>
  80cff4:	1a41ffe0 	cmpeqi	r9,r3,2047
  80cff8:	48000c26 	beq	r9,zero,80d02c <__gedf2+0x98>
  80cffc:	3992b03a 	or	r9,r7,r6
  80d000:	4800191e 	bne	r9,zero,80d068 <__gedf2+0xd4>
  80d004:	40000526 	beq	r8,zero,80d01c <__gedf2+0x88>
  80d008:	58800c26 	beq	r11,r2,80d03c <__gedf2+0xa8>
  80d00c:	00800044 	movi	r2,1
  80d010:	58000526 	beq	r11,zero,80d028 <__gedf2+0x94>
  80d014:	00bfffc4 	movi	r2,-1
  80d018:	f800283a 	ret
  80d01c:	2912b03a 	or	r9,r5,r4
  80d020:	483ff91e 	bne	r9,zero,80d008 <__gedf2+0x74>
  80d024:	103ffb26 	beq	r2,zero,80d014 <__gedf2+0x80>
  80d028:	f800283a 	ret
  80d02c:	183ff61e 	bne	r3,zero,80d008 <__gedf2+0x74>
  80d030:	3992b03a 	or	r9,r7,r6
  80d034:	483ff41e 	bne	r9,zero,80d008 <__gedf2+0x74>
  80d038:	003ff406 	br	80d00c <__gedf2+0x78>
  80d03c:	1a000716 	blt	r3,r8,80d05c <__gedf2+0xc8>
  80d040:	40fff816 	blt	r8,r3,80d024 <__gedf2+0x90>
  80d044:	397ff136 	bltu	r7,r5,80d00c <__gedf2+0x78>
  80d048:	29c00926 	beq	r5,r7,80d070 <__gedf2+0xdc>
  80d04c:	29ffe52e 	bgeu	r5,r7,80cfe4 <__gedf2+0x50>
  80d050:	583ff026 	beq	r11,zero,80d014 <__gedf2+0x80>
  80d054:	5805883a 	mov	r2,r11
  80d058:	f800283a 	ret
  80d05c:	103fed1e 	bne	r2,zero,80d014 <__gedf2+0x80>
  80d060:	00800044 	movi	r2,1
  80d064:	f800283a 	ret
  80d068:	00bfff84 	movi	r2,-2
  80d06c:	f800283a 	ret
  80d070:	313fe636 	bltu	r6,r4,80d00c <__gedf2+0x78>
  80d074:	21bfdb2e 	bgeu	r4,r6,80cfe4 <__gedf2+0x50>
  80d078:	003ff506 	br	80d050 <__gedf2+0xbc>

0080d07c <__ledf2>:
  80d07c:	2810d53a 	srli	r8,r5,20
  80d080:	3812d53a 	srli	r9,r7,20
  80d084:	00c00434 	movhi	r3,16
  80d088:	4201ffcc 	andi	r8,r8,2047
  80d08c:	18ffffc4 	addi	r3,r3,-1
  80d090:	4281ffd8 	cmpnei	r10,r8,2047
  80d094:	2816d7fa 	srli	r11,r5,31
  80d098:	3804d7fa 	srli	r2,r7,31
  80d09c:	28ca703a 	and	r5,r5,r3
  80d0a0:	38ce703a 	and	r7,r7,r3
  80d0a4:	48c1ffcc 	andi	r3,r9,2047
  80d0a8:	50000a26 	beq	r10,zero,80d0d4 <__ledf2+0x58>
  80d0ac:	1a41ffd8 	cmpnei	r9,r3,2047
  80d0b0:	48000c26 	beq	r9,zero,80d0e4 <__ledf2+0x68>
  80d0b4:	4000191e 	bne	r8,zero,80d11c <__ledf2+0xa0>
  80d0b8:	2912b03a 	or	r9,r5,r4
  80d0bc:	18000d1e 	bne	r3,zero,80d0f4 <__ledf2+0x78>
  80d0c0:	3994b03a 	or	r10,r7,r6
  80d0c4:	50000b1e 	bne	r10,zero,80d0f4 <__ledf2+0x78>
  80d0c8:	48000c1e 	bne	r9,zero,80d0fc <__ledf2+0x80>
  80d0cc:	0005883a 	mov	r2,zero
  80d0d0:	f800283a 	ret
  80d0d4:	2912b03a 	or	r9,r5,r4
  80d0d8:	48000c1e 	bne	r9,zero,80d10c <__ledf2+0x90>
  80d0dc:	1a41ffe0 	cmpeqi	r9,r3,2047
  80d0e0:	48000e26 	beq	r9,zero,80d11c <__ledf2+0xa0>
  80d0e4:	3992b03a 	or	r9,r7,r6
  80d0e8:	4800081e 	bne	r9,zero,80d10c <__ledf2+0x90>
  80d0ec:	4000021e 	bne	r8,zero,80d0f8 <__ledf2+0x7c>
  80d0f0:	2912b03a 	or	r9,r5,r4
  80d0f4:	48000726 	beq	r9,zero,80d114 <__ledf2+0x98>
  80d0f8:	58800c26 	beq	r11,r2,80d12c <__ledf2+0xb0>
  80d0fc:	00800044 	movi	r2,1
  80d100:	58000526 	beq	r11,zero,80d118 <__ledf2+0x9c>
  80d104:	00bfffc4 	movi	r2,-1
  80d108:	f800283a 	ret
  80d10c:	00800084 	movi	r2,2
  80d110:	f800283a 	ret
  80d114:	103ffb26 	beq	r2,zero,80d104 <__ledf2+0x88>
  80d118:	f800283a 	ret
  80d11c:	183ff61e 	bne	r3,zero,80d0f8 <__ledf2+0x7c>
  80d120:	3992b03a 	or	r9,r7,r6
  80d124:	483ff41e 	bne	r9,zero,80d0f8 <__ledf2+0x7c>
  80d128:	003ff406 	br	80d0fc <__ledf2+0x80>
  80d12c:	1a00030e 	bge	r3,r8,80d13c <__ledf2+0xc0>
  80d130:	103ff41e 	bne	r2,zero,80d104 <__ledf2+0x88>
  80d134:	00800044 	movi	r2,1
  80d138:	f800283a 	ret
  80d13c:	40fff516 	blt	r8,r3,80d114 <__ledf2+0x98>
  80d140:	397fee36 	bltu	r7,r5,80d0fc <__ledf2+0x80>
  80d144:	29c00426 	beq	r5,r7,80d158 <__ledf2+0xdc>
  80d148:	29ffe02e 	bgeu	r5,r7,80d0cc <__ledf2+0x50>
  80d14c:	583fed26 	beq	r11,zero,80d104 <__ledf2+0x88>
  80d150:	5805883a 	mov	r2,r11
  80d154:	f800283a 	ret
  80d158:	313fe836 	bltu	r6,r4,80d0fc <__ledf2+0x80>
  80d15c:	21bfdb2e 	bgeu	r4,r6,80d0cc <__ledf2+0x50>
  80d160:	003ffa06 	br	80d14c <__ledf2+0xd0>

0080d164 <__muldf3>:
  80d164:	2810d53a 	srli	r8,r5,20
  80d168:	defff004 	addi	sp,sp,-64
  80d16c:	00800434 	movhi	r2,16
  80d170:	df000e15 	stw	fp,56(sp)
  80d174:	dd000a15 	stw	r20,40(sp)
  80d178:	dcc00915 	stw	r19,36(sp)
  80d17c:	dc400715 	stw	r17,28(sp)
  80d180:	10bfffc4 	addi	r2,r2,-1
  80d184:	dfc00f15 	stw	ra,60(sp)
  80d188:	ddc00d15 	stw	r23,52(sp)
  80d18c:	dd800c15 	stw	r22,48(sp)
  80d190:	dd400b15 	stw	r21,44(sp)
  80d194:	dc800815 	stw	r18,32(sp)
  80d198:	dc000615 	stw	r16,24(sp)
  80d19c:	4201ffcc 	andi	r8,r8,2047
  80d1a0:	2828d7fa 	srli	r20,r5,31
  80d1a4:	2023883a 	mov	r17,r4
  80d1a8:	3039883a 	mov	fp,r6
  80d1ac:	28a6703a 	and	r19,r5,r2
  80d1b0:	40013426 	beq	r8,zero,80d684 <__muldf3+0x520>
  80d1b4:	4081ffe0 	cmpeqi	r2,r8,2047
  80d1b8:	1001461e 	bne	r2,zero,80d6d4 <__muldf3+0x570>
  80d1bc:	980a90fa 	slli	r5,r19,3
  80d1c0:	2026d77a 	srli	r19,r4,29
  80d1c4:	202490fa 	slli	r18,r4,3
  80d1c8:	423f0044 	addi	r8,r8,-1023
  80d1cc:	9966b03a 	or	r19,r19,r5
  80d1d0:	9cc02034 	orhi	r19,r19,128
  80d1d4:	002b883a 	mov	r21,zero
  80d1d8:	002d883a 	mov	r22,zero
  80d1dc:	3804d53a 	srli	r2,r7,20
  80d1e0:	00c00434 	movhi	r3,16
  80d1e4:	18ffffc4 	addi	r3,r3,-1
  80d1e8:	1081ffcc 	andi	r2,r2,2047
  80d1ec:	382ed7fa 	srli	r23,r7,31
  80d1f0:	38e0703a 	and	r16,r7,r3
  80d1f4:	10011026 	beq	r2,zero,80d638 <__muldf3+0x4d4>
  80d1f8:	10c1ffe0 	cmpeqi	r3,r2,2047
  80d1fc:	18013c1e 	bne	r3,zero,80d6f0 <__muldf3+0x58c>
  80d200:	e008d77a 	srli	r4,fp,29
  80d204:	802090fa 	slli	r16,r16,3
  80d208:	e02290fa 	slli	r17,fp,3
  80d20c:	10bf0044 	addi	r2,r2,-1023
  80d210:	2420b03a 	or	r16,r4,r16
  80d214:	84002034 	orhi	r16,r16,128
  80d218:	4091883a 	add	r8,r8,r2
  80d21c:	0009883a 	mov	r4,zero
  80d220:	a8800428 	cmpgeui	r2,r21,16
  80d224:	a5ccf03a 	xor	r6,r20,r23
  80d228:	41c00044 	addi	r7,r8,1
  80d22c:	1000371e 	bne	r2,zero,80d30c <__muldf3+0x1a8>
  80d230:	a80490ba 	slli	r2,r21,2
  80d234:	00c02074 	movhi	r3,129
  80d238:	10c7883a 	add	r3,r2,r3
  80d23c:	18b49117 	ldw	r2,-11708(r3)
  80d240:	1000683a 	jmp	r2
  80d244:	0080d30c 	andi	r2,zero,844
  80d248:	0080d288 	cmpgei	r2,zero,842
  80d24c:	0080d288 	cmpgei	r2,zero,842
  80d250:	0080d284 	movi	r2,842
  80d254:	0080d294 	movui	r2,842
  80d258:	0080d294 	movui	r2,842
  80d25c:	0080d764 	muli	r2,zero,861
  80d260:	0080d284 	movi	r2,842
  80d264:	0080d294 	movui	r2,842
  80d268:	0080d764 	muli	r2,zero,861
  80d26c:	0080d294 	movui	r2,842
  80d270:	0080d284 	movi	r2,842
  80d274:	0080d70c 	andi	r2,zero,860
  80d278:	0080d70c 	andi	r2,zero,860
  80d27c:	0080d70c 	andi	r2,zero,860
  80d280:	0080d7f0 	cmpltui	r2,zero,863
  80d284:	b80d883a 	mov	r6,r23
  80d288:	8027883a 	mov	r19,r16
  80d28c:	8825883a 	mov	r18,r17
  80d290:	202d883a 	mov	r22,r4
  80d294:	b08000a0 	cmpeqi	r2,r22,2
  80d298:	1000181e 	bne	r2,zero,80d2fc <__muldf3+0x198>
  80d29c:	b08000e0 	cmpeqi	r2,r22,3
  80d2a0:	1001961e 	bne	r2,zero,80d8fc <__muldf3+0x798>
  80d2a4:	b0800060 	cmpeqi	r2,r22,1
  80d2a8:	1000c926 	beq	r2,zero,80d5d0 <__muldf3+0x46c>
  80d2ac:	0007883a 	mov	r3,zero
  80d2b0:	0027883a 	mov	r19,zero
  80d2b4:	0025883a 	mov	r18,zero
  80d2b8:	1806953a 	slli	r3,r3,20
  80d2bc:	300c97fa 	slli	r6,r6,31
  80d2c0:	9005883a 	mov	r2,r18
  80d2c4:	1cc6b03a 	or	r3,r3,r19
  80d2c8:	1986b03a 	or	r3,r3,r6
  80d2cc:	dfc00f17 	ldw	ra,60(sp)
  80d2d0:	df000e17 	ldw	fp,56(sp)
  80d2d4:	ddc00d17 	ldw	r23,52(sp)
  80d2d8:	dd800c17 	ldw	r22,48(sp)
  80d2dc:	dd400b17 	ldw	r21,44(sp)
  80d2e0:	dd000a17 	ldw	r20,40(sp)
  80d2e4:	dcc00917 	ldw	r19,36(sp)
  80d2e8:	dc800817 	ldw	r18,32(sp)
  80d2ec:	dc400717 	ldw	r17,28(sp)
  80d2f0:	dc000617 	ldw	r16,24(sp)
  80d2f4:	dec01004 	addi	sp,sp,64
  80d2f8:	f800283a 	ret
  80d2fc:	00c1ffc4 	movi	r3,2047
  80d300:	0027883a 	mov	r19,zero
  80d304:	0025883a 	mov	r18,zero
  80d308:	003feb06 	br	80d2b8 <__muldf3+0x154>
  80d30c:	9028d43a 	srli	r20,r18,16
  80d310:	8f3fffcc 	andi	fp,r17,65535
  80d314:	957fffcc 	andi	r21,r18,65535
  80d318:	a80b883a 	mov	r5,r21
  80d31c:	e009883a 	mov	r4,fp
  80d320:	d9800315 	stw	r6,12(sp)
  80d324:	da000215 	stw	r8,8(sp)
  80d328:	d9c00115 	stw	r7,4(sp)
  80d32c:	8822d43a 	srli	r17,r17,16
  80d330:	08012200 	call	801220 <__mulsi3>
  80d334:	e00b883a 	mov	r5,fp
  80d338:	a009883a 	mov	r4,r20
  80d33c:	102d883a 	mov	r22,r2
  80d340:	08012200 	call	801220 <__mulsi3>
  80d344:	880b883a 	mov	r5,r17
  80d348:	a009883a 	mov	r4,r20
  80d34c:	102f883a 	mov	r23,r2
  80d350:	08012200 	call	801220 <__mulsi3>
  80d354:	a80b883a 	mov	r5,r21
  80d358:	8809883a 	mov	r4,r17
  80d35c:	d8800015 	stw	r2,0(sp)
  80d360:	08012200 	call	801220 <__mulsi3>
  80d364:	b006d43a 	srli	r3,r22,16
  80d368:	15e5883a 	add	r18,r2,r23
  80d36c:	d9c00117 	ldw	r7,4(sp)
  80d370:	1c87883a 	add	r3,r3,r18
  80d374:	da000217 	ldw	r8,8(sp)
  80d378:	d9800317 	ldw	r6,12(sp)
  80d37c:	1dc0042e 	bgeu	r3,r23,80d390 <__muldf3+0x22c>
  80d380:	d9000017 	ldw	r4,0(sp)
  80d384:	00800074 	movhi	r2,1
  80d388:	2085883a 	add	r2,r4,r2
  80d38c:	d8800015 	stw	r2,0(sp)
  80d390:	1804943a 	slli	r2,r3,16
  80d394:	85ffffcc 	andi	r23,r16,65535
  80d398:	b5bfffcc 	andi	r22,r22,65535
  80d39c:	1585883a 	add	r2,r2,r22
  80d3a0:	a80b883a 	mov	r5,r21
  80d3a4:	b809883a 	mov	r4,r23
  80d3a8:	1824d43a 	srli	r18,r3,16
  80d3ac:	d9800515 	stw	r6,20(sp)
  80d3b0:	da000415 	stw	r8,16(sp)
  80d3b4:	d9c00315 	stw	r7,12(sp)
  80d3b8:	8020d43a 	srli	r16,r16,16
  80d3bc:	d8800115 	stw	r2,4(sp)
  80d3c0:	08012200 	call	801220 <__mulsi3>
  80d3c4:	a009883a 	mov	r4,r20
  80d3c8:	b80b883a 	mov	r5,r23
  80d3cc:	d8800215 	stw	r2,8(sp)
  80d3d0:	08012200 	call	801220 <__mulsi3>
  80d3d4:	a009883a 	mov	r4,r20
  80d3d8:	800b883a 	mov	r5,r16
  80d3dc:	102d883a 	mov	r22,r2
  80d3e0:	08012200 	call	801220 <__mulsi3>
  80d3e4:	a80b883a 	mov	r5,r21
  80d3e8:	8009883a 	mov	r4,r16
  80d3ec:	1029883a 	mov	r20,r2
  80d3f0:	08012200 	call	801220 <__mulsi3>
  80d3f4:	da800217 	ldw	r10,8(sp)
  80d3f8:	1585883a 	add	r2,r2,r22
  80d3fc:	d9c00317 	ldw	r7,12(sp)
  80d400:	5006d43a 	srli	r3,r10,16
  80d404:	da000417 	ldw	r8,16(sp)
  80d408:	d9800517 	ldw	r6,20(sp)
  80d40c:	1887883a 	add	r3,r3,r2
  80d410:	1d80022e 	bgeu	r3,r22,80d41c <__muldf3+0x2b8>
  80d414:	00800074 	movhi	r2,1
  80d418:	a0a9883a 	add	r20,r20,r2
  80d41c:	1804d43a 	srli	r2,r3,16
  80d420:	1806943a 	slli	r3,r3,16
  80d424:	982cd43a 	srli	r22,r19,16
  80d428:	9d7fffcc 	andi	r21,r19,65535
  80d42c:	e009883a 	mov	r4,fp
  80d430:	54ffffcc 	andi	r19,r10,65535
  80d434:	a80b883a 	mov	r5,r21
  80d438:	1ce7883a 	add	r19,r3,r19
  80d43c:	d9800515 	stw	r6,20(sp)
  80d440:	da000415 	stw	r8,16(sp)
  80d444:	d9c00315 	stw	r7,12(sp)
  80d448:	1529883a 	add	r20,r2,r20
  80d44c:	08012200 	call	801220 <__mulsi3>
  80d450:	e00b883a 	mov	r5,fp
  80d454:	b009883a 	mov	r4,r22
  80d458:	d8800215 	stw	r2,8(sp)
  80d45c:	08012200 	call	801220 <__mulsi3>
  80d460:	8809883a 	mov	r4,r17
  80d464:	b00b883a 	mov	r5,r22
  80d468:	1039883a 	mov	fp,r2
  80d46c:	08012200 	call	801220 <__mulsi3>
  80d470:	8809883a 	mov	r4,r17
  80d474:	a80b883a 	mov	r5,r21
  80d478:	1023883a 	mov	r17,r2
  80d47c:	08012200 	call	801220 <__mulsi3>
  80d480:	d8c00217 	ldw	r3,8(sp)
  80d484:	1705883a 	add	r2,r2,fp
  80d488:	d9c00317 	ldw	r7,12(sp)
  80d48c:	1808d43a 	srli	r4,r3,16
  80d490:	da000417 	ldw	r8,16(sp)
  80d494:	d9800517 	ldw	r6,20(sp)
  80d498:	2089883a 	add	r4,r4,r2
  80d49c:	94e5883a 	add	r18,r18,r19
  80d4a0:	2700022e 	bgeu	r4,fp,80d4ac <__muldf3+0x348>
  80d4a4:	00800074 	movhi	r2,1
  80d4a8:	88a3883a 	add	r17,r17,r2
  80d4ac:	2004d43a 	srli	r2,r4,16
  80d4b0:	2038943a 	slli	fp,r4,16
  80d4b4:	18ffffcc 	andi	r3,r3,65535
  80d4b8:	b809883a 	mov	r4,r23
  80d4bc:	a80b883a 	mov	r5,r21
  80d4c0:	d9800415 	stw	r6,16(sp)
  80d4c4:	da000315 	stw	r8,12(sp)
  80d4c8:	d9c00215 	stw	r7,8(sp)
  80d4cc:	e0f9883a 	add	fp,fp,r3
  80d4d0:	1463883a 	add	r17,r2,r17
  80d4d4:	08012200 	call	801220 <__mulsi3>
  80d4d8:	b80b883a 	mov	r5,r23
  80d4dc:	b009883a 	mov	r4,r22
  80d4e0:	102f883a 	mov	r23,r2
  80d4e4:	08012200 	call	801220 <__mulsi3>
  80d4e8:	b00b883a 	mov	r5,r22
  80d4ec:	8009883a 	mov	r4,r16
  80d4f0:	102d883a 	mov	r22,r2
  80d4f4:	08012200 	call	801220 <__mulsi3>
  80d4f8:	a80b883a 	mov	r5,r21
  80d4fc:	8009883a 	mov	r4,r16
  80d500:	1021883a 	mov	r16,r2
  80d504:	08012200 	call	801220 <__mulsi3>
  80d508:	b80ad43a 	srli	r5,r23,16
  80d50c:	1585883a 	add	r2,r2,r22
  80d510:	d9c00217 	ldw	r7,8(sp)
  80d514:	288b883a 	add	r5,r5,r2
  80d518:	da000317 	ldw	r8,12(sp)
  80d51c:	d9800417 	ldw	r6,16(sp)
  80d520:	2d80022e 	bgeu	r5,r22,80d52c <__muldf3+0x3c8>
  80d524:	00800074 	movhi	r2,1
  80d528:	80a1883a 	add	r16,r16,r2
  80d52c:	2806943a 	slli	r3,r5,16
  80d530:	d8800017 	ldw	r2,0(sp)
  80d534:	bdffffcc 	andi	r23,r23,65535
  80d538:	1dc7883a 	add	r3,r3,r23
  80d53c:	90ab883a 	add	r21,r18,r2
  80d540:	acd5803a 	cmpltu	r10,r21,r19
  80d544:	1d07883a 	add	r3,r3,r20
  80d548:	af2b883a 	add	r21,r21,fp
  80d54c:	1a97883a 	add	r11,r3,r10
  80d550:	af09803a 	cmpltu	r4,r21,fp
  80d554:	2826d43a 	srli	r19,r5,16
  80d558:	5c53883a 	add	r9,r11,r17
  80d55c:	4905883a 	add	r2,r9,r4
  80d560:	1d07803a 	cmpltu	r3,r3,r20
  80d564:	5a95803a 	cmpltu	r10,r11,r10
  80d568:	1a86b03a 	or	r3,r3,r10
  80d56c:	1109803a 	cmpltu	r4,r2,r4
  80d570:	4c53803a 	cmpltu	r9,r9,r17
  80d574:	1ce7883a 	add	r19,r3,r19
  80d578:	4908b03a 	or	r4,r9,r4
  80d57c:	a824927a 	slli	r18,r21,9
  80d580:	d8c00117 	ldw	r3,4(sp)
  80d584:	9927883a 	add	r19,r19,r4
  80d588:	9c27883a 	add	r19,r19,r16
  80d58c:	9826927a 	slli	r19,r19,9
  80d590:	a82ad5fa 	srli	r21,r21,23
  80d594:	100ad5fa 	srli	r5,r2,23
  80d598:	90e4b03a 	or	r18,r18,r3
  80d59c:	1004927a 	slli	r2,r2,9
  80d5a0:	9024c03a 	cmpne	r18,r18,zero
  80d5a4:	9564b03a 	or	r18,r18,r21
  80d5a8:	98c0402c 	andhi	r3,r19,256
  80d5ac:	90a4b03a 	or	r18,r18,r2
  80d5b0:	9966b03a 	or	r19,r19,r5
  80d5b4:	1800b626 	beq	r3,zero,80d890 <__muldf3+0x72c>
  80d5b8:	9006d07a 	srli	r3,r18,1
  80d5bc:	980497fa 	slli	r2,r19,31
  80d5c0:	9480004c 	andi	r18,r18,1
  80d5c4:	9826d07a 	srli	r19,r19,1
  80d5c8:	1c86b03a 	or	r3,r3,r18
  80d5cc:	18a4b03a 	or	r18,r3,r2
  80d5d0:	3900ffc4 	addi	r4,r7,1023
  80d5d4:	0100690e 	bge	zero,r4,80d77c <__muldf3+0x618>
  80d5d8:	908001cc 	andi	r2,r18,7
  80d5dc:	10000726 	beq	r2,zero,80d5fc <__muldf3+0x498>
  80d5e0:	908003cc 	andi	r2,r18,15
  80d5e4:	10800120 	cmpeqi	r2,r2,4
  80d5e8:	1000041e 	bne	r2,zero,80d5fc <__muldf3+0x498>
  80d5ec:	90800104 	addi	r2,r18,4
  80d5f0:	14a5803a 	cmpltu	r18,r2,r18
  80d5f4:	9ca7883a 	add	r19,r19,r18
  80d5f8:	1025883a 	mov	r18,r2
  80d5fc:	9880402c 	andhi	r2,r19,256
  80d600:	10000426 	beq	r2,zero,80d614 <__muldf3+0x4b0>
  80d604:	00bfc034 	movhi	r2,65280
  80d608:	10bfffc4 	addi	r2,r2,-1
  80d60c:	98a6703a 	and	r19,r19,r2
  80d610:	39010004 	addi	r4,r7,1024
  80d614:	2081ffc8 	cmpgei	r2,r4,2047
  80d618:	103f381e 	bne	r2,zero,80d2fc <__muldf3+0x198>
  80d61c:	9804977a 	slli	r2,r19,29
  80d620:	9024d0fa 	srli	r18,r18,3
  80d624:	9826927a 	slli	r19,r19,9
  80d628:	20c1ffcc 	andi	r3,r4,2047
  80d62c:	14a4b03a 	or	r18,r2,r18
  80d630:	9826d33a 	srli	r19,r19,12
  80d634:	003f2006 	br	80d2b8 <__muldf3+0x154>
  80d638:	8722b03a 	or	r17,r16,fp
  80d63c:	88004526 	beq	r17,zero,80d754 <__muldf3+0x5f0>
  80d640:	da000015 	stw	r8,0(sp)
  80d644:	80008626 	beq	r16,zero,80d860 <__muldf3+0x6fc>
  80d648:	8009883a 	mov	r4,r16
  80d64c:	08011cc0 	call	8011cc <__clzsi2>
  80d650:	da000017 	ldw	r8,0(sp)
  80d654:	117ffd44 	addi	r5,r2,-11
  80d658:	01000744 	movi	r4,29
  80d65c:	147ffe04 	addi	r17,r2,-8
  80d660:	2149c83a 	sub	r4,r4,r5
  80d664:	8460983a 	sll	r16,r16,r17
  80d668:	e108d83a 	srl	r4,fp,r4
  80d66c:	e462983a 	sll	r17,fp,r17
  80d670:	2420b03a 	or	r16,r4,r16
  80d674:	4091c83a 	sub	r8,r8,r2
  80d678:	423f0344 	addi	r8,r8,-1011
  80d67c:	0009883a 	mov	r4,zero
  80d680:	003ee706 	br	80d220 <__muldf3+0xbc>
  80d684:	9924b03a 	or	r18,r19,r4
  80d688:	90002d26 	beq	r18,zero,80d740 <__muldf3+0x5dc>
  80d68c:	d9c00015 	stw	r7,0(sp)
  80d690:	98006826 	beq	r19,zero,80d834 <__muldf3+0x6d0>
  80d694:	9809883a 	mov	r4,r19
  80d698:	08011cc0 	call	8011cc <__clzsi2>
  80d69c:	d9c00017 	ldw	r7,0(sp)
  80d6a0:	113ffd44 	addi	r4,r2,-11
  80d6a4:	00c00744 	movi	r3,29
  80d6a8:	14bffe04 	addi	r18,r2,-8
  80d6ac:	1907c83a 	sub	r3,r3,r4
  80d6b0:	9ca6983a 	sll	r19,r19,r18
  80d6b4:	88c6d83a 	srl	r3,r17,r3
  80d6b8:	8ca4983a 	sll	r18,r17,r18
  80d6bc:	1ce6b03a 	or	r19,r3,r19
  80d6c0:	023f0344 	movi	r8,-1011
  80d6c4:	4091c83a 	sub	r8,r8,r2
  80d6c8:	002b883a 	mov	r21,zero
  80d6cc:	002d883a 	mov	r22,zero
  80d6d0:	003ec206 	br	80d1dc <__muldf3+0x78>
  80d6d4:	9924b03a 	or	r18,r19,r4
  80d6d8:	9000141e 	bne	r18,zero,80d72c <__muldf3+0x5c8>
  80d6dc:	0027883a 	mov	r19,zero
  80d6e0:	05400204 	movi	r21,8
  80d6e4:	0201ffc4 	movi	r8,2047
  80d6e8:	05800084 	movi	r22,2
  80d6ec:	003ebb06 	br	80d1dc <__muldf3+0x78>
  80d6f0:	8722b03a 	or	r17,r16,fp
  80d6f4:	4201ffc4 	addi	r8,r8,2047
  80d6f8:	8800081e 	bne	r17,zero,80d71c <__muldf3+0x5b8>
  80d6fc:	ad400094 	ori	r21,r21,2
  80d700:	0021883a 	mov	r16,zero
  80d704:	01000084 	movi	r4,2
  80d708:	003ec506 	br	80d220 <__muldf3+0xbc>
  80d70c:	b08000a0 	cmpeqi	r2,r22,2
  80d710:	a00d883a 	mov	r6,r20
  80d714:	103ee126 	beq	r2,zero,80d29c <__muldf3+0x138>
  80d718:	003ef806 	br	80d2fc <__muldf3+0x198>
  80d71c:	ad4000d4 	ori	r21,r21,3
  80d720:	e023883a 	mov	r17,fp
  80d724:	010000c4 	movi	r4,3
  80d728:	003ebd06 	br	80d220 <__muldf3+0xbc>
  80d72c:	2025883a 	mov	r18,r4
  80d730:	05400304 	movi	r21,12
  80d734:	0201ffc4 	movi	r8,2047
  80d738:	058000c4 	movi	r22,3
  80d73c:	003ea706 	br	80d1dc <__muldf3+0x78>
  80d740:	0027883a 	mov	r19,zero
  80d744:	05400104 	movi	r21,4
  80d748:	0011883a 	mov	r8,zero
  80d74c:	05800044 	movi	r22,1
  80d750:	003ea206 	br	80d1dc <__muldf3+0x78>
  80d754:	ad400054 	ori	r21,r21,1
  80d758:	0021883a 	mov	r16,zero
  80d75c:	01000044 	movi	r4,1
  80d760:	003eaf06 	br	80d220 <__muldf3+0xbc>
  80d764:	04c00434 	movhi	r19,16
  80d768:	000d883a 	mov	r6,zero
  80d76c:	9cffffc4 	addi	r19,r19,-1
  80d770:	04bfffc4 	movi	r18,-1
  80d774:	00c1ffc4 	movi	r3,2047
  80d778:	003ecf06 	br	80d2b8 <__muldf3+0x154>
  80d77c:	00800044 	movi	r2,1
  80d780:	1105c83a 	sub	r2,r2,r4
  80d784:	10c00e48 	cmpgei	r3,r2,57
  80d788:	183ec81e 	bne	r3,zero,80d2ac <__muldf3+0x148>
  80d78c:	10c00808 	cmpgei	r3,r2,32
  80d790:	1800411e 	bne	r3,zero,80d898 <__muldf3+0x734>
  80d794:	39c10784 	addi	r7,r7,1054
  80d798:	99c6983a 	sll	r3,r19,r7
  80d79c:	9088d83a 	srl	r4,r18,r2
  80d7a0:	91ce983a 	sll	r7,r18,r7
  80d7a4:	98a6d83a 	srl	r19,r19,r2
  80d7a8:	1904b03a 	or	r2,r3,r4
  80d7ac:	3824c03a 	cmpne	r18,r7,zero
  80d7b0:	1484b03a 	or	r2,r2,r18
  80d7b4:	10c001cc 	andi	r3,r2,7
  80d7b8:	18000726 	beq	r3,zero,80d7d8 <__muldf3+0x674>
  80d7bc:	10c003cc 	andi	r3,r2,15
  80d7c0:	18c00120 	cmpeqi	r3,r3,4
  80d7c4:	1800041e 	bne	r3,zero,80d7d8 <__muldf3+0x674>
  80d7c8:	10c00104 	addi	r3,r2,4
  80d7cc:	1885803a 	cmpltu	r2,r3,r2
  80d7d0:	98a7883a 	add	r19,r19,r2
  80d7d4:	1805883a 	mov	r2,r3
  80d7d8:	98c0202c 	andhi	r3,r19,128
  80d7dc:	18004326 	beq	r3,zero,80d8ec <__muldf3+0x788>
  80d7e0:	00c00044 	movi	r3,1
  80d7e4:	0027883a 	mov	r19,zero
  80d7e8:	0025883a 	mov	r18,zero
  80d7ec:	003eb206 	br	80d2b8 <__muldf3+0x154>
  80d7f0:	9880022c 	andhi	r2,r19,8
  80d7f4:	10000926 	beq	r2,zero,80d81c <__muldf3+0x6b8>
  80d7f8:	8080022c 	andhi	r2,r16,8
  80d7fc:	1000071e 	bne	r2,zero,80d81c <__muldf3+0x6b8>
  80d800:	00800434 	movhi	r2,16
  80d804:	84c00234 	orhi	r19,r16,8
  80d808:	10bfffc4 	addi	r2,r2,-1
  80d80c:	98a6703a 	and	r19,r19,r2
  80d810:	b80d883a 	mov	r6,r23
  80d814:	8825883a 	mov	r18,r17
  80d818:	003fd606 	br	80d774 <__muldf3+0x610>
  80d81c:	00800434 	movhi	r2,16
  80d820:	9cc00234 	orhi	r19,r19,8
  80d824:	10bfffc4 	addi	r2,r2,-1
  80d828:	98a6703a 	and	r19,r19,r2
  80d82c:	a00d883a 	mov	r6,r20
  80d830:	003fd006 	br	80d774 <__muldf3+0x610>
  80d834:	08011cc0 	call	8011cc <__clzsi2>
  80d838:	11000544 	addi	r4,r2,21
  80d83c:	21400748 	cmpgei	r5,r4,29
  80d840:	1007883a 	mov	r3,r2
  80d844:	d9c00017 	ldw	r7,0(sp)
  80d848:	10800804 	addi	r2,r2,32
  80d84c:	283f9526 	beq	r5,zero,80d6a4 <__muldf3+0x540>
  80d850:	18fffe04 	addi	r3,r3,-8
  80d854:	88e6983a 	sll	r19,r17,r3
  80d858:	0025883a 	mov	r18,zero
  80d85c:	003f9806 	br	80d6c0 <__muldf3+0x55c>
  80d860:	e009883a 	mov	r4,fp
  80d864:	08011cc0 	call	8011cc <__clzsi2>
  80d868:	11400544 	addi	r5,r2,21
  80d86c:	29000748 	cmpgei	r4,r5,29
  80d870:	1007883a 	mov	r3,r2
  80d874:	da000017 	ldw	r8,0(sp)
  80d878:	10800804 	addi	r2,r2,32
  80d87c:	203f7626 	beq	r4,zero,80d658 <__muldf3+0x4f4>
  80d880:	1c3ffe04 	addi	r16,r3,-8
  80d884:	e420983a 	sll	r16,fp,r16
  80d888:	0023883a 	mov	r17,zero
  80d88c:	003f7906 	br	80d674 <__muldf3+0x510>
  80d890:	400f883a 	mov	r7,r8
  80d894:	003f4e06 	br	80d5d0 <__muldf3+0x46c>
  80d898:	00fff844 	movi	r3,-31
  80d89c:	1907c83a 	sub	r3,r3,r4
  80d8a0:	10800820 	cmpeqi	r2,r2,32
  80d8a4:	98c6d83a 	srl	r3,r19,r3
  80d8a8:	1000031e 	bne	r2,zero,80d8b8 <__muldf3+0x754>
  80d8ac:	39c10f84 	addi	r7,r7,1086
  80d8b0:	99e6983a 	sll	r19,r19,r7
  80d8b4:	94e4b03a 	or	r18,r18,r19
  80d8b8:	9024c03a 	cmpne	r18,r18,zero
  80d8bc:	90c4b03a 	or	r2,r18,r3
  80d8c0:	148001cc 	andi	r18,r2,7
  80d8c4:	9000051e 	bne	r18,zero,80d8dc <__muldf3+0x778>
  80d8c8:	0027883a 	mov	r19,zero
  80d8cc:	1004d0fa 	srli	r2,r2,3
  80d8d0:	0007883a 	mov	r3,zero
  80d8d4:	14a4b03a 	or	r18,r2,r18
  80d8d8:	003e7706 	br	80d2b8 <__muldf3+0x154>
  80d8dc:	10c003cc 	andi	r3,r2,15
  80d8e0:	18c00118 	cmpnei	r3,r3,4
  80d8e4:	0027883a 	mov	r19,zero
  80d8e8:	183fb71e 	bne	r3,zero,80d7c8 <__muldf3+0x664>
  80d8ec:	9806927a 	slli	r3,r19,9
  80d8f0:	9824977a 	slli	r18,r19,29
  80d8f4:	1826d33a 	srli	r19,r3,12
  80d8f8:	003ff406 	br	80d8cc <__muldf3+0x768>
  80d8fc:	00800434 	movhi	r2,16
  80d900:	9cc00234 	orhi	r19,r19,8
  80d904:	10bfffc4 	addi	r2,r2,-1
  80d908:	98a6703a 	and	r19,r19,r2
  80d90c:	003f9906 	br	80d774 <__muldf3+0x610>

0080d910 <__subdf3>:
  80d910:	00800434 	movhi	r2,16
  80d914:	3810d53a 	srli	r8,r7,20
  80d918:	10bfffc4 	addi	r2,r2,-1
  80d91c:	2806d53a 	srli	r3,r5,20
  80d920:	2892703a 	and	r9,r5,r2
  80d924:	3884703a 	and	r2,r7,r2
  80d928:	280ad7fa 	srli	r5,r5,31
  80d92c:	481290fa 	slli	r9,r9,3
  80d930:	2018d77a 	srli	r12,r4,29
  80d934:	100490fa 	slli	r2,r2,3
  80d938:	3016d77a 	srli	r11,r6,29
  80d93c:	defffb04 	addi	sp,sp,-20
  80d940:	4201ffcc 	andi	r8,r8,2047
  80d944:	dc800215 	stw	r18,8(sp)
  80d948:	dc400115 	stw	r17,4(sp)
  80d94c:	1c81ffcc 	andi	r18,r3,2047
  80d950:	dfc00415 	stw	ra,16(sp)
  80d954:	dcc00315 	stw	r19,12(sp)
  80d958:	dc000015 	stw	r16,0(sp)
  80d95c:	4281ffd8 	cmpnei	r10,r8,2047
  80d960:	2823883a 	mov	r17,r5
  80d964:	201c90fa 	slli	r14,r4,3
  80d968:	380ed7fa 	srli	r7,r7,31
  80d96c:	301a90fa 	slli	r13,r6,3
  80d970:	29403fcc 	andi	r5,r5,255
  80d974:	6252b03a 	or	r9,r12,r9
  80d978:	589eb03a 	or	r15,r11,r2
  80d97c:	9207c83a 	sub	r3,r18,r8
  80d980:	50006826 	beq	r10,zero,80db24 <__subdf3+0x214>
  80d984:	3ac0005c 	xori	r11,r7,1
  80d988:	2ac07326 	beq	r5,r11,80db58 <__subdf3+0x248>
  80d98c:	00c0590e 	bge	zero,r3,80daf4 <__subdf3+0x1e4>
  80d990:	4000691e 	bne	r8,zero,80db38 <__subdf3+0x228>
  80d994:	7b44b03a 	or	r2,r15,r13
  80d998:	1000fb26 	beq	r2,zero,80dd88 <__subdf3+0x478>
  80d99c:	18bfffc4 	addi	r2,r3,-1
  80d9a0:	10019126 	beq	r2,zero,80dfe8 <__subdf3+0x6d8>
  80d9a4:	18c1ffd8 	cmpnei	r3,r3,2047
  80d9a8:	1800c326 	beq	r3,zero,80dcb8 <__subdf3+0x3a8>
  80d9ac:	1007883a 	mov	r3,r2
  80d9b0:	18800e48 	cmpgei	r2,r3,57
  80d9b4:	1000651e 	bne	r2,zero,80db4c <__subdf3+0x23c>
  80d9b8:	18800808 	cmpgei	r2,r3,32
  80d9bc:	1001331e 	bne	r2,zero,80de8c <__subdf3+0x57c>
  80d9c0:	00800804 	movi	r2,32
  80d9c4:	10c5c83a 	sub	r2,r2,r3
  80d9c8:	78a0983a 	sll	r16,r15,r2
  80d9cc:	68c8d83a 	srl	r4,r13,r3
  80d9d0:	689a983a 	sll	r13,r13,r2
  80d9d4:	78c4d83a 	srl	r2,r15,r3
  80d9d8:	8120b03a 	or	r16,r16,r4
  80d9dc:	681ac03a 	cmpne	r13,r13,zero
  80d9e0:	8360b03a 	or	r16,r16,r13
  80d9e4:	4893c83a 	sub	r9,r9,r2
  80d9e8:	7421c83a 	sub	r16,r14,r16
  80d9ec:	7409803a 	cmpltu	r4,r14,r16
  80d9f0:	4909c83a 	sub	r4,r9,r4
  80d9f4:	2080202c 	andhi	r2,r4,128
  80d9f8:	10009326 	beq	r2,zero,80dc48 <__subdf3+0x338>
  80d9fc:	04c02034 	movhi	r19,128
  80da00:	9cffffc4 	addi	r19,r19,-1
  80da04:	24e6703a 	and	r19,r4,r19
  80da08:	9800b926 	beq	r19,zero,80dcf0 <__subdf3+0x3e0>
  80da0c:	9809883a 	mov	r4,r19
  80da10:	08011cc0 	call	8011cc <__clzsi2>
  80da14:	10fffe04 	addi	r3,r2,-8
  80da18:	01000804 	movi	r4,32
  80da1c:	20c9c83a 	sub	r4,r4,r3
  80da20:	8108d83a 	srl	r4,r16,r4
  80da24:	98e6983a 	sll	r19,r19,r3
  80da28:	80e0983a 	sll	r16,r16,r3
  80da2c:	24c8b03a 	or	r4,r4,r19
  80da30:	1c80b816 	blt	r3,r18,80dd14 <__subdf3+0x404>
  80da34:	1c87c83a 	sub	r3,r3,r18
  80da38:	19400044 	addi	r5,r3,1
  80da3c:	28800808 	cmpgei	r2,r5,32
  80da40:	1000751e 	bne	r2,zero,80dc18 <__subdf3+0x308>
  80da44:	00800804 	movi	r2,32
  80da48:	1145c83a 	sub	r2,r2,r5
  80da4c:	8146d83a 	srl	r3,r16,r5
  80da50:	80a0983a 	sll	r16,r16,r2
  80da54:	2084983a 	sll	r2,r4,r2
  80da58:	2148d83a 	srl	r4,r4,r5
  80da5c:	8020c03a 	cmpne	r16,r16,zero
  80da60:	10c4b03a 	or	r2,r2,r3
  80da64:	1420b03a 	or	r16,r2,r16
  80da68:	0025883a 	mov	r18,zero
  80da6c:	808001cc 	andi	r2,r16,7
  80da70:	10000726 	beq	r2,zero,80da90 <__subdf3+0x180>
  80da74:	808003cc 	andi	r2,r16,15
  80da78:	10800120 	cmpeqi	r2,r2,4
  80da7c:	1000041e 	bne	r2,zero,80da90 <__subdf3+0x180>
  80da80:	80800104 	addi	r2,r16,4
  80da84:	1421803a 	cmpltu	r16,r2,r16
  80da88:	2409883a 	add	r4,r4,r16
  80da8c:	1021883a 	mov	r16,r2
  80da90:	2080202c 	andhi	r2,r4,128
  80da94:	10006e26 	beq	r2,zero,80dc50 <__subdf3+0x340>
  80da98:	90c00044 	addi	r3,r18,1
  80da9c:	1881ffe0 	cmpeqi	r2,r3,2047
  80daa0:	18c1ffcc 	andi	r3,r3,2047
  80daa4:	1000801e 	bne	r2,zero,80dca8 <__subdf3+0x398>
  80daa8:	00bfe034 	movhi	r2,65408
  80daac:	10bfffc4 	addi	r2,r2,-1
  80dab0:	2088703a 	and	r4,r4,r2
  80dab4:	2004977a 	slli	r2,r4,29
  80dab8:	2008927a 	slli	r4,r4,9
  80dabc:	8020d0fa 	srli	r16,r16,3
  80dac0:	2008d33a 	srli	r4,r4,12
  80dac4:	1404b03a 	or	r2,r2,r16
  80dac8:	1806953a 	slli	r3,r3,20
  80dacc:	882297fa 	slli	r17,r17,31
  80dad0:	1906b03a 	or	r3,r3,r4
  80dad4:	1c46b03a 	or	r3,r3,r17
  80dad8:	dfc00417 	ldw	ra,16(sp)
  80dadc:	dcc00317 	ldw	r19,12(sp)
  80dae0:	dc800217 	ldw	r18,8(sp)
  80dae4:	dc400117 	ldw	r17,4(sp)
  80dae8:	dc000017 	ldw	r16,0(sp)
  80daec:	dec00504 	addi	sp,sp,20
  80daf0:	f800283a 	ret
  80daf4:	18002c26 	beq	r3,zero,80dba8 <__subdf3+0x298>
  80daf8:	4487c83a 	sub	r3,r8,r18
  80dafc:	5823883a 	mov	r17,r11
  80db00:	9000bb1e 	bne	r18,zero,80ddf0 <__subdf3+0x4e0>
  80db04:	4b84b03a 	or	r2,r9,r14
  80db08:	10011726 	beq	r2,zero,80df68 <__subdf3+0x658>
  80db0c:	18bfffc4 	addi	r2,r3,-1
  80db10:	10016326 	beq	r2,zero,80e0a0 <__subdf3+0x790>
  80db14:	18c1ffd8 	cmpnei	r3,r3,2047
  80db18:	18012c26 	beq	r3,zero,80dfcc <__subdf3+0x6bc>
  80db1c:	1007883a 	mov	r3,r2
  80db20:	0000b506 	br	80ddf8 <__subdf3+0x4e8>
  80db24:	7b44b03a 	or	r2,r15,r13
  80db28:	103f9626 	beq	r2,zero,80d984 <__subdf3+0x74>
  80db2c:	3ac03fcc 	andi	r11,r7,255
  80db30:	29c07d26 	beq	r5,r7,80dd28 <__subdf3+0x418>
  80db34:	00ffef0e 	bge	zero,r3,80daf4 <__subdf3+0x1e4>
  80db38:	9081ffd8 	cmpnei	r2,r18,2047
  80db3c:	10005e26 	beq	r2,zero,80dcb8 <__subdf3+0x3a8>
  80db40:	18800e48 	cmpgei	r2,r3,57
  80db44:	7bc02034 	orhi	r15,r15,128
  80db48:	103f9b26 	beq	r2,zero,80d9b8 <__subdf3+0xa8>
  80db4c:	7b60b03a 	or	r16,r15,r13
  80db50:	8020c03a 	cmpne	r16,r16,zero
  80db54:	003fa406 	br	80d9e8 <__subdf3+0xd8>
  80db58:	00c0730e 	bge	zero,r3,80dd28 <__subdf3+0x418>
  80db5c:	40002626 	beq	r8,zero,80dbf8 <__subdf3+0x2e8>
  80db60:	9081ffd8 	cmpnei	r2,r18,2047
  80db64:	10005426 	beq	r2,zero,80dcb8 <__subdf3+0x3a8>
  80db68:	7bc02034 	orhi	r15,r15,128
  80db6c:	18800e48 	cmpgei	r2,r3,57
  80db70:	1000431e 	bne	r2,zero,80dc80 <__subdf3+0x370>
  80db74:	18800808 	cmpgei	r2,r3,32
  80db78:	1000de26 	beq	r2,zero,80def4 <__subdf3+0x5e4>
  80db7c:	1c3ff804 	addi	r16,r3,-32
  80db80:	18800820 	cmpeqi	r2,r3,32
  80db84:	7c0ad83a 	srl	r5,r15,r16
  80db88:	1000041e 	bne	r2,zero,80db9c <__subdf3+0x28c>
  80db8c:	00801004 	movi	r2,64
  80db90:	10c5c83a 	sub	r2,r2,r3
  80db94:	7884983a 	sll	r2,r15,r2
  80db98:	689ab03a 	or	r13,r13,r2
  80db9c:	6820c03a 	cmpne	r16,r13,zero
  80dba0:	8160b03a 	or	r16,r16,r5
  80dba4:	00003806 	br	80dc88 <__subdf3+0x378>
  80dba8:	90800044 	addi	r2,r18,1
  80dbac:	1081ff8c 	andi	r2,r2,2046
  80dbb0:	1000a01e 	bne	r2,zero,80de34 <__subdf3+0x524>
  80dbb4:	4b8ab03a 	or	r5,r9,r14
  80dbb8:	7b44b03a 	or	r2,r15,r13
  80dbbc:	9000f11e 	bne	r18,zero,80df84 <__subdf3+0x674>
  80dbc0:	28012e26 	beq	r5,zero,80e07c <__subdf3+0x76c>
  80dbc4:	10010e26 	beq	r2,zero,80e000 <__subdf3+0x6f0>
  80dbc8:	7361c83a 	sub	r16,r14,r13
  80dbcc:	7405803a 	cmpltu	r2,r14,r16
  80dbd0:	4bc9c83a 	sub	r4,r9,r15
  80dbd4:	2089c83a 	sub	r4,r4,r2
  80dbd8:	2080202c 	andhi	r2,r4,128
  80dbdc:	10016d26 	beq	r2,zero,80e194 <__subdf3+0x884>
  80dbe0:	6ba1c83a 	sub	r16,r13,r14
  80dbe4:	7a49c83a 	sub	r4,r15,r9
  80dbe8:	6c1b803a 	cmpltu	r13,r13,r16
  80dbec:	2349c83a 	sub	r4,r4,r13
  80dbf0:	5823883a 	mov	r17,r11
  80dbf4:	003f9d06 	br	80da6c <__subdf3+0x15c>
  80dbf8:	7b44b03a 	or	r2,r15,r13
  80dbfc:	10006226 	beq	r2,zero,80dd88 <__subdf3+0x478>
  80dc00:	18bfffc4 	addi	r2,r3,-1
  80dc04:	1000e926 	beq	r2,zero,80dfac <__subdf3+0x69c>
  80dc08:	18c1ffd8 	cmpnei	r3,r3,2047
  80dc0c:	18012a26 	beq	r3,zero,80e0b8 <__subdf3+0x7a8>
  80dc10:	1007883a 	mov	r3,r2
  80dc14:	003fd506 	br	80db6c <__subdf3+0x25c>
  80dc18:	18fff844 	addi	r3,r3,-31
  80dc1c:	28800820 	cmpeqi	r2,r5,32
  80dc20:	20c6d83a 	srl	r3,r4,r3
  80dc24:	1000041e 	bne	r2,zero,80dc38 <__subdf3+0x328>
  80dc28:	00801004 	movi	r2,64
  80dc2c:	114bc83a 	sub	r5,r2,r5
  80dc30:	2148983a 	sll	r4,r4,r5
  80dc34:	8120b03a 	or	r16,r16,r4
  80dc38:	8020c03a 	cmpne	r16,r16,zero
  80dc3c:	80e0b03a 	or	r16,r16,r3
  80dc40:	0009883a 	mov	r4,zero
  80dc44:	0025883a 	mov	r18,zero
  80dc48:	808001cc 	andi	r2,r16,7
  80dc4c:	103f891e 	bne	r2,zero,80da74 <__subdf3+0x164>
  80dc50:	8020d0fa 	srli	r16,r16,3
  80dc54:	2004977a 	slli	r2,r4,29
  80dc58:	2012d0fa 	srli	r9,r4,3
  80dc5c:	9007883a 	mov	r3,r18
  80dc60:	8084b03a 	or	r2,r16,r2
  80dc64:	1901ffe0 	cmpeqi	r4,r3,2047
  80dc68:	2000191e 	bne	r4,zero,80dcd0 <__subdf3+0x3c0>
  80dc6c:	01000434 	movhi	r4,16
  80dc70:	213fffc4 	addi	r4,r4,-1
  80dc74:	4908703a 	and	r4,r9,r4
  80dc78:	18c1ffcc 	andi	r3,r3,2047
  80dc7c:	003f9206 	br	80dac8 <__subdf3+0x1b8>
  80dc80:	7b60b03a 	or	r16,r15,r13
  80dc84:	8020c03a 	cmpne	r16,r16,zero
  80dc88:	83a1883a 	add	r16,r16,r14
  80dc8c:	8389803a 	cmpltu	r4,r16,r14
  80dc90:	2249883a 	add	r4,r4,r9
  80dc94:	2080202c 	andhi	r2,r4,128
  80dc98:	103feb26 	beq	r2,zero,80dc48 <__subdf3+0x338>
  80dc9c:	94800044 	addi	r18,r18,1
  80dca0:	9081ffe0 	cmpeqi	r2,r18,2047
  80dca4:	10006f26 	beq	r2,zero,80de64 <__subdf3+0x554>
  80dca8:	00c1ffc4 	movi	r3,2047
  80dcac:	0009883a 	mov	r4,zero
  80dcb0:	0005883a 	mov	r2,zero
  80dcb4:	003f8406 	br	80dac8 <__subdf3+0x1b8>
  80dcb8:	4806977a 	slli	r3,r9,29
  80dcbc:	00880034 	movhi	r2,8192
  80dcc0:	10bfffc4 	addi	r2,r2,-1
  80dcc4:	4812d0fa 	srli	r9,r9,3
  80dcc8:	2088703a 	and	r4,r4,r2
  80dccc:	20c4b03a 	or	r2,r4,r3
  80dcd0:	4886b03a 	or	r3,r9,r2
  80dcd4:	18013726 	beq	r3,zero,80e1b4 <__subdf3+0x8a4>
  80dcd8:	00c00434 	movhi	r3,16
  80dcdc:	18ffffc4 	addi	r3,r3,-1
  80dce0:	49000234 	orhi	r4,r9,8
  80dce4:	20c8703a 	and	r4,r4,r3
  80dce8:	00c1ffc4 	movi	r3,2047
  80dcec:	003f7606 	br	80dac8 <__subdf3+0x1b8>
  80dcf0:	8009883a 	mov	r4,r16
  80dcf4:	08011cc0 	call	8011cc <__clzsi2>
  80dcf8:	10c00604 	addi	r3,r2,24
  80dcfc:	19000808 	cmpgei	r4,r3,32
  80dd00:	203f4526 	beq	r4,zero,80da18 <__subdf3+0x108>
  80dd04:	113ffe04 	addi	r4,r2,-8
  80dd08:	8108983a 	sll	r4,r16,r4
  80dd0c:	0021883a 	mov	r16,zero
  80dd10:	1cbf480e 	bge	r3,r18,80da34 <__subdf3+0x124>
  80dd14:	00bfe034 	movhi	r2,65408
  80dd18:	10bfffc4 	addi	r2,r2,-1
  80dd1c:	90e5c83a 	sub	r18,r18,r3
  80dd20:	2088703a 	and	r4,r4,r2
  80dd24:	003f5106 	br	80da6c <__subdf3+0x15c>
  80dd28:	18001e26 	beq	r3,zero,80dda4 <__subdf3+0x494>
  80dd2c:	4487c83a 	sub	r3,r8,r18
  80dd30:	90006826 	beq	r18,zero,80ded4 <__subdf3+0x5c4>
  80dd34:	5000a526 	beq	r10,zero,80dfcc <__subdf3+0x6bc>
  80dd38:	4a402034 	orhi	r9,r9,128
  80dd3c:	18800e48 	cmpgei	r2,r3,57
  80dd40:	1000b61e 	bne	r2,zero,80e01c <__subdf3+0x70c>
  80dd44:	18800808 	cmpgei	r2,r3,32
  80dd48:	1001021e 	bne	r2,zero,80e154 <__subdf3+0x844>
  80dd4c:	00800804 	movi	r2,32
  80dd50:	10c5c83a 	sub	r2,r2,r3
  80dd54:	48a0983a 	sll	r16,r9,r2
  80dd58:	70c8d83a 	srl	r4,r14,r3
  80dd5c:	7084983a 	sll	r2,r14,r2
  80dd60:	48d2d83a 	srl	r9,r9,r3
  80dd64:	8120b03a 	or	r16,r16,r4
  80dd68:	1004c03a 	cmpne	r2,r2,zero
  80dd6c:	80a0b03a 	or	r16,r16,r2
  80dd70:	7a5f883a 	add	r15,r15,r9
  80dd74:	8361883a 	add	r16,r16,r13
  80dd78:	8349803a 	cmpltu	r4,r16,r13
  80dd7c:	23c9883a 	add	r4,r4,r15
  80dd80:	4025883a 	mov	r18,r8
  80dd84:	003fc306 	br	80dc94 <__subdf3+0x384>
  80dd88:	480a977a 	slli	r5,r9,29
  80dd8c:	00880034 	movhi	r2,8192
  80dd90:	10bfffc4 	addi	r2,r2,-1
  80dd94:	2088703a 	and	r4,r4,r2
  80dd98:	4812d0fa 	srli	r9,r9,3
  80dd9c:	2144b03a 	or	r2,r4,r5
  80dda0:	003fb006 	br	80dc64 <__subdf3+0x354>
  80dda4:	90800044 	addi	r2,r18,1
  80dda8:	1141ff8c 	andi	r5,r2,2046
  80ddac:	28005c1e 	bne	r5,zero,80df20 <__subdf3+0x610>
  80ddb0:	4b84b03a 	or	r2,r9,r14
  80ddb4:	9000a71e 	bne	r18,zero,80e054 <__subdf3+0x744>
  80ddb8:	1000df26 	beq	r2,zero,80e138 <__subdf3+0x828>
  80ddbc:	7b44b03a 	or	r2,r15,r13
  80ddc0:	10008f26 	beq	r2,zero,80e000 <__subdf3+0x6f0>
  80ddc4:	7361883a 	add	r16,r14,r13
  80ddc8:	4bc9883a 	add	r4,r9,r15
  80ddcc:	839d803a 	cmpltu	r14,r16,r14
  80ddd0:	2389883a 	add	r4,r4,r14
  80ddd4:	2080202c 	andhi	r2,r4,128
  80ddd8:	103f9b26 	beq	r2,zero,80dc48 <__subdf3+0x338>
  80dddc:	00bfe034 	movhi	r2,65408
  80dde0:	10bfffc4 	addi	r2,r2,-1
  80dde4:	2088703a 	and	r4,r4,r2
  80dde8:	04800044 	movi	r18,1
  80ddec:	003f9606 	br	80dc48 <__subdf3+0x338>
  80ddf0:	50007626 	beq	r10,zero,80dfcc <__subdf3+0x6bc>
  80ddf4:	4a402034 	orhi	r9,r9,128
  80ddf8:	18800e48 	cmpgei	r2,r3,57
  80ddfc:	10002e1e 	bne	r2,zero,80deb8 <__subdf3+0x5a8>
  80de00:	18800808 	cmpgei	r2,r3,32
  80de04:	1000881e 	bne	r2,zero,80e028 <__subdf3+0x718>
  80de08:	00800804 	movi	r2,32
  80de0c:	10c5c83a 	sub	r2,r2,r3
  80de10:	48a0983a 	sll	r16,r9,r2
  80de14:	70c8d83a 	srl	r4,r14,r3
  80de18:	709c983a 	sll	r14,r14,r2
  80de1c:	48d2d83a 	srl	r9,r9,r3
  80de20:	8120b03a 	or	r16,r16,r4
  80de24:	701cc03a 	cmpne	r14,r14,zero
  80de28:	83a0b03a 	or	r16,r16,r14
  80de2c:	7a5fc83a 	sub	r15,r15,r9
  80de30:	00002306 	br	80dec0 <__subdf3+0x5b0>
  80de34:	7361c83a 	sub	r16,r14,r13
  80de38:	4be7c83a 	sub	r19,r9,r15
  80de3c:	7409803a 	cmpltu	r4,r14,r16
  80de40:	9927c83a 	sub	r19,r19,r4
  80de44:	9880202c 	andhi	r2,r19,128
  80de48:	1000411e 	bne	r2,zero,80df50 <__subdf3+0x640>
  80de4c:	84c4b03a 	or	r2,r16,r19
  80de50:	103eed1e 	bne	r2,zero,80da08 <__subdf3+0xf8>
  80de54:	0013883a 	mov	r9,zero
  80de58:	0023883a 	mov	r17,zero
  80de5c:	003f8306 	br	80dc6c <__subdf3+0x35c>
  80de60:	04800084 	movi	r18,2
  80de64:	00bfe034 	movhi	r2,65408
  80de68:	10bfffc4 	addi	r2,r2,-1
  80de6c:	8006d07a 	srli	r3,r16,1
  80de70:	2088703a 	and	r4,r4,r2
  80de74:	200497fa 	slli	r2,r4,31
  80de78:	8400004c 	andi	r16,r16,1
  80de7c:	1c20b03a 	or	r16,r3,r16
  80de80:	2008d07a 	srli	r4,r4,1
  80de84:	1420b03a 	or	r16,r2,r16
  80de88:	003ef806 	br	80da6c <__subdf3+0x15c>
  80de8c:	1c3ff804 	addi	r16,r3,-32
  80de90:	18800820 	cmpeqi	r2,r3,32
  80de94:	7c0ad83a 	srl	r5,r15,r16
  80de98:	1000041e 	bne	r2,zero,80deac <__subdf3+0x59c>
  80de9c:	00801004 	movi	r2,64
  80dea0:	10c5c83a 	sub	r2,r2,r3
  80dea4:	7884983a 	sll	r2,r15,r2
  80dea8:	689ab03a 	or	r13,r13,r2
  80deac:	6820c03a 	cmpne	r16,r13,zero
  80deb0:	8160b03a 	or	r16,r16,r5
  80deb4:	003ecc06 	br	80d9e8 <__subdf3+0xd8>
  80deb8:	4b92b03a 	or	r9,r9,r14
  80debc:	4820c03a 	cmpne	r16,r9,zero
  80dec0:	6c21c83a 	sub	r16,r13,r16
  80dec4:	6c09803a 	cmpltu	r4,r13,r16
  80dec8:	7909c83a 	sub	r4,r15,r4
  80decc:	4025883a 	mov	r18,r8
  80ded0:	003ec806 	br	80d9f4 <__subdf3+0xe4>
  80ded4:	4b84b03a 	or	r2,r9,r14
  80ded8:	10007e26 	beq	r2,zero,80e0d4 <__subdf3+0x7c4>
  80dedc:	18bfffc4 	addi	r2,r3,-1
  80dee0:	1000a726 	beq	r2,zero,80e180 <__subdf3+0x870>
  80dee4:	18c1ffd8 	cmpnei	r3,r3,2047
  80dee8:	18003826 	beq	r3,zero,80dfcc <__subdf3+0x6bc>
  80deec:	1007883a 	mov	r3,r2
  80def0:	003f9206 	br	80dd3c <__subdf3+0x42c>
  80def4:	00800804 	movi	r2,32
  80def8:	10c5c83a 	sub	r2,r2,r3
  80defc:	78a0983a 	sll	r16,r15,r2
  80df00:	68c8d83a 	srl	r4,r13,r3
  80df04:	689a983a 	sll	r13,r13,r2
  80df08:	78c4d83a 	srl	r2,r15,r3
  80df0c:	8120b03a 	or	r16,r16,r4
  80df10:	681ac03a 	cmpne	r13,r13,zero
  80df14:	8360b03a 	or	r16,r16,r13
  80df18:	4893883a 	add	r9,r9,r2
  80df1c:	003f5a06 	br	80dc88 <__subdf3+0x378>
  80df20:	10c1ffe0 	cmpeqi	r3,r2,2047
  80df24:	183f601e 	bne	r3,zero,80dca8 <__subdf3+0x398>
  80df28:	735b883a 	add	r13,r14,r13
  80df2c:	6b9d803a 	cmpltu	r14,r13,r14
  80df30:	4bc9883a 	add	r4,r9,r15
  80df34:	2389883a 	add	r4,r4,r14
  80df38:	202097fa 	slli	r16,r4,31
  80df3c:	681ad07a 	srli	r13,r13,1
  80df40:	2008d07a 	srli	r4,r4,1
  80df44:	1025883a 	mov	r18,r2
  80df48:	8360b03a 	or	r16,r16,r13
  80df4c:	003f3e06 	br	80dc48 <__subdf3+0x338>
  80df50:	6ba1c83a 	sub	r16,r13,r14
  80df54:	7a49c83a 	sub	r4,r15,r9
  80df58:	6c1b803a 	cmpltu	r13,r13,r16
  80df5c:	2367c83a 	sub	r19,r4,r13
  80df60:	5823883a 	mov	r17,r11
  80df64:	003ea806 	br	80da08 <__subdf3+0xf8>
  80df68:	7808977a 	slli	r4,r15,29
  80df6c:	00880034 	movhi	r2,8192
  80df70:	10bfffc4 	addi	r2,r2,-1
  80df74:	308c703a 	and	r6,r6,r2
  80df78:	7812d0fa 	srli	r9,r15,3
  80df7c:	3104b03a 	or	r2,r6,r4
  80df80:	003f3806 	br	80dc64 <__subdf3+0x354>
  80df84:	28005a1e 	bne	r5,zero,80e0f0 <__subdf3+0x7e0>
  80df88:	10008526 	beq	r2,zero,80e1a0 <__subdf3+0x890>
  80df8c:	7806977a 	slli	r3,r15,29
  80df90:	00880034 	movhi	r2,8192
  80df94:	10bfffc4 	addi	r2,r2,-1
  80df98:	3084703a 	and	r2,r6,r2
  80df9c:	7812d0fa 	srli	r9,r15,3
  80dfa0:	10c4b03a 	or	r2,r2,r3
  80dfa4:	5823883a 	mov	r17,r11
  80dfa8:	003f4906 	br	80dcd0 <__subdf3+0x3c0>
  80dfac:	7361883a 	add	r16,r14,r13
  80dfb0:	4bc9883a 	add	r4,r9,r15
  80dfb4:	839d803a 	cmpltu	r14,r16,r14
  80dfb8:	2389883a 	add	r4,r4,r14
  80dfbc:	2080202c 	andhi	r2,r4,128
  80dfc0:	103fa71e 	bne	r2,zero,80de60 <__subdf3+0x550>
  80dfc4:	04800044 	movi	r18,1
  80dfc8:	003f1f06 	br	80dc48 <__subdf3+0x338>
  80dfcc:	7806977a 	slli	r3,r15,29
  80dfd0:	00880034 	movhi	r2,8192
  80dfd4:	10bfffc4 	addi	r2,r2,-1
  80dfd8:	3084703a 	and	r2,r6,r2
  80dfdc:	7812d0fa 	srli	r9,r15,3
  80dfe0:	10c4b03a 	or	r2,r2,r3
  80dfe4:	003f3a06 	br	80dcd0 <__subdf3+0x3c0>
  80dfe8:	7361c83a 	sub	r16,r14,r13
  80dfec:	4bc9c83a 	sub	r4,r9,r15
  80dff0:	741d803a 	cmpltu	r14,r14,r16
  80dff4:	2389c83a 	sub	r4,r4,r14
  80dff8:	04800044 	movi	r18,1
  80dffc:	003e7d06 	br	80d9f4 <__subdf3+0xe4>
  80e000:	480a977a 	slli	r5,r9,29
  80e004:	00880034 	movhi	r2,8192
  80e008:	10bfffc4 	addi	r2,r2,-1
  80e00c:	2084703a 	and	r2,r4,r2
  80e010:	4812d0fa 	srli	r9,r9,3
  80e014:	1144b03a 	or	r2,r2,r5
  80e018:	003f1406 	br	80dc6c <__subdf3+0x35c>
  80e01c:	4b92b03a 	or	r9,r9,r14
  80e020:	4820c03a 	cmpne	r16,r9,zero
  80e024:	003f5306 	br	80dd74 <__subdf3+0x464>
  80e028:	1c3ff804 	addi	r16,r3,-32
  80e02c:	19000820 	cmpeqi	r4,r3,32
  80e030:	4c04d83a 	srl	r2,r9,r16
  80e034:	2000041e 	bne	r4,zero,80e048 <__subdf3+0x738>
  80e038:	01001004 	movi	r4,64
  80e03c:	20c7c83a 	sub	r3,r4,r3
  80e040:	48d2983a 	sll	r9,r9,r3
  80e044:	725cb03a 	or	r14,r14,r9
  80e048:	7020c03a 	cmpne	r16,r14,zero
  80e04c:	80a0b03a 	or	r16,r16,r2
  80e050:	003f9b06 	br	80dec0 <__subdf3+0x5b0>
  80e054:	103fdd26 	beq	r2,zero,80dfcc <__subdf3+0x6bc>
  80e058:	7b5ab03a 	or	r13,r15,r13
  80e05c:	480a977a 	slli	r5,r9,29
  80e060:	4812d0fa 	srli	r9,r9,3
  80e064:	6800251e 	bne	r13,zero,80e0fc <__subdf3+0x7ec>
  80e068:	00880034 	movhi	r2,8192
  80e06c:	10bfffc4 	addi	r2,r2,-1
  80e070:	2084703a 	and	r2,r4,r2
  80e074:	1144b03a 	or	r2,r2,r5
  80e078:	003f1506 	br	80dcd0 <__subdf3+0x3c0>
  80e07c:	103f7526 	beq	r2,zero,80de54 <__subdf3+0x544>
  80e080:	7808977a 	slli	r4,r15,29
  80e084:	00880034 	movhi	r2,8192
  80e088:	10bfffc4 	addi	r2,r2,-1
  80e08c:	3084703a 	and	r2,r6,r2
  80e090:	7812d0fa 	srli	r9,r15,3
  80e094:	1104b03a 	or	r2,r2,r4
  80e098:	5823883a 	mov	r17,r11
  80e09c:	003ef306 	br	80dc6c <__subdf3+0x35c>
  80e0a0:	6ba1c83a 	sub	r16,r13,r14
  80e0a4:	7a49c83a 	sub	r4,r15,r9
  80e0a8:	6c1b803a 	cmpltu	r13,r13,r16
  80e0ac:	2349c83a 	sub	r4,r4,r13
  80e0b0:	04800044 	movi	r18,1
  80e0b4:	003e4f06 	br	80d9f4 <__subdf3+0xe4>
  80e0b8:	4806977a 	slli	r3,r9,29
  80e0bc:	00880034 	movhi	r2,8192
  80e0c0:	10bfffc4 	addi	r2,r2,-1
  80e0c4:	2084703a 	and	r2,r4,r2
  80e0c8:	4812d0fa 	srli	r9,r9,3
  80e0cc:	10c4b03a 	or	r2,r2,r3
  80e0d0:	003eff06 	br	80dcd0 <__subdf3+0x3c0>
  80e0d4:	7808977a 	slli	r4,r15,29
  80e0d8:	00880034 	movhi	r2,8192
  80e0dc:	10bfffc4 	addi	r2,r2,-1
  80e0e0:	3084703a 	and	r2,r6,r2
  80e0e4:	7812d0fa 	srli	r9,r15,3
  80e0e8:	1104b03a 	or	r2,r2,r4
  80e0ec:	003edd06 	br	80dc64 <__subdf3+0x354>
  80e0f0:	480a977a 	slli	r5,r9,29
  80e0f4:	4812d0fa 	srli	r9,r9,3
  80e0f8:	103fdb26 	beq	r2,zero,80e068 <__subdf3+0x758>
  80e0fc:	00c80034 	movhi	r3,8192
  80e100:	18ffffc4 	addi	r3,r3,-1
  80e104:	20c4703a 	and	r2,r4,r3
  80e108:	4900022c 	andhi	r4,r9,8
  80e10c:	1144b03a 	or	r2,r2,r5
  80e110:	203eef26 	beq	r4,zero,80dcd0 <__subdf3+0x3c0>
  80e114:	7808d0fa 	srli	r4,r15,3
  80e118:	2140022c 	andhi	r5,r4,8
  80e11c:	283eec1e 	bne	r5,zero,80dcd0 <__subdf3+0x3c0>
  80e120:	7804977a 	slli	r2,r15,29
  80e124:	30cc703a 	and	r6,r6,r3
  80e128:	5823883a 	mov	r17,r11
  80e12c:	3084b03a 	or	r2,r6,r2
  80e130:	2013883a 	mov	r9,r4
  80e134:	003ee606 	br	80dcd0 <__subdf3+0x3c0>
  80e138:	7808977a 	slli	r4,r15,29
  80e13c:	00880034 	movhi	r2,8192
  80e140:	10bfffc4 	addi	r2,r2,-1
  80e144:	3084703a 	and	r2,r6,r2
  80e148:	7812d0fa 	srli	r9,r15,3
  80e14c:	1104b03a 	or	r2,r2,r4
  80e150:	003ec606 	br	80dc6c <__subdf3+0x35c>
  80e154:	18bff804 	addi	r2,r3,-32
  80e158:	19000820 	cmpeqi	r4,r3,32
  80e15c:	4884d83a 	srl	r2,r9,r2
  80e160:	2000041e 	bne	r4,zero,80e174 <__subdf3+0x864>
  80e164:	01001004 	movi	r4,64
  80e168:	20c7c83a 	sub	r3,r4,r3
  80e16c:	48d2983a 	sll	r9,r9,r3
  80e170:	725cb03a 	or	r14,r14,r9
  80e174:	7020c03a 	cmpne	r16,r14,zero
  80e178:	80a0b03a 	or	r16,r16,r2
  80e17c:	003efd06 	br	80dd74 <__subdf3+0x464>
  80e180:	7361883a 	add	r16,r14,r13
  80e184:	4bc9883a 	add	r4,r9,r15
  80e188:	835b803a 	cmpltu	r13,r16,r13
  80e18c:	2349883a 	add	r4,r4,r13
  80e190:	003f8a06 	br	80dfbc <__subdf3+0x6ac>
  80e194:	8104b03a 	or	r2,r16,r4
  80e198:	103f2e26 	beq	r2,zero,80de54 <__subdf3+0x544>
  80e19c:	003eaa06 	br	80dc48 <__subdf3+0x338>
  80e1a0:	02400434 	movhi	r9,16
  80e1a4:	0023883a 	mov	r17,zero
  80e1a8:	00bfffc4 	movi	r2,-1
  80e1ac:	4a7fffc4 	addi	r9,r9,-1
  80e1b0:	003ec906 	br	80dcd8 <__subdf3+0x3c8>
  80e1b4:	0005883a 	mov	r2,zero
  80e1b8:	00c1ffc4 	movi	r3,2047
  80e1bc:	0009883a 	mov	r4,zero
  80e1c0:	003e4106 	br	80dac8 <__subdf3+0x1b8>

0080e1c4 <__unorddf2>:
  80e1c4:	2806d53a 	srli	r3,r5,20
  80e1c8:	3810d53a 	srli	r8,r7,20
  80e1cc:	02400434 	movhi	r9,16
  80e1d0:	18c1ffcc 	andi	r3,r3,2047
  80e1d4:	4a7fffc4 	addi	r9,r9,-1
  80e1d8:	18c1ffd8 	cmpnei	r3,r3,2047
  80e1dc:	2a4a703a 	and	r5,r5,r9
  80e1e0:	3a4e703a 	and	r7,r7,r9
  80e1e4:	4201ffcc 	andi	r8,r8,2047
  80e1e8:	18000426 	beq	r3,zero,80e1fc <__unorddf2+0x38>
  80e1ec:	4201ffd8 	cmpnei	r8,r8,2047
  80e1f0:	40000626 	beq	r8,zero,80e20c <__unorddf2+0x48>
  80e1f4:	0005883a 	mov	r2,zero
  80e1f8:	f800283a 	ret
  80e1fc:	290ab03a 	or	r5,r5,r4
  80e200:	283ffa26 	beq	r5,zero,80e1ec <__unorddf2+0x28>
  80e204:	00800044 	movi	r2,1
  80e208:	f800283a 	ret
  80e20c:	398eb03a 	or	r7,r7,r6
  80e210:	3804c03a 	cmpne	r2,r7,zero
  80e214:	f800283a 	ret

0080e218 <__fixdfsi>:
  80e218:	2806d53a 	srli	r3,r5,20
  80e21c:	01800434 	movhi	r6,16
  80e220:	31bfffc4 	addi	r6,r6,-1
  80e224:	18c1ffcc 	andi	r3,r3,2047
  80e228:	19c0ffd0 	cmplti	r7,r3,1023
  80e22c:	2810d7fa 	srli	r8,r5,31
  80e230:	298a703a 	and	r5,r5,r6
  80e234:	3800061e 	bne	r7,zero,80e250 <__fixdfsi+0x38>
  80e238:	18810790 	cmplti	r2,r3,1054
  80e23c:	1000061e 	bne	r2,zero,80e258 <__fixdfsi+0x40>
  80e240:	00a00034 	movhi	r2,32768
  80e244:	10bfffc4 	addi	r2,r2,-1
  80e248:	4085883a 	add	r2,r8,r2
  80e24c:	f800283a 	ret
  80e250:	0005883a 	mov	r2,zero
  80e254:	f800283a 	ret
  80e258:	01810cc4 	movi	r6,1075
  80e25c:	30cdc83a 	sub	r6,r6,r3
  80e260:	30800808 	cmpgei	r2,r6,32
  80e264:	29400434 	orhi	r5,r5,16
  80e268:	1000071e 	bne	r2,zero,80e288 <__fixdfsi+0x70>
  80e26c:	18befb44 	addi	r2,r3,-1043
  80e270:	2884983a 	sll	r2,r5,r2
  80e274:	2188d83a 	srl	r4,r4,r6
  80e278:	1104b03a 	or	r2,r2,r4
  80e27c:	403ff526 	beq	r8,zero,80e254 <__fixdfsi+0x3c>
  80e280:	0085c83a 	sub	r2,zero,r2
  80e284:	f800283a 	ret
  80e288:	008104c4 	movi	r2,1043
  80e28c:	10c5c83a 	sub	r2,r2,r3
  80e290:	2884d83a 	srl	r2,r5,r2
  80e294:	003ff906 	br	80e27c <__fixdfsi+0x64>

0080e298 <__floatsidf>:
  80e298:	defffd04 	addi	sp,sp,-12
  80e29c:	dfc00215 	stw	ra,8(sp)
  80e2a0:	dc400115 	stw	r17,4(sp)
  80e2a4:	dc000015 	stw	r16,0(sp)
  80e2a8:	20001326 	beq	r4,zero,80e2f8 <__floatsidf+0x60>
  80e2ac:	2022d7fa 	srli	r17,r4,31
  80e2b0:	2021883a 	mov	r16,r4
  80e2b4:	20002416 	blt	r4,zero,80e348 <__floatsidf+0xb0>
  80e2b8:	8009883a 	mov	r4,r16
  80e2bc:	08011cc0 	call	8011cc <__clzsi2>
  80e2c0:	01010784 	movi	r4,1054
  80e2c4:	2089c83a 	sub	r4,r4,r2
  80e2c8:	114002c8 	cmpgei	r5,r2,11
  80e2cc:	20c1ffcc 	andi	r3,r4,2047
  80e2d0:	2800161e 	bne	r5,zero,80e32c <__floatsidf+0x94>
  80e2d4:	010002c4 	movi	r4,11
  80e2d8:	2089c83a 	sub	r4,r4,r2
  80e2dc:	810ad83a 	srl	r5,r16,r4
  80e2e0:	01000434 	movhi	r4,16
  80e2e4:	10800544 	addi	r2,r2,21
  80e2e8:	213fffc4 	addi	r4,r4,-1
  80e2ec:	8084983a 	sll	r2,r16,r2
  80e2f0:	290a703a 	and	r5,r5,r4
  80e2f4:	00000406 	br	80e308 <__floatsidf+0x70>
  80e2f8:	0023883a 	mov	r17,zero
  80e2fc:	0007883a 	mov	r3,zero
  80e300:	000b883a 	mov	r5,zero
  80e304:	0005883a 	mov	r2,zero
  80e308:	1808953a 	slli	r4,r3,20
  80e30c:	880697fa 	slli	r3,r17,31
  80e310:	2148b03a 	or	r4,r4,r5
  80e314:	20c6b03a 	or	r3,r4,r3
  80e318:	dfc00217 	ldw	ra,8(sp)
  80e31c:	dc400117 	ldw	r17,4(sp)
  80e320:	dc000017 	ldw	r16,0(sp)
  80e324:	dec00304 	addi	sp,sp,12
  80e328:	f800283a 	ret
  80e32c:	10bffd44 	addi	r2,r2,-11
  80e330:	808a983a 	sll	r5,r16,r2
  80e334:	00800434 	movhi	r2,16
  80e338:	10bfffc4 	addi	r2,r2,-1
  80e33c:	288a703a 	and	r5,r5,r2
  80e340:	0005883a 	mov	r2,zero
  80e344:	003ff006 	br	80e308 <__floatsidf+0x70>
  80e348:	0121c83a 	sub	r16,zero,r4
  80e34c:	003fda06 	br	80e2b8 <__floatsidf+0x20>

0080e350 <__floatunsidf>:
  80e350:	defffe04 	addi	sp,sp,-8
  80e354:	dc000015 	stw	r16,0(sp)
  80e358:	dfc00115 	stw	ra,4(sp)
  80e35c:	2021883a 	mov	r16,r4
  80e360:	20000f26 	beq	r4,zero,80e3a0 <__floatunsidf+0x50>
  80e364:	08011cc0 	call	8011cc <__clzsi2>
  80e368:	00c10784 	movi	r3,1054
  80e36c:	1887c83a 	sub	r3,r3,r2
  80e370:	110002c8 	cmpgei	r4,r2,11
  80e374:	18c1ffcc 	andi	r3,r3,2047
  80e378:	2000121e 	bne	r4,zero,80e3c4 <__floatunsidf+0x74>
  80e37c:	014002c4 	movi	r5,11
  80e380:	288bc83a 	sub	r5,r5,r2
  80e384:	814ad83a 	srl	r5,r16,r5
  80e388:	01000434 	movhi	r4,16
  80e38c:	10800544 	addi	r2,r2,21
  80e390:	213fffc4 	addi	r4,r4,-1
  80e394:	80a0983a 	sll	r16,r16,r2
  80e398:	290a703a 	and	r5,r5,r4
  80e39c:	00000206 	br	80e3a8 <__floatunsidf+0x58>
  80e3a0:	0007883a 	mov	r3,zero
  80e3a4:	000b883a 	mov	r5,zero
  80e3a8:	1806953a 	slli	r3,r3,20
  80e3ac:	8005883a 	mov	r2,r16
  80e3b0:	1946b03a 	or	r3,r3,r5
  80e3b4:	dfc00117 	ldw	ra,4(sp)
  80e3b8:	dc000017 	ldw	r16,0(sp)
  80e3bc:	dec00204 	addi	sp,sp,8
  80e3c0:	f800283a 	ret
  80e3c4:	117ffd44 	addi	r5,r2,-11
  80e3c8:	814a983a 	sll	r5,r16,r5
  80e3cc:	00800434 	movhi	r2,16
  80e3d0:	10bfffc4 	addi	r2,r2,-1
  80e3d4:	288a703a 	and	r5,r5,r2
  80e3d8:	0021883a 	mov	r16,zero
  80e3dc:	003ff206 	br	80e3a8 <__floatunsidf+0x58>

0080e3e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e3e0:	defffe04 	addi	sp,sp,-8
  80e3e4:	dfc00115 	stw	ra,4(sp)
  80e3e8:	df000015 	stw	fp,0(sp)
  80e3ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e3f0:	d0a00917 	ldw	r2,-32732(gp)
  80e3f4:	10000326 	beq	r2,zero,80e404 <alt_get_errno+0x24>
  80e3f8:	d0a00917 	ldw	r2,-32732(gp)
  80e3fc:	103ee83a 	callr	r2
  80e400:	00000106 	br	80e408 <alt_get_errno+0x28>
  80e404:	d0a70704 	addi	r2,gp,-25572
}
  80e408:	e037883a 	mov	sp,fp
  80e40c:	dfc00117 	ldw	ra,4(sp)
  80e410:	df000017 	ldw	fp,0(sp)
  80e414:	dec00204 	addi	sp,sp,8
  80e418:	f800283a 	ret

0080e41c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80e41c:	defffb04 	addi	sp,sp,-20
  80e420:	dfc00415 	stw	ra,16(sp)
  80e424:	df000315 	stw	fp,12(sp)
  80e428:	df000304 	addi	fp,sp,12
  80e42c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80e430:	e0bffd17 	ldw	r2,-12(fp)
  80e434:	10000916 	blt	r2,zero,80e45c <close+0x40>
  80e438:	e0fffd17 	ldw	r3,-12(fp)
  80e43c:	1805883a 	mov	r2,r3
  80e440:	1085883a 	add	r2,r2,r2
  80e444:	10c5883a 	add	r2,r2,r3
  80e448:	100490ba 	slli	r2,r2,2
  80e44c:	00c02074 	movhi	r3,129
  80e450:	18c77c04 	addi	r3,r3,7664
  80e454:	10c5883a 	add	r2,r2,r3
  80e458:	00000106 	br	80e460 <close+0x44>
  80e45c:	0005883a 	mov	r2,zero
  80e460:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  80e464:	e0bfff17 	ldw	r2,-4(fp)
  80e468:	10001926 	beq	r2,zero,80e4d0 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80e46c:	e0bfff17 	ldw	r2,-4(fp)
  80e470:	10800017 	ldw	r2,0(r2)
  80e474:	10800417 	ldw	r2,16(r2)
  80e478:	10000626 	beq	r2,zero,80e494 <close+0x78>
  80e47c:	e0bfff17 	ldw	r2,-4(fp)
  80e480:	10800017 	ldw	r2,0(r2)
  80e484:	10800417 	ldw	r2,16(r2)
  80e488:	e13fff17 	ldw	r4,-4(fp)
  80e48c:	103ee83a 	callr	r2
  80e490:	00000106 	br	80e498 <close+0x7c>
  80e494:	0005883a 	mov	r2,zero
  80e498:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80e49c:	e13ffd17 	ldw	r4,-12(fp)
  80e4a0:	080ecd80 	call	80ecd8 <alt_release_fd>
    if (rval < 0)
  80e4a4:	e0bffe17 	ldw	r2,-8(fp)
  80e4a8:	1000070e 	bge	r2,zero,80e4c8 <close+0xac>
    {
      ALT_ERRNO = -rval;
  80e4ac:	080e3e00 	call	80e3e0 <alt_get_errno>
  80e4b0:	1007883a 	mov	r3,r2
  80e4b4:	e0bffe17 	ldw	r2,-8(fp)
  80e4b8:	0085c83a 	sub	r2,zero,r2
  80e4bc:	18800015 	stw	r2,0(r3)
      return -1;
  80e4c0:	00bfffc4 	movi	r2,-1
  80e4c4:	00000706 	br	80e4e4 <close+0xc8>
    }
    return 0;
  80e4c8:	0005883a 	mov	r2,zero
  80e4cc:	00000506 	br	80e4e4 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e4d0:	080e3e00 	call	80e3e0 <alt_get_errno>
  80e4d4:	1007883a 	mov	r3,r2
  80e4d8:	00801444 	movi	r2,81
  80e4dc:	18800015 	stw	r2,0(r3)
    return -1;
  80e4e0:	00bfffc4 	movi	r2,-1
  }
}
  80e4e4:	e037883a 	mov	sp,fp
  80e4e8:	dfc00117 	ldw	ra,4(sp)
  80e4ec:	df000017 	ldw	fp,0(sp)
  80e4f0:	dec00204 	addi	sp,sp,8
  80e4f4:	f800283a 	ret

0080e4f8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80e4f8:	defffc04 	addi	sp,sp,-16
  80e4fc:	df000315 	stw	fp,12(sp)
  80e500:	df000304 	addi	fp,sp,12
  80e504:	e13fff15 	stw	r4,-4(fp)
  80e508:	e17ffe15 	stw	r5,-8(fp)
  80e50c:	e1bffd15 	stw	r6,-12(fp)
  return len;
  80e510:	e0bffd17 	ldw	r2,-12(fp)
}
  80e514:	e037883a 	mov	sp,fp
  80e518:	df000017 	ldw	fp,0(sp)
  80e51c:	dec00104 	addi	sp,sp,4
  80e520:	f800283a 	ret

0080e524 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80e524:	defffd04 	addi	sp,sp,-12
  80e528:	df000215 	stw	fp,8(sp)
  80e52c:	df000204 	addi	fp,sp,8
  80e530:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80e534:	0001883a 	nop
  80e538:	e0bffe17 	ldw	r2,-8(fp)
  80e53c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80e540:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80e544:	10000226 	beq	r2,zero,80e550 <_exit+0x2c>
    ALT_SIM_FAIL();
  80e548:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  80e54c:	00000106 	br	80e554 <_exit+0x30>
    ALT_SIM_PASS();
  80e550:	002af0b0 	cmpltui	zero,zero,43970
}
  80e554:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80e558:	003fff06 	br	80e558 <_exit+0x34>

0080e55c <alt_get_errno>:
{
  80e55c:	defffe04 	addi	sp,sp,-8
  80e560:	dfc00115 	stw	ra,4(sp)
  80e564:	df000015 	stw	fp,0(sp)
  80e568:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e56c:	d0a00917 	ldw	r2,-32732(gp)
  80e570:	10000326 	beq	r2,zero,80e580 <alt_get_errno+0x24>
  80e574:	d0a00917 	ldw	r2,-32732(gp)
  80e578:	103ee83a 	callr	r2
  80e57c:	00000106 	br	80e584 <alt_get_errno+0x28>
  80e580:	d0a70704 	addi	r2,gp,-25572
}
  80e584:	e037883a 	mov	sp,fp
  80e588:	dfc00117 	ldw	ra,4(sp)
  80e58c:	df000017 	ldw	fp,0(sp)
  80e590:	dec00204 	addi	sp,sp,8
  80e594:	f800283a 	ret

0080e598 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80e598:	defffb04 	addi	sp,sp,-20
  80e59c:	dfc00415 	stw	ra,16(sp)
  80e5a0:	df000315 	stw	fp,12(sp)
  80e5a4:	df000304 	addi	fp,sp,12
  80e5a8:	e13ffe15 	stw	r4,-8(fp)
  80e5ac:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e5b0:	e0bffe17 	ldw	r2,-8(fp)
  80e5b4:	10000916 	blt	r2,zero,80e5dc <fstat+0x44>
  80e5b8:	e0fffe17 	ldw	r3,-8(fp)
  80e5bc:	1805883a 	mov	r2,r3
  80e5c0:	1085883a 	add	r2,r2,r2
  80e5c4:	10c5883a 	add	r2,r2,r3
  80e5c8:	100490ba 	slli	r2,r2,2
  80e5cc:	00c02074 	movhi	r3,129
  80e5d0:	18c77c04 	addi	r3,r3,7664
  80e5d4:	10c5883a 	add	r2,r2,r3
  80e5d8:	00000106 	br	80e5e0 <fstat+0x48>
  80e5dc:	0005883a 	mov	r2,zero
  80e5e0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e5e4:	e0bfff17 	ldw	r2,-4(fp)
  80e5e8:	10001026 	beq	r2,zero,80e62c <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80e5ec:	e0bfff17 	ldw	r2,-4(fp)
  80e5f0:	10800017 	ldw	r2,0(r2)
  80e5f4:	10800817 	ldw	r2,32(r2)
  80e5f8:	10000726 	beq	r2,zero,80e618 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
  80e5fc:	e0bfff17 	ldw	r2,-4(fp)
  80e600:	10800017 	ldw	r2,0(r2)
  80e604:	10800817 	ldw	r2,32(r2)
  80e608:	e17ffd17 	ldw	r5,-12(fp)
  80e60c:	e13fff17 	ldw	r4,-4(fp)
  80e610:	103ee83a 	callr	r2
  80e614:	00000a06 	br	80e640 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80e618:	e0bffd17 	ldw	r2,-12(fp)
  80e61c:	00c80004 	movi	r3,8192
  80e620:	10c00115 	stw	r3,4(r2)
      return 0;
  80e624:	0005883a 	mov	r2,zero
  80e628:	00000506 	br	80e640 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e62c:	080e55c0 	call	80e55c <alt_get_errno>
  80e630:	1007883a 	mov	r3,r2
  80e634:	00801444 	movi	r2,81
  80e638:	18800015 	stw	r2,0(r3)
    return -1;
  80e63c:	00bfffc4 	movi	r2,-1
  }
}
  80e640:	e037883a 	mov	sp,fp
  80e644:	dfc00117 	ldw	ra,4(sp)
  80e648:	df000017 	ldw	fp,0(sp)
  80e64c:	dec00204 	addi	sp,sp,8
  80e650:	f800283a 	ret

0080e654 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  80e654:	deffff04 	addi	sp,sp,-4
  80e658:	df000015 	stw	fp,0(sp)
  80e65c:	d839883a 	mov	fp,sp
  return 0;
  80e660:	0005883a 	mov	r2,zero
}
  80e664:	e037883a 	mov	sp,fp
  80e668:	df000017 	ldw	fp,0(sp)
  80e66c:	dec00104 	addi	sp,sp,4
  80e670:	f800283a 	ret

0080e674 <alt_get_errno>:
{
  80e674:	defffe04 	addi	sp,sp,-8
  80e678:	dfc00115 	stw	ra,4(sp)
  80e67c:	df000015 	stw	fp,0(sp)
  80e680:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e684:	d0a00917 	ldw	r2,-32732(gp)
  80e688:	10000326 	beq	r2,zero,80e698 <alt_get_errno+0x24>
  80e68c:	d0a00917 	ldw	r2,-32732(gp)
  80e690:	103ee83a 	callr	r2
  80e694:	00000106 	br	80e69c <alt_get_errno+0x28>
  80e698:	d0a70704 	addi	r2,gp,-25572
}
  80e69c:	e037883a 	mov	sp,fp
  80e6a0:	dfc00117 	ldw	ra,4(sp)
  80e6a4:	df000017 	ldw	fp,0(sp)
  80e6a8:	dec00204 	addi	sp,sp,8
  80e6ac:	f800283a 	ret

0080e6b0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80e6b0:	deffea04 	addi	sp,sp,-88
  80e6b4:	dfc01515 	stw	ra,84(sp)
  80e6b8:	df001415 	stw	fp,80(sp)
  80e6bc:	df001404 	addi	fp,sp,80
  80e6c0:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e6c4:	e0bfec17 	ldw	r2,-80(fp)
  80e6c8:	10000916 	blt	r2,zero,80e6f0 <isatty+0x40>
  80e6cc:	e0ffec17 	ldw	r3,-80(fp)
  80e6d0:	1805883a 	mov	r2,r3
  80e6d4:	1085883a 	add	r2,r2,r2
  80e6d8:	10c5883a 	add	r2,r2,r3
  80e6dc:	100490ba 	slli	r2,r2,2
  80e6e0:	00c02074 	movhi	r3,129
  80e6e4:	18c77c04 	addi	r3,r3,7664
  80e6e8:	10c5883a 	add	r2,r2,r3
  80e6ec:	00000106 	br	80e6f4 <isatty+0x44>
  80e6f0:	0005883a 	mov	r2,zero
  80e6f4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e6f8:	e0bfff17 	ldw	r2,-4(fp)
  80e6fc:	10000e26 	beq	r2,zero,80e738 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80e700:	e0bfff17 	ldw	r2,-4(fp)
  80e704:	10800017 	ldw	r2,0(r2)
  80e708:	10800817 	ldw	r2,32(r2)
  80e70c:	1000021e 	bne	r2,zero,80e718 <isatty+0x68>
    {
      return 1;
  80e710:	00800044 	movi	r2,1
  80e714:	00000d06 	br	80e74c <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80e718:	e0bfed04 	addi	r2,fp,-76
  80e71c:	100b883a 	mov	r5,r2
  80e720:	e13fec17 	ldw	r4,-80(fp)
  80e724:	080e5980 	call	80e598 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80e728:	e0bfee17 	ldw	r2,-72(fp)
  80e72c:	10880020 	cmpeqi	r2,r2,8192
  80e730:	10803fcc 	andi	r2,r2,255
  80e734:	00000506 	br	80e74c <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e738:	080e6740 	call	80e674 <alt_get_errno>
  80e73c:	1007883a 	mov	r3,r2
  80e740:	00801444 	movi	r2,81
  80e744:	18800015 	stw	r2,0(r3)
    return 0;
  80e748:	0005883a 	mov	r2,zero
  }
}
  80e74c:	e037883a 	mov	sp,fp
  80e750:	dfc00117 	ldw	ra,4(sp)
  80e754:	df000017 	ldw	fp,0(sp)
  80e758:	dec00204 	addi	sp,sp,8
  80e75c:	f800283a 	ret

0080e760 <alt_get_errno>:
{
  80e760:	defffe04 	addi	sp,sp,-8
  80e764:	dfc00115 	stw	ra,4(sp)
  80e768:	df000015 	stw	fp,0(sp)
  80e76c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e770:	d0a00917 	ldw	r2,-32732(gp)
  80e774:	10000326 	beq	r2,zero,80e784 <alt_get_errno+0x24>
  80e778:	d0a00917 	ldw	r2,-32732(gp)
  80e77c:	103ee83a 	callr	r2
  80e780:	00000106 	br	80e788 <alt_get_errno+0x28>
  80e784:	d0a70704 	addi	r2,gp,-25572
}
  80e788:	e037883a 	mov	sp,fp
  80e78c:	dfc00117 	ldw	ra,4(sp)
  80e790:	df000017 	ldw	fp,0(sp)
  80e794:	dec00204 	addi	sp,sp,8
  80e798:	f800283a 	ret

0080e79c <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  80e79c:	defffb04 	addi	sp,sp,-20
  80e7a0:	dfc00415 	stw	ra,16(sp)
  80e7a4:	df000315 	stw	fp,12(sp)
  80e7a8:	df000304 	addi	fp,sp,12
  80e7ac:	e13ffe15 	stw	r4,-8(fp)
  80e7b0:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  80e7b4:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  80e7b8:	e0bffe17 	ldw	r2,-8(fp)
  80e7bc:	00802e16 	blt	zero,r2,80e878 <kill+0xdc>
  80e7c0:	e0bffd17 	ldw	r2,-12(fp)
  80e7c4:	10800828 	cmpgeui	r2,r2,32
  80e7c8:	1000281e 	bne	r2,zero,80e86c <kill+0xd0>
  80e7cc:	e0bffd17 	ldw	r2,-12(fp)
  80e7d0:	100690ba 	slli	r3,r2,2
  80e7d4:	00802074 	movhi	r2,129
  80e7d8:	1885883a 	add	r2,r3,r2
  80e7dc:	10b9f917 	ldw	r2,-6172(r2)
  80e7e0:	1000683a 	jmp	r2
  80e7e4:	0080e88c 	andi	r2,zero,930
  80e7e8:	0080e86c 	andhi	r2,zero,929
  80e7ec:	0080e86c 	andhi	r2,zero,929
  80e7f0:	0080e864 	muli	r2,zero,929
  80e7f4:	0080e864 	muli	r2,zero,929
  80e7f8:	0080e864 	muli	r2,zero,929
  80e7fc:	0080e864 	muli	r2,zero,929
  80e800:	0080e86c 	andhi	r2,zero,929
  80e804:	0080e864 	muli	r2,zero,929
  80e808:	0080e864 	muli	r2,zero,929
  80e80c:	0080e864 	muli	r2,zero,929
  80e810:	0080e864 	muli	r2,zero,929
  80e814:	0080e864 	muli	r2,zero,929
  80e818:	0080e864 	muli	r2,zero,929
  80e81c:	0080e864 	muli	r2,zero,929
  80e820:	0080e864 	muli	r2,zero,929
  80e824:	0080e88c 	andi	r2,zero,930
  80e828:	0080e86c 	andhi	r2,zero,929
  80e82c:	0080e86c 	andhi	r2,zero,929
  80e830:	0080e86c 	andhi	r2,zero,929
  80e834:	0080e88c 	andi	r2,zero,930
  80e838:	0080e86c 	andhi	r2,zero,929
  80e83c:	0080e86c 	andhi	r2,zero,929
  80e840:	0080e864 	muli	r2,zero,929
  80e844:	0080e864 	muli	r2,zero,929
  80e848:	0080e864 	muli	r2,zero,929
  80e84c:	0080e864 	muli	r2,zero,929
  80e850:	0080e864 	muli	r2,zero,929
  80e854:	0080e86c 	andhi	r2,zero,929
  80e858:	0080e86c 	andhi	r2,zero,929
  80e85c:	0080e864 	muli	r2,zero,929
  80e860:	0080e864 	muli	r2,zero,929
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  80e864:	0009883a 	mov	r4,zero
  80e868:	080e5240 	call	80e524 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  80e86c:	00800584 	movi	r2,22
  80e870:	e0bfff15 	stw	r2,-4(fp)
  80e874:	00000606 	br	80e890 <kill+0xf4>
    }
  }

  else if (pid > 0)
  80e878:	e0bffe17 	ldw	r2,-8(fp)
  80e87c:	0080040e 	bge	zero,r2,80e890 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  80e880:	008000c4 	movi	r2,3
  80e884:	e0bfff15 	stw	r2,-4(fp)
  80e888:	00000106 	br	80e890 <kill+0xf4>
      break;
  80e88c:	0001883a 	nop
  }

  if (status)
  80e890:	e0bfff17 	ldw	r2,-4(fp)
  80e894:	10000626 	beq	r2,zero,80e8b0 <kill+0x114>
  {
    ALT_ERRNO = status;
  80e898:	080e7600 	call	80e760 <alt_get_errno>
  80e89c:	1007883a 	mov	r3,r2
  80e8a0:	e0bfff17 	ldw	r2,-4(fp)
  80e8a4:	18800015 	stw	r2,0(r3)
    return -1;
  80e8a8:	00bfffc4 	movi	r2,-1
  80e8ac:	00000106 	br	80e8b4 <kill+0x118>
  }

  return 0;
  80e8b0:	0005883a 	mov	r2,zero
}
  80e8b4:	e037883a 	mov	sp,fp
  80e8b8:	dfc00117 	ldw	ra,4(sp)
  80e8bc:	df000017 	ldw	fp,0(sp)
  80e8c0:	dec00204 	addi	sp,sp,8
  80e8c4:	f800283a 	ret

0080e8c8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80e8c8:	defffc04 	addi	sp,sp,-16
  80e8cc:	df000315 	stw	fp,12(sp)
  80e8d0:	df000304 	addi	fp,sp,12
  80e8d4:	e13fff15 	stw	r4,-4(fp)
  80e8d8:	e17ffe15 	stw	r5,-8(fp)
  80e8dc:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  80e8e0:	e0fffe17 	ldw	r3,-8(fp)
  80e8e4:	e0bfff17 	ldw	r2,-4(fp)
  80e8e8:	18800c26 	beq	r3,r2,80e91c <alt_load_section+0x54>
  {
    while( to != end )
  80e8ec:	00000806 	br	80e910 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80e8f0:	e0ffff17 	ldw	r3,-4(fp)
  80e8f4:	18800104 	addi	r2,r3,4
  80e8f8:	e0bfff15 	stw	r2,-4(fp)
  80e8fc:	e0bffe17 	ldw	r2,-8(fp)
  80e900:	11000104 	addi	r4,r2,4
  80e904:	e13ffe15 	stw	r4,-8(fp)
  80e908:	18c00017 	ldw	r3,0(r3)
  80e90c:	10c00015 	stw	r3,0(r2)
    while( to != end )
  80e910:	e0fffe17 	ldw	r3,-8(fp)
  80e914:	e0bffd17 	ldw	r2,-12(fp)
  80e918:	18bff51e 	bne	r3,r2,80e8f0 <alt_load_section+0x28>
    }
  }
}
  80e91c:	0001883a 	nop
  80e920:	e037883a 	mov	sp,fp
  80e924:	df000017 	ldw	fp,0(sp)
  80e928:	dec00104 	addi	sp,sp,4
  80e92c:	f800283a 	ret

0080e930 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80e930:	defffe04 	addi	sp,sp,-8
  80e934:	dfc00115 	stw	ra,4(sp)
  80e938:	df000015 	stw	fp,0(sp)
  80e93c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80e940:	01802074 	movhi	r6,129
  80e944:	318c0204 	addi	r6,r6,12296
  80e948:	01402074 	movhi	r5,129
  80e94c:	29450c04 	addi	r5,r5,5168
  80e950:	01002074 	movhi	r4,129
  80e954:	210c0204 	addi	r4,r4,12296
  80e958:	080e8c80 	call	80e8c8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80e95c:	01802034 	movhi	r6,128
  80e960:	31808e04 	addi	r6,r6,568
  80e964:	01402034 	movhi	r5,128
  80e968:	29400804 	addi	r5,r5,32
  80e96c:	01002034 	movhi	r4,128
  80e970:	21000804 	addi	r4,r4,32
  80e974:	080e8c80 	call	80e8c8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80e978:	01802074 	movhi	r6,129
  80e97c:	31850c04 	addi	r6,r6,5168
  80e980:	01402074 	movhi	r5,129
  80e984:	29436d04 	addi	r5,r5,3508
  80e988:	01002074 	movhi	r4,129
  80e98c:	21036d04 	addi	r4,r4,3508
  80e990:	080e8c80 	call	80e8c8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80e994:	080fd700 	call	80fd70 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80e998:	080ff680 	call	80ff68 <alt_icache_flush_all>
}
  80e99c:	0001883a 	nop
  80e9a0:	e037883a 	mov	sp,fp
  80e9a4:	dfc00117 	ldw	ra,4(sp)
  80e9a8:	df000017 	ldw	fp,0(sp)
  80e9ac:	dec00204 	addi	sp,sp,8
  80e9b0:	f800283a 	ret

0080e9b4 <alt_get_errno>:
{
  80e9b4:	defffe04 	addi	sp,sp,-8
  80e9b8:	dfc00115 	stw	ra,4(sp)
  80e9bc:	df000015 	stw	fp,0(sp)
  80e9c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e9c4:	d0a00917 	ldw	r2,-32732(gp)
  80e9c8:	10000326 	beq	r2,zero,80e9d8 <alt_get_errno+0x24>
  80e9cc:	d0a00917 	ldw	r2,-32732(gp)
  80e9d0:	103ee83a 	callr	r2
  80e9d4:	00000106 	br	80e9dc <alt_get_errno+0x28>
  80e9d8:	d0a70704 	addi	r2,gp,-25572
}
  80e9dc:	e037883a 	mov	sp,fp
  80e9e0:	dfc00117 	ldw	ra,4(sp)
  80e9e4:	df000017 	ldw	fp,0(sp)
  80e9e8:	dec00204 	addi	sp,sp,8
  80e9ec:	f800283a 	ret

0080e9f0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80e9f0:	defff904 	addi	sp,sp,-28
  80e9f4:	dfc00615 	stw	ra,24(sp)
  80e9f8:	df000515 	stw	fp,20(sp)
  80e9fc:	df000504 	addi	fp,sp,20
  80ea00:	e13ffd15 	stw	r4,-12(fp)
  80ea04:	e17ffc15 	stw	r5,-16(fp)
  80ea08:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80ea0c:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ea10:	e0bffd17 	ldw	r2,-12(fp)
  80ea14:	10000916 	blt	r2,zero,80ea3c <lseek+0x4c>
  80ea18:	e0fffd17 	ldw	r3,-12(fp)
  80ea1c:	1805883a 	mov	r2,r3
  80ea20:	1085883a 	add	r2,r2,r2
  80ea24:	10c5883a 	add	r2,r2,r3
  80ea28:	100490ba 	slli	r2,r2,2
  80ea2c:	00c02074 	movhi	r3,129
  80ea30:	18c77c04 	addi	r3,r3,7664
  80ea34:	10c5883a 	add	r2,r2,r3
  80ea38:	00000106 	br	80ea40 <lseek+0x50>
  80ea3c:	0005883a 	mov	r2,zero
  80ea40:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  80ea44:	e0bffe17 	ldw	r2,-8(fp)
  80ea48:	10001026 	beq	r2,zero,80ea8c <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80ea4c:	e0bffe17 	ldw	r2,-8(fp)
  80ea50:	10800017 	ldw	r2,0(r2)
  80ea54:	10800717 	ldw	r2,28(r2)
  80ea58:	10000926 	beq	r2,zero,80ea80 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80ea5c:	e0bffe17 	ldw	r2,-8(fp)
  80ea60:	10800017 	ldw	r2,0(r2)
  80ea64:	10800717 	ldw	r2,28(r2)
  80ea68:	e1bffb17 	ldw	r6,-20(fp)
  80ea6c:	e17ffc17 	ldw	r5,-16(fp)
  80ea70:	e13ffe17 	ldw	r4,-8(fp)
  80ea74:	103ee83a 	callr	r2
  80ea78:	e0bfff15 	stw	r2,-4(fp)
  80ea7c:	00000506 	br	80ea94 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80ea80:	00bfde84 	movi	r2,-134
  80ea84:	e0bfff15 	stw	r2,-4(fp)
  80ea88:	00000206 	br	80ea94 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80ea8c:	00bfebc4 	movi	r2,-81
  80ea90:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  80ea94:	e0bfff17 	ldw	r2,-4(fp)
  80ea98:	1000070e 	bge	r2,zero,80eab8 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
  80ea9c:	080e9b40 	call	80e9b4 <alt_get_errno>
  80eaa0:	1007883a 	mov	r3,r2
  80eaa4:	e0bfff17 	ldw	r2,-4(fp)
  80eaa8:	0085c83a 	sub	r2,zero,r2
  80eaac:	18800015 	stw	r2,0(r3)
    rc = -1;
  80eab0:	00bfffc4 	movi	r2,-1
  80eab4:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  80eab8:	e0bfff17 	ldw	r2,-4(fp)
}
  80eabc:	e037883a 	mov	sp,fp
  80eac0:	dfc00117 	ldw	ra,4(sp)
  80eac4:	df000017 	ldw	fp,0(sp)
  80eac8:	dec00204 	addi	sp,sp,8
  80eacc:	f800283a 	ret

0080ead0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80ead0:	defffd04 	addi	sp,sp,-12
  80ead4:	dfc00215 	stw	ra,8(sp)
  80ead8:	df000115 	stw	fp,4(sp)
  80eadc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80eae0:	0009883a 	mov	r4,zero
  80eae4:	080f0280 	call	80f028 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80eae8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80eaec:	080f0640 	call	80f064 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80eaf0:	01802074 	movhi	r6,129
  80eaf4:	31850404 	addi	r6,r6,5136
  80eaf8:	01402074 	movhi	r5,129
  80eafc:	29450404 	addi	r5,r5,5136
  80eb00:	01002074 	movhi	r4,129
  80eb04:	21050404 	addi	r4,r4,5136
  80eb08:	08103080 	call	810308 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80eb0c:	080fea00 	call	80fea0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80eb10:	01002074 	movhi	r4,129
  80eb14:	213fc104 	addi	r4,r4,-252
  80eb18:	0810b440 	call	810b44 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80eb1c:	d0a70917 	ldw	r2,-25564(gp)
  80eb20:	d0e70a17 	ldw	r3,-25560(gp)
  80eb24:	d1270b17 	ldw	r4,-25556(gp)
  80eb28:	200d883a 	mov	r6,r4
  80eb2c:	180b883a 	mov	r5,r3
  80eb30:	1009883a 	mov	r4,r2
  80eb34:	08004080 	call	800408 <main>
  80eb38:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80eb3c:	01000044 	movi	r4,1
  80eb40:	080e41c0 	call	80e41c <close>
  exit (result);
  80eb44:	e13fff17 	ldw	r4,-4(fp)
  80eb48:	0810b580 	call	810b58 <exit>

0080eb4c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80eb4c:	defffe04 	addi	sp,sp,-8
  80eb50:	df000115 	stw	fp,4(sp)
  80eb54:	df000104 	addi	fp,sp,4
  80eb58:	e13fff15 	stw	r4,-4(fp)
}
  80eb5c:	0001883a 	nop
  80eb60:	e037883a 	mov	sp,fp
  80eb64:	df000017 	ldw	fp,0(sp)
  80eb68:	dec00104 	addi	sp,sp,4
  80eb6c:	f800283a 	ret

0080eb70 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80eb70:	defffe04 	addi	sp,sp,-8
  80eb74:	df000115 	stw	fp,4(sp)
  80eb78:	df000104 	addi	fp,sp,4
  80eb7c:	e13fff15 	stw	r4,-4(fp)
}
  80eb80:	0001883a 	nop
  80eb84:	e037883a 	mov	sp,fp
  80eb88:	df000017 	ldw	fp,0(sp)
  80eb8c:	dec00104 	addi	sp,sp,4
  80eb90:	f800283a 	ret

0080eb94 <alt_get_errno>:
{
  80eb94:	defffe04 	addi	sp,sp,-8
  80eb98:	dfc00115 	stw	ra,4(sp)
  80eb9c:	df000015 	stw	fp,0(sp)
  80eba0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80eba4:	d0a00917 	ldw	r2,-32732(gp)
  80eba8:	10000326 	beq	r2,zero,80ebb8 <alt_get_errno+0x24>
  80ebac:	d0a00917 	ldw	r2,-32732(gp)
  80ebb0:	103ee83a 	callr	r2
  80ebb4:	00000106 	br	80ebbc <alt_get_errno+0x28>
  80ebb8:	d0a70704 	addi	r2,gp,-25572
}
  80ebbc:	e037883a 	mov	sp,fp
  80ebc0:	dfc00117 	ldw	ra,4(sp)
  80ebc4:	df000017 	ldw	fp,0(sp)
  80ebc8:	dec00204 	addi	sp,sp,8
  80ebcc:	f800283a 	ret

0080ebd0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80ebd0:	defff904 	addi	sp,sp,-28
  80ebd4:	dfc00615 	stw	ra,24(sp)
  80ebd8:	df000515 	stw	fp,20(sp)
  80ebdc:	df000504 	addi	fp,sp,20
  80ebe0:	e13ffd15 	stw	r4,-12(fp)
  80ebe4:	e17ffc15 	stw	r5,-16(fp)
  80ebe8:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ebec:	e0bffd17 	ldw	r2,-12(fp)
  80ebf0:	10000916 	blt	r2,zero,80ec18 <read+0x48>
  80ebf4:	e0fffd17 	ldw	r3,-12(fp)
  80ebf8:	1805883a 	mov	r2,r3
  80ebfc:	1085883a 	add	r2,r2,r2
  80ec00:	10c5883a 	add	r2,r2,r3
  80ec04:	100490ba 	slli	r2,r2,2
  80ec08:	00c02074 	movhi	r3,129
  80ec0c:	18c77c04 	addi	r3,r3,7664
  80ec10:	10c5883a 	add	r2,r2,r3
  80ec14:	00000106 	br	80ec1c <read+0x4c>
  80ec18:	0005883a 	mov	r2,zero
  80ec1c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80ec20:	e0bfff17 	ldw	r2,-4(fp)
  80ec24:	10002226 	beq	r2,zero,80ecb0 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80ec28:	e0bfff17 	ldw	r2,-4(fp)
  80ec2c:	10800217 	ldw	r2,8(r2)
  80ec30:	108000cc 	andi	r2,r2,3
  80ec34:	10800060 	cmpeqi	r2,r2,1
  80ec38:	1000181e 	bne	r2,zero,80ec9c <read+0xcc>
        (fd->dev->read))
  80ec3c:	e0bfff17 	ldw	r2,-4(fp)
  80ec40:	10800017 	ldw	r2,0(r2)
  80ec44:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80ec48:	10001426 	beq	r2,zero,80ec9c <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80ec4c:	e0bfff17 	ldw	r2,-4(fp)
  80ec50:	10800017 	ldw	r2,0(r2)
  80ec54:	10800517 	ldw	r2,20(r2)
  80ec58:	e0fffb17 	ldw	r3,-20(fp)
  80ec5c:	180d883a 	mov	r6,r3
  80ec60:	e17ffc17 	ldw	r5,-16(fp)
  80ec64:	e13fff17 	ldw	r4,-4(fp)
  80ec68:	103ee83a 	callr	r2
  80ec6c:	e0bffe15 	stw	r2,-8(fp)
  80ec70:	e0bffe17 	ldw	r2,-8(fp)
  80ec74:	1000070e 	bge	r2,zero,80ec94 <read+0xc4>
        {
          ALT_ERRNO = -rval;
  80ec78:	080eb940 	call	80eb94 <alt_get_errno>
  80ec7c:	1007883a 	mov	r3,r2
  80ec80:	e0bffe17 	ldw	r2,-8(fp)
  80ec84:	0085c83a 	sub	r2,zero,r2
  80ec88:	18800015 	stw	r2,0(r3)
          return -1;
  80ec8c:	00bfffc4 	movi	r2,-1
  80ec90:	00000c06 	br	80ecc4 <read+0xf4>
        }
        return rval;
  80ec94:	e0bffe17 	ldw	r2,-8(fp)
  80ec98:	00000a06 	br	80ecc4 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80ec9c:	080eb940 	call	80eb94 <alt_get_errno>
  80eca0:	1007883a 	mov	r3,r2
  80eca4:	00800344 	movi	r2,13
  80eca8:	18800015 	stw	r2,0(r3)
  80ecac:	00000406 	br	80ecc0 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80ecb0:	080eb940 	call	80eb94 <alt_get_errno>
  80ecb4:	1007883a 	mov	r3,r2
  80ecb8:	00801444 	movi	r2,81
  80ecbc:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80ecc0:	00bfffc4 	movi	r2,-1
}
  80ecc4:	e037883a 	mov	sp,fp
  80ecc8:	dfc00117 	ldw	ra,4(sp)
  80eccc:	df000017 	ldw	fp,0(sp)
  80ecd0:	dec00204 	addi	sp,sp,8
  80ecd4:	f800283a 	ret

0080ecd8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80ecd8:	defffe04 	addi	sp,sp,-8
  80ecdc:	df000115 	stw	fp,4(sp)
  80ece0:	df000104 	addi	fp,sp,4
  80ece4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80ece8:	e0bfff17 	ldw	r2,-4(fp)
  80ecec:	108000d0 	cmplti	r2,r2,3
  80ecf0:	1000101e 	bne	r2,zero,80ed34 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
  80ecf4:	e0ffff17 	ldw	r3,-4(fp)
  80ecf8:	1805883a 	mov	r2,r3
  80ecfc:	1085883a 	add	r2,r2,r2
  80ed00:	10c5883a 	add	r2,r2,r3
  80ed04:	100490ba 	slli	r2,r2,2
  80ed08:	00c02074 	movhi	r3,129
  80ed0c:	10c7883a 	add	r3,r2,r3
  80ed10:	18077e15 	stw	zero,7672(r3)
    alt_fd_list[fd].dev      = 0;
  80ed14:	e0ffff17 	ldw	r3,-4(fp)
  80ed18:	1805883a 	mov	r2,r3
  80ed1c:	1085883a 	add	r2,r2,r2
  80ed20:	10c5883a 	add	r2,r2,r3
  80ed24:	100490ba 	slli	r2,r2,2
  80ed28:	00c02074 	movhi	r3,129
  80ed2c:	10c7883a 	add	r3,r2,r3
  80ed30:	18077c15 	stw	zero,7664(r3)
  }
}
  80ed34:	0001883a 	nop
  80ed38:	e037883a 	mov	sp,fp
  80ed3c:	df000017 	ldw	fp,0(sp)
  80ed40:	dec00104 	addi	sp,sp,4
  80ed44:	f800283a 	ret

0080ed48 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80ed48:	defff904 	addi	sp,sp,-28
  80ed4c:	df000615 	stw	fp,24(sp)
  80ed50:	df000604 	addi	fp,sp,24
  80ed54:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  80ed58:	0005303a 	rdctl	r2,status
  80ed5c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ed60:	e0fffd17 	ldw	r3,-12(fp)
  80ed64:	00bfff84 	movi	r2,-2
  80ed68:	1884703a 	and	r2,r3,r2
  80ed6c:	1001703a 	wrctl	status,r2
  return context;
  80ed70:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80ed74:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80ed78:	d0a00a17 	ldw	r2,-32728(gp)
  80ed7c:	10c000c4 	addi	r3,r2,3
  80ed80:	00bfff04 	movi	r2,-4
  80ed84:	1884703a 	and	r2,r3,r2
  80ed88:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80ed8c:	d0e00a17 	ldw	r3,-32728(gp)
  80ed90:	e0bffa17 	ldw	r2,-24(fp)
  80ed94:	1887883a 	add	r3,r3,r2
  80ed98:	00804034 	movhi	r2,256
  80ed9c:	10800004 	addi	r2,r2,0
  80eda0:	10c0072e 	bgeu	r2,r3,80edc0 <sbrk+0x78>
  80eda4:	e0bfff17 	ldw	r2,-4(fp)
  80eda8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80edac:	e0bffc17 	ldw	r2,-16(fp)
  80edb0:	1001703a 	wrctl	status,r2
}
  80edb4:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80edb8:	00bfffc4 	movi	r2,-1
  80edbc:	00000c06 	br	80edf0 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80edc0:	d0a00a17 	ldw	r2,-32728(gp)
  80edc4:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  80edc8:	d0e00a17 	ldw	r3,-32728(gp)
  80edcc:	e0bffa17 	ldw	r2,-24(fp)
  80edd0:	1885883a 	add	r2,r3,r2
  80edd4:	d0a00a15 	stw	r2,-32728(gp)
  80edd8:	e0bfff17 	ldw	r2,-4(fp)
  80eddc:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80ede0:	e0bffb17 	ldw	r2,-20(fp)
  80ede4:	1001703a 	wrctl	status,r2
}
  80ede8:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80edec:	e0bffe17 	ldw	r2,-8(fp)
} 
  80edf0:	e037883a 	mov	sp,fp
  80edf4:	df000017 	ldw	fp,0(sp)
  80edf8:	dec00104 	addi	sp,sp,4
  80edfc:	f800283a 	ret

0080ee00 <alt_get_errno>:
{
  80ee00:	defffe04 	addi	sp,sp,-8
  80ee04:	dfc00115 	stw	ra,4(sp)
  80ee08:	df000015 	stw	fp,0(sp)
  80ee0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ee10:	d0a00917 	ldw	r2,-32732(gp)
  80ee14:	10000326 	beq	r2,zero,80ee24 <alt_get_errno+0x24>
  80ee18:	d0a00917 	ldw	r2,-32732(gp)
  80ee1c:	103ee83a 	callr	r2
  80ee20:	00000106 	br	80ee28 <alt_get_errno+0x28>
  80ee24:	d0a70704 	addi	r2,gp,-25572
}
  80ee28:	e037883a 	mov	sp,fp
  80ee2c:	dfc00117 	ldw	ra,4(sp)
  80ee30:	df000017 	ldw	fp,0(sp)
  80ee34:	dec00204 	addi	sp,sp,8
  80ee38:	f800283a 	ret

0080ee3c <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80ee3c:	defffc04 	addi	sp,sp,-16
  80ee40:	dfc00315 	stw	ra,12(sp)
  80ee44:	df000215 	stw	fp,8(sp)
  80ee48:	df000204 	addi	fp,sp,8
  80ee4c:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80ee50:	d0a70e17 	ldw	r2,-25544(gp)
  clock_t ticks = alt_nticks(); 
  80ee54:	e0bfff15 	stw	r2,-4(fp)
  return _alt_tick_rate;
  80ee58:	d0a70d17 	ldw	r2,-25548(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80ee5c:	1000061e 	bne	r2,zero,80ee78 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80ee60:	080ee000 	call	80ee00 <alt_get_errno>
  80ee64:	1007883a 	mov	r3,r2
  80ee68:	00801604 	movi	r2,88
  80ee6c:	18800015 	stw	r2,0(r3)
    return 0;
  80ee70:	0005883a 	mov	r2,zero
  80ee74:	00000a06 	br	80eea0 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80ee78:	e0bffe17 	ldw	r2,-8(fp)
  80ee7c:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80ee80:	e0bffe17 	ldw	r2,-8(fp)
  80ee84:	e0ffff17 	ldw	r3,-4(fp)
  80ee88:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  80ee8c:	e0bffe17 	ldw	r2,-8(fp)
  80ee90:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80ee94:	e0bffe17 	ldw	r2,-8(fp)
  80ee98:	10000315 	stw	zero,12(r2)

  return ticks;
  80ee9c:	e0bfff17 	ldw	r2,-4(fp)
}
  80eea0:	e037883a 	mov	sp,fp
  80eea4:	dfc00117 	ldw	ra,4(sp)
  80eea8:	df000017 	ldw	fp,0(sp)
  80eeac:	dec00204 	addi	sp,sp,8
  80eeb0:	f800283a 	ret

0080eeb4 <alt_get_errno>:
{
  80eeb4:	defffe04 	addi	sp,sp,-8
  80eeb8:	dfc00115 	stw	ra,4(sp)
  80eebc:	df000015 	stw	fp,0(sp)
  80eec0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80eec4:	d0a00917 	ldw	r2,-32732(gp)
  80eec8:	10000326 	beq	r2,zero,80eed8 <alt_get_errno+0x24>
  80eecc:	d0a00917 	ldw	r2,-32732(gp)
  80eed0:	103ee83a 	callr	r2
  80eed4:	00000106 	br	80eedc <alt_get_errno+0x28>
  80eed8:	d0a70704 	addi	r2,gp,-25572
}
  80eedc:	e037883a 	mov	sp,fp
  80eee0:	dfc00117 	ldw	ra,4(sp)
  80eee4:	df000017 	ldw	fp,0(sp)
  80eee8:	dec00204 	addi	sp,sp,8
  80eeec:	f800283a 	ret

0080eef0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80eef0:	defff904 	addi	sp,sp,-28
  80eef4:	dfc00615 	stw	ra,24(sp)
  80eef8:	df000515 	stw	fp,20(sp)
  80eefc:	df000504 	addi	fp,sp,20
  80ef00:	e13ffd15 	stw	r4,-12(fp)
  80ef04:	e17ffc15 	stw	r5,-16(fp)
  80ef08:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ef0c:	e0bffd17 	ldw	r2,-12(fp)
  80ef10:	10000916 	blt	r2,zero,80ef38 <write+0x48>
  80ef14:	e0fffd17 	ldw	r3,-12(fp)
  80ef18:	1805883a 	mov	r2,r3
  80ef1c:	1085883a 	add	r2,r2,r2
  80ef20:	10c5883a 	add	r2,r2,r3
  80ef24:	100490ba 	slli	r2,r2,2
  80ef28:	00c02074 	movhi	r3,129
  80ef2c:	18c77c04 	addi	r3,r3,7664
  80ef30:	10c5883a 	add	r2,r2,r3
  80ef34:	00000106 	br	80ef3c <write+0x4c>
  80ef38:	0005883a 	mov	r2,zero
  80ef3c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80ef40:	e0bfff17 	ldw	r2,-4(fp)
  80ef44:	10002126 	beq	r2,zero,80efcc <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80ef48:	e0bfff17 	ldw	r2,-4(fp)
  80ef4c:	10800217 	ldw	r2,8(r2)
  80ef50:	108000cc 	andi	r2,r2,3
  80ef54:	10001826 	beq	r2,zero,80efb8 <write+0xc8>
  80ef58:	e0bfff17 	ldw	r2,-4(fp)
  80ef5c:	10800017 	ldw	r2,0(r2)
  80ef60:	10800617 	ldw	r2,24(r2)
  80ef64:	10001426 	beq	r2,zero,80efb8 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80ef68:	e0bfff17 	ldw	r2,-4(fp)
  80ef6c:	10800017 	ldw	r2,0(r2)
  80ef70:	10800617 	ldw	r2,24(r2)
  80ef74:	e0fffb17 	ldw	r3,-20(fp)
  80ef78:	180d883a 	mov	r6,r3
  80ef7c:	e17ffc17 	ldw	r5,-16(fp)
  80ef80:	e13fff17 	ldw	r4,-4(fp)
  80ef84:	103ee83a 	callr	r2
  80ef88:	e0bffe15 	stw	r2,-8(fp)
  80ef8c:	e0bffe17 	ldw	r2,-8(fp)
  80ef90:	1000070e 	bge	r2,zero,80efb0 <write+0xc0>
      {
        ALT_ERRNO = -rval;
  80ef94:	080eeb40 	call	80eeb4 <alt_get_errno>
  80ef98:	1007883a 	mov	r3,r2
  80ef9c:	e0bffe17 	ldw	r2,-8(fp)
  80efa0:	0085c83a 	sub	r2,zero,r2
  80efa4:	18800015 	stw	r2,0(r3)
        return -1;
  80efa8:	00bfffc4 	movi	r2,-1
  80efac:	00000c06 	br	80efe0 <write+0xf0>
      }
      return rval;
  80efb0:	e0bffe17 	ldw	r2,-8(fp)
  80efb4:	00000a06 	br	80efe0 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80efb8:	080eeb40 	call	80eeb4 <alt_get_errno>
  80efbc:	1007883a 	mov	r3,r2
  80efc0:	00800344 	movi	r2,13
  80efc4:	18800015 	stw	r2,0(r3)
  80efc8:	00000406 	br	80efdc <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80efcc:	080eeb40 	call	80eeb4 <alt_get_errno>
  80efd0:	1007883a 	mov	r3,r2
  80efd4:	00801444 	movi	r2,81
  80efd8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80efdc:	00bfffc4 	movi	r2,-1
}
  80efe0:	e037883a 	mov	sp,fp
  80efe4:	dfc00117 	ldw	ra,4(sp)
  80efe8:	df000017 	ldw	fp,0(sp)
  80efec:	dec00204 	addi	sp,sp,8
  80eff0:	f800283a 	ret

0080eff4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80eff4:	defffd04 	addi	sp,sp,-12
  80eff8:	dfc00215 	stw	ra,8(sp)
  80effc:	df000115 	stw	fp,4(sp)
  80f000:	df000104 	addi	fp,sp,4
  80f004:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80f008:	d1600604 	addi	r5,gp,-32744
  80f00c:	e13fff17 	ldw	r4,-4(fp)
  80f010:	080fdf80 	call	80fdf8 <alt_dev_llist_insert>
}
  80f014:	e037883a 	mov	sp,fp
  80f018:	dfc00117 	ldw	ra,4(sp)
  80f01c:	df000017 	ldw	fp,0(sp)
  80f020:	dec00204 	addi	sp,sp,8
  80f024:	f800283a 	ret

0080f028 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80f028:	defffd04 	addi	sp,sp,-12
  80f02c:	dfc00215 	stw	ra,8(sp)
  80f030:	df000115 	stw	fp,4(sp)
  80f034:	df000104 	addi	fp,sp,4
  80f038:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80f03c:	08107a80 	call	8107a8 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80f040:	00800044 	movi	r2,1
  80f044:	1001703a 	wrctl	status,r2
}
  80f048:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  80f04c:	0001883a 	nop
  80f050:	e037883a 	mov	sp,fp
  80f054:	dfc00117 	ldw	ra,4(sp)
  80f058:	df000017 	ldw	fp,0(sp)
  80f05c:	dec00204 	addi	sp,sp,8
  80f060:	f800283a 	ret

0080f064 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80f064:	defffe04 	addi	sp,sp,-8
  80f068:	dfc00115 	stw	ra,4(sp)
  80f06c:	df000015 	stw	fp,0(sp)
  80f070:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80f074:	01c0fa04 	movi	r7,1000
  80f078:	01800044 	movi	r6,1
  80f07c:	000b883a 	mov	r5,zero
  80f080:	01004034 	movhi	r4,256
  80f084:	21040004 	addi	r4,r4,4096
  80f088:	080fbb80 	call	80fbb8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80f08c:	01800404 	movi	r6,16
  80f090:	000b883a 	mov	r5,zero
  80f094:	01002074 	movhi	r4,129
  80f098:	2107e604 	addi	r4,r4,8088
  80f09c:	080f22c0 	call	80f22c <altera_avalon_jtag_uart_init>
  80f0a0:	01002074 	movhi	r4,129
  80f0a4:	2107dc04 	addi	r4,r4,8048
  80f0a8:	080eff40 	call	80eff4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80f0ac:	0001883a 	nop
}
  80f0b0:	0001883a 	nop
  80f0b4:	e037883a 	mov	sp,fp
  80f0b8:	dfc00117 	ldw	ra,4(sp)
  80f0bc:	df000017 	ldw	fp,0(sp)
  80f0c0:	dec00204 	addi	sp,sp,8
  80f0c4:	f800283a 	ret

0080f0c8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80f0c8:	defffa04 	addi	sp,sp,-24
  80f0cc:	dfc00515 	stw	ra,20(sp)
  80f0d0:	df000415 	stw	fp,16(sp)
  80f0d4:	df000404 	addi	fp,sp,16
  80f0d8:	e13ffe15 	stw	r4,-8(fp)
  80f0dc:	e17ffd15 	stw	r5,-12(fp)
  80f0e0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f0e4:	e0bffe17 	ldw	r2,-8(fp)
  80f0e8:	10800017 	ldw	r2,0(r2)
  80f0ec:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80f0f0:	e0bfff17 	ldw	r2,-4(fp)
  80f0f4:	10c00a04 	addi	r3,r2,40
  80f0f8:	e0bffe17 	ldw	r2,-8(fp)
  80f0fc:	10800217 	ldw	r2,8(r2)
  80f100:	100f883a 	mov	r7,r2
  80f104:	e1bffc17 	ldw	r6,-16(fp)
  80f108:	e17ffd17 	ldw	r5,-12(fp)
  80f10c:	1809883a 	mov	r4,r3
  80f110:	080f6f40 	call	80f6f4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80f114:	e037883a 	mov	sp,fp
  80f118:	dfc00117 	ldw	ra,4(sp)
  80f11c:	df000017 	ldw	fp,0(sp)
  80f120:	dec00204 	addi	sp,sp,8
  80f124:	f800283a 	ret

0080f128 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80f128:	defffa04 	addi	sp,sp,-24
  80f12c:	dfc00515 	stw	ra,20(sp)
  80f130:	df000415 	stw	fp,16(sp)
  80f134:	df000404 	addi	fp,sp,16
  80f138:	e13ffe15 	stw	r4,-8(fp)
  80f13c:	e17ffd15 	stw	r5,-12(fp)
  80f140:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f144:	e0bffe17 	ldw	r2,-8(fp)
  80f148:	10800017 	ldw	r2,0(r2)
  80f14c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80f150:	e0bfff17 	ldw	r2,-4(fp)
  80f154:	10c00a04 	addi	r3,r2,40
  80f158:	e0bffe17 	ldw	r2,-8(fp)
  80f15c:	10800217 	ldw	r2,8(r2)
  80f160:	100f883a 	mov	r7,r2
  80f164:	e1bffc17 	ldw	r6,-16(fp)
  80f168:	e17ffd17 	ldw	r5,-12(fp)
  80f16c:	1809883a 	mov	r4,r3
  80f170:	080f9140 	call	80f914 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80f174:	e037883a 	mov	sp,fp
  80f178:	dfc00117 	ldw	ra,4(sp)
  80f17c:	df000017 	ldw	fp,0(sp)
  80f180:	dec00204 	addi	sp,sp,8
  80f184:	f800283a 	ret

0080f188 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80f188:	defffc04 	addi	sp,sp,-16
  80f18c:	dfc00315 	stw	ra,12(sp)
  80f190:	df000215 	stw	fp,8(sp)
  80f194:	df000204 	addi	fp,sp,8
  80f198:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f19c:	e0bffe17 	ldw	r2,-8(fp)
  80f1a0:	10800017 	ldw	r2,0(r2)
  80f1a4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80f1a8:	e0bfff17 	ldw	r2,-4(fp)
  80f1ac:	10c00a04 	addi	r3,r2,40
  80f1b0:	e0bffe17 	ldw	r2,-8(fp)
  80f1b4:	10800217 	ldw	r2,8(r2)
  80f1b8:	100b883a 	mov	r5,r2
  80f1bc:	1809883a 	mov	r4,r3
  80f1c0:	080f5980 	call	80f598 <altera_avalon_jtag_uart_close>
}
  80f1c4:	e037883a 	mov	sp,fp
  80f1c8:	dfc00117 	ldw	ra,4(sp)
  80f1cc:	df000017 	ldw	fp,0(sp)
  80f1d0:	dec00204 	addi	sp,sp,8
  80f1d4:	f800283a 	ret

0080f1d8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80f1d8:	defffa04 	addi	sp,sp,-24
  80f1dc:	dfc00515 	stw	ra,20(sp)
  80f1e0:	df000415 	stw	fp,16(sp)
  80f1e4:	df000404 	addi	fp,sp,16
  80f1e8:	e13ffe15 	stw	r4,-8(fp)
  80f1ec:	e17ffd15 	stw	r5,-12(fp)
  80f1f0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80f1f4:	e0bffe17 	ldw	r2,-8(fp)
  80f1f8:	10800017 	ldw	r2,0(r2)
  80f1fc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80f200:	e0bfff17 	ldw	r2,-4(fp)
  80f204:	10800a04 	addi	r2,r2,40
  80f208:	e1bffc17 	ldw	r6,-16(fp)
  80f20c:	e17ffd17 	ldw	r5,-12(fp)
  80f210:	1009883a 	mov	r4,r2
  80f214:	080f6000 	call	80f600 <altera_avalon_jtag_uart_ioctl>
}
  80f218:	e037883a 	mov	sp,fp
  80f21c:	dfc00117 	ldw	ra,4(sp)
  80f220:	df000017 	ldw	fp,0(sp)
  80f224:	dec00204 	addi	sp,sp,8
  80f228:	f800283a 	ret

0080f22c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80f22c:	defffa04 	addi	sp,sp,-24
  80f230:	dfc00515 	stw	ra,20(sp)
  80f234:	df000415 	stw	fp,16(sp)
  80f238:	df000404 	addi	fp,sp,16
  80f23c:	e13fff15 	stw	r4,-4(fp)
  80f240:	e17ffe15 	stw	r5,-8(fp)
  80f244:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f248:	e0bfff17 	ldw	r2,-4(fp)
  80f24c:	00c00044 	movi	r3,1
  80f250:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80f254:	e0bfff17 	ldw	r2,-4(fp)
  80f258:	10800017 	ldw	r2,0(r2)
  80f25c:	10800104 	addi	r2,r2,4
  80f260:	1007883a 	mov	r3,r2
  80f264:	e0bfff17 	ldw	r2,-4(fp)
  80f268:	10800817 	ldw	r2,32(r2)
  80f26c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80f270:	e0bffe17 	ldw	r2,-8(fp)
  80f274:	e0fffd17 	ldw	r3,-12(fp)
  80f278:	d8000015 	stw	zero,0(sp)
  80f27c:	e1ffff17 	ldw	r7,-4(fp)
  80f280:	01802074 	movhi	r6,129
  80f284:	31bcbb04 	addi	r6,r6,-3348
  80f288:	180b883a 	mov	r5,r3
  80f28c:	1009883a 	mov	r4,r2
  80f290:	080ff9c0 	call	80ff9c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80f294:	e0bfff17 	ldw	r2,-4(fp)
  80f298:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80f29c:	e0bfff17 	ldw	r2,-4(fp)
  80f2a0:	10800204 	addi	r2,r2,8
  80f2a4:	d0e70d17 	ldw	r3,-25548(gp)
  80f2a8:	e1ffff17 	ldw	r7,-4(fp)
  80f2ac:	01802074 	movhi	r6,129
  80f2b0:	31bd3e04 	addi	r6,r6,-2824
  80f2b4:	180b883a 	mov	r5,r3
  80f2b8:	1009883a 	mov	r4,r2
  80f2bc:	080fc3c0 	call	80fc3c <alt_alarm_start>
  80f2c0:	1000040e 	bge	r2,zero,80f2d4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80f2c4:	e0ffff17 	ldw	r3,-4(fp)
  80f2c8:	00a00034 	movhi	r2,32768
  80f2cc:	10bfffc4 	addi	r2,r2,-1
  80f2d0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80f2d4:	0001883a 	nop
  80f2d8:	e037883a 	mov	sp,fp
  80f2dc:	dfc00117 	ldw	ra,4(sp)
  80f2e0:	df000017 	ldw	fp,0(sp)
  80f2e4:	dec00204 	addi	sp,sp,8
  80f2e8:	f800283a 	ret

0080f2ec <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80f2ec:	defff804 	addi	sp,sp,-32
  80f2f0:	df000715 	stw	fp,28(sp)
  80f2f4:	df000704 	addi	fp,sp,28
  80f2f8:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80f2fc:	e0bff917 	ldw	r2,-28(fp)
  80f300:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  80f304:	e0bffd17 	ldw	r2,-12(fp)
  80f308:	10800017 	ldw	r2,0(r2)
  80f30c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f310:	e0bffc17 	ldw	r2,-16(fp)
  80f314:	10800104 	addi	r2,r2,4
  80f318:	10800037 	ldwio	r2,0(r2)
  80f31c:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80f320:	e0bffb17 	ldw	r2,-20(fp)
  80f324:	1080c00c 	andi	r2,r2,768
  80f328:	10006d26 	beq	r2,zero,80f4e0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80f32c:	e0bffb17 	ldw	r2,-20(fp)
  80f330:	1080400c 	andi	r2,r2,256
  80f334:	10003526 	beq	r2,zero,80f40c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80f338:	00800074 	movhi	r2,1
  80f33c:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f340:	e0bffd17 	ldw	r2,-12(fp)
  80f344:	10800a17 	ldw	r2,40(r2)
  80f348:	10800044 	addi	r2,r2,1
  80f34c:	1081ffcc 	andi	r2,r2,2047
  80f350:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80f354:	e0bffd17 	ldw	r2,-12(fp)
  80f358:	10800b17 	ldw	r2,44(r2)
  80f35c:	e0fffa17 	ldw	r3,-24(fp)
  80f360:	18801526 	beq	r3,r2,80f3b8 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80f364:	e0bffc17 	ldw	r2,-16(fp)
  80f368:	10800037 	ldwio	r2,0(r2)
  80f36c:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80f370:	e0bfff17 	ldw	r2,-4(fp)
  80f374:	10a0000c 	andi	r2,r2,32768
  80f378:	10001126 	beq	r2,zero,80f3c0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80f37c:	e0bffd17 	ldw	r2,-12(fp)
  80f380:	10800a17 	ldw	r2,40(r2)
  80f384:	e0ffff17 	ldw	r3,-4(fp)
  80f388:	1809883a 	mov	r4,r3
  80f38c:	e0fffd17 	ldw	r3,-12(fp)
  80f390:	1885883a 	add	r2,r3,r2
  80f394:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f398:	e0bffd17 	ldw	r2,-12(fp)
  80f39c:	10800a17 	ldw	r2,40(r2)
  80f3a0:	10800044 	addi	r2,r2,1
  80f3a4:	10c1ffcc 	andi	r3,r2,2047
  80f3a8:	e0bffd17 	ldw	r2,-12(fp)
  80f3ac:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80f3b0:	0001883a 	nop
      {
  80f3b4:	003fe206 	br	80f340 <altera_avalon_jtag_uart_irq+0x54>
          break;
  80f3b8:	0001883a 	nop
  80f3bc:	00000106 	br	80f3c4 <altera_avalon_jtag_uart_irq+0xd8>
          break;
  80f3c0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80f3c4:	e0bfff17 	ldw	r2,-4(fp)
  80f3c8:	10bfffec 	andhi	r2,r2,65535
  80f3cc:	10000f26 	beq	r2,zero,80f40c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f3d0:	e0bffd17 	ldw	r2,-12(fp)
  80f3d4:	10c00817 	ldw	r3,32(r2)
  80f3d8:	00bfff84 	movi	r2,-2
  80f3dc:	1886703a 	and	r3,r3,r2
  80f3e0:	e0bffd17 	ldw	r2,-12(fp)
  80f3e4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80f3e8:	e0bffc17 	ldw	r2,-16(fp)
  80f3ec:	10800104 	addi	r2,r2,4
  80f3f0:	1007883a 	mov	r3,r2
  80f3f4:	e0bffd17 	ldw	r2,-12(fp)
  80f3f8:	10800817 	ldw	r2,32(r2)
  80f3fc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f400:	e0bffc17 	ldw	r2,-16(fp)
  80f404:	10800104 	addi	r2,r2,4
  80f408:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80f40c:	e0bffb17 	ldw	r2,-20(fp)
  80f410:	1080800c 	andi	r2,r2,512
  80f414:	103fbe26 	beq	r2,zero,80f310 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80f418:	e0bffb17 	ldw	r2,-20(fp)
  80f41c:	1004d43a 	srli	r2,r2,16
  80f420:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f424:	00001406 	br	80f478 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80f428:	e0bffc17 	ldw	r2,-16(fp)
  80f42c:	e0fffd17 	ldw	r3,-12(fp)
  80f430:	18c00d17 	ldw	r3,52(r3)
  80f434:	e13ffd17 	ldw	r4,-12(fp)
  80f438:	20c7883a 	add	r3,r4,r3
  80f43c:	18c20e03 	ldbu	r3,2104(r3)
  80f440:	18c03fcc 	andi	r3,r3,255
  80f444:	18c0201c 	xori	r3,r3,128
  80f448:	18ffe004 	addi	r3,r3,-128
  80f44c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f450:	e0bffd17 	ldw	r2,-12(fp)
  80f454:	10800d17 	ldw	r2,52(r2)
  80f458:	10800044 	addi	r2,r2,1
  80f45c:	10c1ffcc 	andi	r3,r2,2047
  80f460:	e0bffd17 	ldw	r2,-12(fp)
  80f464:	10c00d15 	stw	r3,52(r2)
  80f468:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80f46c:	e0bffe17 	ldw	r2,-8(fp)
  80f470:	10bfffc4 	addi	r2,r2,-1
  80f474:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  80f478:	e0bffe17 	ldw	r2,-8(fp)
  80f47c:	10000526 	beq	r2,zero,80f494 <altera_avalon_jtag_uart_irq+0x1a8>
  80f480:	e0bffd17 	ldw	r2,-12(fp)
  80f484:	10c00d17 	ldw	r3,52(r2)
  80f488:	e0bffd17 	ldw	r2,-12(fp)
  80f48c:	10800c17 	ldw	r2,48(r2)
  80f490:	18bfe51e 	bne	r3,r2,80f428 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
  80f494:	e0bffe17 	ldw	r2,-8(fp)
  80f498:	103f9d26 	beq	r2,zero,80f310 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f49c:	e0bffd17 	ldw	r2,-12(fp)
  80f4a0:	10c00817 	ldw	r3,32(r2)
  80f4a4:	00bfff44 	movi	r2,-3
  80f4a8:	1886703a 	and	r3,r3,r2
  80f4ac:	e0bffd17 	ldw	r2,-12(fp)
  80f4b0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f4b4:	e0bffd17 	ldw	r2,-12(fp)
  80f4b8:	10800017 	ldw	r2,0(r2)
  80f4bc:	10800104 	addi	r2,r2,4
  80f4c0:	1007883a 	mov	r3,r2
  80f4c4:	e0bffd17 	ldw	r2,-12(fp)
  80f4c8:	10800817 	ldw	r2,32(r2)
  80f4cc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f4d0:	e0bffc17 	ldw	r2,-16(fp)
  80f4d4:	10800104 	addi	r2,r2,4
  80f4d8:	10800037 	ldwio	r2,0(r2)
  {
  80f4dc:	003f8c06 	br	80f310 <altera_avalon_jtag_uart_irq+0x24>
      break;
  80f4e0:	0001883a 	nop
      }
    }
  }
}
  80f4e4:	0001883a 	nop
  80f4e8:	e037883a 	mov	sp,fp
  80f4ec:	df000017 	ldw	fp,0(sp)
  80f4f0:	dec00104 	addi	sp,sp,4
  80f4f4:	f800283a 	ret

0080f4f8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80f4f8:	defffc04 	addi	sp,sp,-16
  80f4fc:	df000315 	stw	fp,12(sp)
  80f500:	df000304 	addi	fp,sp,12
  80f504:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80f508:	e0bffd17 	ldw	r2,-12(fp)
  80f50c:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80f510:	e0bfff17 	ldw	r2,-4(fp)
  80f514:	10800017 	ldw	r2,0(r2)
  80f518:	10800104 	addi	r2,r2,4
  80f51c:	10800037 	ldwio	r2,0(r2)
  80f520:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80f524:	e0bffe17 	ldw	r2,-8(fp)
  80f528:	1081000c 	andi	r2,r2,1024
  80f52c:	10000b26 	beq	r2,zero,80f55c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80f530:	e0bfff17 	ldw	r2,-4(fp)
  80f534:	10800017 	ldw	r2,0(r2)
  80f538:	10800104 	addi	r2,r2,4
  80f53c:	1007883a 	mov	r3,r2
  80f540:	e0bfff17 	ldw	r2,-4(fp)
  80f544:	10800817 	ldw	r2,32(r2)
  80f548:	10810014 	ori	r2,r2,1024
  80f54c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80f550:	e0bfff17 	ldw	r2,-4(fp)
  80f554:	10000915 	stw	zero,36(r2)
  80f558:	00000a06 	br	80f584 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80f55c:	e0bfff17 	ldw	r2,-4(fp)
  80f560:	10c00917 	ldw	r3,36(r2)
  80f564:	00a00034 	movhi	r2,32768
  80f568:	10bfff04 	addi	r2,r2,-4
  80f56c:	10c00536 	bltu	r2,r3,80f584 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80f570:	e0bfff17 	ldw	r2,-4(fp)
  80f574:	10800917 	ldw	r2,36(r2)
  80f578:	10c00044 	addi	r3,r2,1
  80f57c:	e0bfff17 	ldw	r2,-4(fp)
  80f580:	10c00915 	stw	r3,36(r2)
  80f584:	d0a70d17 	ldw	r2,-25548(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80f588:	e037883a 	mov	sp,fp
  80f58c:	df000017 	ldw	fp,0(sp)
  80f590:	dec00104 	addi	sp,sp,4
  80f594:	f800283a 	ret

0080f598 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80f598:	defffd04 	addi	sp,sp,-12
  80f59c:	df000215 	stw	fp,8(sp)
  80f5a0:	df000204 	addi	fp,sp,8
  80f5a4:	e13fff15 	stw	r4,-4(fp)
  80f5a8:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f5ac:	00000506 	br	80f5c4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80f5b0:	e0bffe17 	ldw	r2,-8(fp)
  80f5b4:	1090000c 	andi	r2,r2,16384
  80f5b8:	10000226 	beq	r2,zero,80f5c4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80f5bc:	00bffd44 	movi	r2,-11
  80f5c0:	00000b06 	br	80f5f0 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f5c4:	e0bfff17 	ldw	r2,-4(fp)
  80f5c8:	10c00d17 	ldw	r3,52(r2)
  80f5cc:	e0bfff17 	ldw	r2,-4(fp)
  80f5d0:	10800c17 	ldw	r2,48(r2)
  80f5d4:	18800526 	beq	r3,r2,80f5ec <altera_avalon_jtag_uart_close+0x54>
  80f5d8:	e0bfff17 	ldw	r2,-4(fp)
  80f5dc:	10c00917 	ldw	r3,36(r2)
  80f5e0:	e0bfff17 	ldw	r2,-4(fp)
  80f5e4:	10800117 	ldw	r2,4(r2)
  80f5e8:	18bff136 	bltu	r3,r2,80f5b0 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  80f5ec:	0005883a 	mov	r2,zero
}
  80f5f0:	e037883a 	mov	sp,fp
  80f5f4:	df000017 	ldw	fp,0(sp)
  80f5f8:	dec00104 	addi	sp,sp,4
  80f5fc:	f800283a 	ret

0080f600 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80f600:	defffa04 	addi	sp,sp,-24
  80f604:	df000515 	stw	fp,20(sp)
  80f608:	df000504 	addi	fp,sp,20
  80f60c:	e13ffd15 	stw	r4,-12(fp)
  80f610:	e17ffc15 	stw	r5,-16(fp)
  80f614:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  80f618:	00bff9c4 	movi	r2,-25
  80f61c:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  80f620:	e0bffc17 	ldw	r2,-16(fp)
  80f624:	109a8060 	cmpeqi	r2,r2,27137
  80f628:	1000041e 	bne	r2,zero,80f63c <altera_avalon_jtag_uart_ioctl+0x3c>
  80f62c:	e0bffc17 	ldw	r2,-16(fp)
  80f630:	109a80a0 	cmpeqi	r2,r2,27138
  80f634:	1000181e 	bne	r2,zero,80f698 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  80f638:	00002906 	br	80f6e0 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  80f63c:	e0bffd17 	ldw	r2,-12(fp)
  80f640:	10c00117 	ldw	r3,4(r2)
  80f644:	00a00034 	movhi	r2,32768
  80f648:	10bfffc4 	addi	r2,r2,-1
  80f64c:	18802126 	beq	r3,r2,80f6d4 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  80f650:	e0bffb17 	ldw	r2,-20(fp)
  80f654:	10800017 	ldw	r2,0(r2)
  80f658:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80f65c:	e0bffe17 	ldw	r2,-8(fp)
  80f660:	10800090 	cmplti	r2,r2,2
  80f664:	1000061e 	bne	r2,zero,80f680 <altera_avalon_jtag_uart_ioctl+0x80>
  80f668:	e0fffe17 	ldw	r3,-8(fp)
  80f66c:	00a00034 	movhi	r2,32768
  80f670:	10bfffc4 	addi	r2,r2,-1
  80f674:	18800226 	beq	r3,r2,80f680 <altera_avalon_jtag_uart_ioctl+0x80>
  80f678:	e0bffe17 	ldw	r2,-8(fp)
  80f67c:	00000206 	br	80f688 <altera_avalon_jtag_uart_ioctl+0x88>
  80f680:	00a00034 	movhi	r2,32768
  80f684:	10bfff84 	addi	r2,r2,-2
  80f688:	e0fffd17 	ldw	r3,-12(fp)
  80f68c:	18800115 	stw	r2,4(r3)
      rc = 0;
  80f690:	e03fff15 	stw	zero,-4(fp)
    break;
  80f694:	00000f06 	br	80f6d4 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  80f698:	e0bffd17 	ldw	r2,-12(fp)
  80f69c:	10c00117 	ldw	r3,4(r2)
  80f6a0:	00a00034 	movhi	r2,32768
  80f6a4:	10bfffc4 	addi	r2,r2,-1
  80f6a8:	18800c26 	beq	r3,r2,80f6dc <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80f6ac:	e0bffd17 	ldw	r2,-12(fp)
  80f6b0:	10c00917 	ldw	r3,36(r2)
  80f6b4:	e0bffd17 	ldw	r2,-12(fp)
  80f6b8:	10800117 	ldw	r2,4(r2)
  80f6bc:	1885803a 	cmpltu	r2,r3,r2
  80f6c0:	10c03fcc 	andi	r3,r2,255
  80f6c4:	e0bffb17 	ldw	r2,-20(fp)
  80f6c8:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80f6cc:	e03fff15 	stw	zero,-4(fp)
    break;
  80f6d0:	00000206 	br	80f6dc <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  80f6d4:	0001883a 	nop
  80f6d8:	00000106 	br	80f6e0 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  80f6dc:	0001883a 	nop
  }

  return rc;
  80f6e0:	e0bfff17 	ldw	r2,-4(fp)
}
  80f6e4:	e037883a 	mov	sp,fp
  80f6e8:	df000017 	ldw	fp,0(sp)
  80f6ec:	dec00104 	addi	sp,sp,4
  80f6f0:	f800283a 	ret

0080f6f4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80f6f4:	defff304 	addi	sp,sp,-52
  80f6f8:	dfc00c15 	stw	ra,48(sp)
  80f6fc:	df000b15 	stw	fp,44(sp)
  80f700:	df000b04 	addi	fp,sp,44
  80f704:	e13ff815 	stw	r4,-32(fp)
  80f708:	e17ff715 	stw	r5,-36(fp)
  80f70c:	e1bff615 	stw	r6,-40(fp)
  80f710:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  80f714:	e0bff717 	ldw	r2,-36(fp)
  80f718:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80f71c:	00004706 	br	80f83c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80f720:	e0bff817 	ldw	r2,-32(fp)
  80f724:	10800a17 	ldw	r2,40(r2)
  80f728:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  80f72c:	e0bff817 	ldw	r2,-32(fp)
  80f730:	10800b17 	ldw	r2,44(r2)
  80f734:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  80f738:	e0fffd17 	ldw	r3,-12(fp)
  80f73c:	e0bffc17 	ldw	r2,-16(fp)
  80f740:	18800536 	bltu	r3,r2,80f758 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80f744:	e0fffd17 	ldw	r3,-12(fp)
  80f748:	e0bffc17 	ldw	r2,-16(fp)
  80f74c:	1885c83a 	sub	r2,r3,r2
  80f750:	e0bffe15 	stw	r2,-8(fp)
  80f754:	00000406 	br	80f768 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80f758:	00c20004 	movi	r3,2048
  80f75c:	e0bffc17 	ldw	r2,-16(fp)
  80f760:	1885c83a 	sub	r2,r3,r2
  80f764:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80f768:	e0bffe17 	ldw	r2,-8(fp)
  80f76c:	10001e26 	beq	r2,zero,80f7e8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80f770:	e0fff617 	ldw	r3,-40(fp)
  80f774:	e0bffe17 	ldw	r2,-8(fp)
  80f778:	1880022e 	bgeu	r3,r2,80f784 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80f77c:	e0bff617 	ldw	r2,-40(fp)
  80f780:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80f784:	e0bff817 	ldw	r2,-32(fp)
  80f788:	10c00e04 	addi	r3,r2,56
  80f78c:	e0bffc17 	ldw	r2,-16(fp)
  80f790:	1885883a 	add	r2,r3,r2
  80f794:	e1bffe17 	ldw	r6,-8(fp)
  80f798:	100b883a 	mov	r5,r2
  80f79c:	e13fff17 	ldw	r4,-4(fp)
  80f7a0:	0806cc00 	call	806cc0 <memcpy>
      ptr   += n;
  80f7a4:	e0ffff17 	ldw	r3,-4(fp)
  80f7a8:	e0bffe17 	ldw	r2,-8(fp)
  80f7ac:	1885883a 	add	r2,r3,r2
  80f7b0:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  80f7b4:	e0fff617 	ldw	r3,-40(fp)
  80f7b8:	e0bffe17 	ldw	r2,-8(fp)
  80f7bc:	1885c83a 	sub	r2,r3,r2
  80f7c0:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f7c4:	e0fffc17 	ldw	r3,-16(fp)
  80f7c8:	e0bffe17 	ldw	r2,-8(fp)
  80f7cc:	1885883a 	add	r2,r3,r2
  80f7d0:	10c1ffcc 	andi	r3,r2,2047
  80f7d4:	e0bff817 	ldw	r2,-32(fp)
  80f7d8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80f7dc:	e0bff617 	ldw	r2,-40(fp)
  80f7e0:	00bfcf16 	blt	zero,r2,80f720 <altera_avalon_jtag_uart_read+0x2c>
  80f7e4:	00000106 	br	80f7ec <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  80f7e8:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  80f7ec:	e0ffff17 	ldw	r3,-4(fp)
  80f7f0:	e0bff717 	ldw	r2,-36(fp)
  80f7f4:	1880141e 	bne	r3,r2,80f848 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80f7f8:	e0bff517 	ldw	r2,-44(fp)
  80f7fc:	1090000c 	andi	r2,r2,16384
  80f800:	1000131e 	bne	r2,zero,80f850 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80f804:	0001883a 	nop
  80f808:	e0bff817 	ldw	r2,-32(fp)
  80f80c:	10800a17 	ldw	r2,40(r2)
  80f810:	e0fffd17 	ldw	r3,-12(fp)
  80f814:	1880051e 	bne	r3,r2,80f82c <altera_avalon_jtag_uart_read+0x138>
  80f818:	e0bff817 	ldw	r2,-32(fp)
  80f81c:	10c00917 	ldw	r3,36(r2)
  80f820:	e0bff817 	ldw	r2,-32(fp)
  80f824:	10800117 	ldw	r2,4(r2)
  80f828:	18bff736 	bltu	r3,r2,80f808 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80f82c:	e0bff817 	ldw	r2,-32(fp)
  80f830:	10800a17 	ldw	r2,40(r2)
  80f834:	e0fffd17 	ldw	r3,-12(fp)
  80f838:	18800726 	beq	r3,r2,80f858 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  80f83c:	e0bff617 	ldw	r2,-40(fp)
  80f840:	00bfb716 	blt	zero,r2,80f720 <altera_avalon_jtag_uart_read+0x2c>
  80f844:	00000506 	br	80f85c <altera_avalon_jtag_uart_read+0x168>
      break;
  80f848:	0001883a 	nop
  80f84c:	00000306 	br	80f85c <altera_avalon_jtag_uart_read+0x168>
      break;
  80f850:	0001883a 	nop
  80f854:	00000106 	br	80f85c <altera_avalon_jtag_uart_read+0x168>
      break;
  80f858:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80f85c:	e0ffff17 	ldw	r3,-4(fp)
  80f860:	e0bff717 	ldw	r2,-36(fp)
  80f864:	18801926 	beq	r3,r2,80f8cc <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  80f868:	0005303a 	rdctl	r2,status
  80f86c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f870:	e0fff917 	ldw	r3,-28(fp)
  80f874:	00bfff84 	movi	r2,-2
  80f878:	1884703a 	and	r2,r3,r2
  80f87c:	1001703a 	wrctl	status,r2
  return context;
  80f880:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80f884:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f888:	e0bff817 	ldw	r2,-32(fp)
  80f88c:	10800817 	ldw	r2,32(r2)
  80f890:	10c00054 	ori	r3,r2,1
  80f894:	e0bff817 	ldw	r2,-32(fp)
  80f898:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f89c:	e0bff817 	ldw	r2,-32(fp)
  80f8a0:	10800017 	ldw	r2,0(r2)
  80f8a4:	10800104 	addi	r2,r2,4
  80f8a8:	1007883a 	mov	r3,r2
  80f8ac:	e0bff817 	ldw	r2,-32(fp)
  80f8b0:	10800817 	ldw	r2,32(r2)
  80f8b4:	18800035 	stwio	r2,0(r3)
  80f8b8:	e0bffb17 	ldw	r2,-20(fp)
  80f8bc:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80f8c0:	e0bffa17 	ldw	r2,-24(fp)
  80f8c4:	1001703a 	wrctl	status,r2
}
  80f8c8:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80f8cc:	e0ffff17 	ldw	r3,-4(fp)
  80f8d0:	e0bff717 	ldw	r2,-36(fp)
  80f8d4:	18800426 	beq	r3,r2,80f8e8 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  80f8d8:	e0ffff17 	ldw	r3,-4(fp)
  80f8dc:	e0bff717 	ldw	r2,-36(fp)
  80f8e0:	1885c83a 	sub	r2,r3,r2
  80f8e4:	00000606 	br	80f900 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80f8e8:	e0bff517 	ldw	r2,-44(fp)
  80f8ec:	1090000c 	andi	r2,r2,16384
  80f8f0:	10000226 	beq	r2,zero,80f8fc <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  80f8f4:	00bffd44 	movi	r2,-11
  80f8f8:	00000106 	br	80f900 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80f8fc:	00bffec4 	movi	r2,-5
}
  80f900:	e037883a 	mov	sp,fp
  80f904:	dfc00117 	ldw	ra,4(sp)
  80f908:	df000017 	ldw	fp,0(sp)
  80f90c:	dec00204 	addi	sp,sp,8
  80f910:	f800283a 	ret

0080f914 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80f914:	defff304 	addi	sp,sp,-52
  80f918:	dfc00c15 	stw	ra,48(sp)
  80f91c:	df000b15 	stw	fp,44(sp)
  80f920:	df000b04 	addi	fp,sp,44
  80f924:	e13ff815 	stw	r4,-32(fp)
  80f928:	e17ff715 	stw	r5,-36(fp)
  80f92c:	e1bff615 	stw	r6,-40(fp)
  80f930:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80f934:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80f938:	e0bff717 	ldw	r2,-36(fp)
  80f93c:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f940:	00003706 	br	80fa20 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80f944:	e0bff817 	ldw	r2,-32(fp)
  80f948:	10800c17 	ldw	r2,48(r2)
  80f94c:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  80f950:	e0bff817 	ldw	r2,-32(fp)
  80f954:	10800d17 	ldw	r2,52(r2)
  80f958:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  80f95c:	e0fffc17 	ldw	r3,-16(fp)
  80f960:	e0bfff17 	ldw	r2,-4(fp)
  80f964:	1880062e 	bgeu	r3,r2,80f980 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80f968:	e0ffff17 	ldw	r3,-4(fp)
  80f96c:	e0bffc17 	ldw	r2,-16(fp)
  80f970:	1885c83a 	sub	r2,r3,r2
  80f974:	10bfffc4 	addi	r2,r2,-1
  80f978:	e0bffe15 	stw	r2,-8(fp)
  80f97c:	00000b06 	br	80f9ac <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80f980:	e0bfff17 	ldw	r2,-4(fp)
  80f984:	10000526 	beq	r2,zero,80f99c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80f988:	00c20004 	movi	r3,2048
  80f98c:	e0bffc17 	ldw	r2,-16(fp)
  80f990:	1885c83a 	sub	r2,r3,r2
  80f994:	e0bffe15 	stw	r2,-8(fp)
  80f998:	00000406 	br	80f9ac <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80f99c:	00c1ffc4 	movi	r3,2047
  80f9a0:	e0bffc17 	ldw	r2,-16(fp)
  80f9a4:	1885c83a 	sub	r2,r3,r2
  80f9a8:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80f9ac:	e0bffe17 	ldw	r2,-8(fp)
  80f9b0:	10001e26 	beq	r2,zero,80fa2c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80f9b4:	e0fff617 	ldw	r3,-40(fp)
  80f9b8:	e0bffe17 	ldw	r2,-8(fp)
  80f9bc:	1880022e 	bgeu	r3,r2,80f9c8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80f9c0:	e0bff617 	ldw	r2,-40(fp)
  80f9c4:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80f9c8:	e0bff817 	ldw	r2,-32(fp)
  80f9cc:	10c20e04 	addi	r3,r2,2104
  80f9d0:	e0bffc17 	ldw	r2,-16(fp)
  80f9d4:	1885883a 	add	r2,r3,r2
  80f9d8:	e1bffe17 	ldw	r6,-8(fp)
  80f9dc:	e17ff717 	ldw	r5,-36(fp)
  80f9e0:	1009883a 	mov	r4,r2
  80f9e4:	0806cc00 	call	806cc0 <memcpy>
      ptr   += n;
  80f9e8:	e0fff717 	ldw	r3,-36(fp)
  80f9ec:	e0bffe17 	ldw	r2,-8(fp)
  80f9f0:	1885883a 	add	r2,r3,r2
  80f9f4:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  80f9f8:	e0fff617 	ldw	r3,-40(fp)
  80f9fc:	e0bffe17 	ldw	r2,-8(fp)
  80fa00:	1885c83a 	sub	r2,r3,r2
  80fa04:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80fa08:	e0fffc17 	ldw	r3,-16(fp)
  80fa0c:	e0bffe17 	ldw	r2,-8(fp)
  80fa10:	1885883a 	add	r2,r3,r2
  80fa14:	10c1ffcc 	andi	r3,r2,2047
  80fa18:	e0bff817 	ldw	r2,-32(fp)
  80fa1c:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  80fa20:	e0bff617 	ldw	r2,-40(fp)
  80fa24:	00bfc716 	blt	zero,r2,80f944 <altera_avalon_jtag_uart_write+0x30>
  80fa28:	00000106 	br	80fa30 <altera_avalon_jtag_uart_write+0x11c>
        break;
  80fa2c:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  80fa30:	0005303a 	rdctl	r2,status
  80fa34:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fa38:	e0fff917 	ldw	r3,-28(fp)
  80fa3c:	00bfff84 	movi	r2,-2
  80fa40:	1884703a 	and	r2,r3,r2
  80fa44:	1001703a 	wrctl	status,r2
  return context;
  80fa48:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80fa4c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80fa50:	e0bff817 	ldw	r2,-32(fp)
  80fa54:	10800817 	ldw	r2,32(r2)
  80fa58:	10c00094 	ori	r3,r2,2
  80fa5c:	e0bff817 	ldw	r2,-32(fp)
  80fa60:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80fa64:	e0bff817 	ldw	r2,-32(fp)
  80fa68:	10800017 	ldw	r2,0(r2)
  80fa6c:	10800104 	addi	r2,r2,4
  80fa70:	1007883a 	mov	r3,r2
  80fa74:	e0bff817 	ldw	r2,-32(fp)
  80fa78:	10800817 	ldw	r2,32(r2)
  80fa7c:	18800035 	stwio	r2,0(r3)
  80fa80:	e0bffb17 	ldw	r2,-20(fp)
  80fa84:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80fa88:	e0bffa17 	ldw	r2,-24(fp)
  80fa8c:	1001703a 	wrctl	status,r2
}
  80fa90:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80fa94:	e0bff617 	ldw	r2,-40(fp)
  80fa98:	0080100e 	bge	zero,r2,80fadc <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  80fa9c:	e0bff517 	ldw	r2,-44(fp)
  80faa0:	1090000c 	andi	r2,r2,16384
  80faa4:	1000101e 	bne	r2,zero,80fae8 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80faa8:	0001883a 	nop
  80faac:	e0bff817 	ldw	r2,-32(fp)
  80fab0:	10800d17 	ldw	r2,52(r2)
  80fab4:	e0ffff17 	ldw	r3,-4(fp)
  80fab8:	1880051e 	bne	r3,r2,80fad0 <altera_avalon_jtag_uart_write+0x1bc>
  80fabc:	e0bff817 	ldw	r2,-32(fp)
  80fac0:	10c00917 	ldw	r3,36(r2)
  80fac4:	e0bff817 	ldw	r2,-32(fp)
  80fac8:	10800117 	ldw	r2,4(r2)
  80facc:	18bff736 	bltu	r3,r2,80faac <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80fad0:	e0bff817 	ldw	r2,-32(fp)
  80fad4:	10800917 	ldw	r2,36(r2)
  80fad8:	1000051e 	bne	r2,zero,80faf0 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  80fadc:	e0bff617 	ldw	r2,-40(fp)
  80fae0:	00bfcf16 	blt	zero,r2,80fa20 <altera_avalon_jtag_uart_write+0x10c>
  80fae4:	00000306 	br	80faf4 <altera_avalon_jtag_uart_write+0x1e0>
        break;
  80fae8:	0001883a 	nop
  80faec:	00000106 	br	80faf4 <altera_avalon_jtag_uart_write+0x1e0>
         break;
  80faf0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80faf4:	e0fff717 	ldw	r3,-36(fp)
  80faf8:	e0bffd17 	ldw	r2,-12(fp)
  80fafc:	18800426 	beq	r3,r2,80fb10 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  80fb00:	e0fff717 	ldw	r3,-36(fp)
  80fb04:	e0bffd17 	ldw	r2,-12(fp)
  80fb08:	1885c83a 	sub	r2,r3,r2
  80fb0c:	00000606 	br	80fb28 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  80fb10:	e0bff517 	ldw	r2,-44(fp)
  80fb14:	1090000c 	andi	r2,r2,16384
  80fb18:	10000226 	beq	r2,zero,80fb24 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  80fb1c:	00bffd44 	movi	r2,-11
  80fb20:	00000106 	br	80fb28 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80fb24:	00bffec4 	movi	r2,-5
}
  80fb28:	e037883a 	mov	sp,fp
  80fb2c:	dfc00117 	ldw	ra,4(sp)
  80fb30:	df000017 	ldw	fp,0(sp)
  80fb34:	dec00204 	addi	sp,sp,8
  80fb38:	f800283a 	ret

0080fb3c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80fb3c:	defffa04 	addi	sp,sp,-24
  80fb40:	dfc00515 	stw	ra,20(sp)
  80fb44:	df000415 	stw	fp,16(sp)
  80fb48:	df000404 	addi	fp,sp,16
  80fb4c:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80fb50:	0007883a 	mov	r3,zero
  80fb54:	e0bffc17 	ldw	r2,-16(fp)
  80fb58:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80fb5c:	e0bffc17 	ldw	r2,-16(fp)
  80fb60:	10800104 	addi	r2,r2,4
  80fb64:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
  80fb68:	0005303a 	rdctl	r2,status
  80fb6c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fb70:	e0fffd17 	ldw	r3,-12(fp)
  80fb74:	00bfff84 	movi	r2,-2
  80fb78:	1884703a 	and	r2,r3,r2
  80fb7c:	1001703a 	wrctl	status,r2
  return context;
  80fb80:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80fb84:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
  80fb88:	08106a00 	call	8106a0 <alt_tick>
  80fb8c:	e0bfff17 	ldw	r2,-4(fp)
  80fb90:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80fb94:	e0bffe17 	ldw	r2,-8(fp)
  80fb98:	1001703a 	wrctl	status,r2
}
  80fb9c:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
  80fba0:	0001883a 	nop
  80fba4:	e037883a 	mov	sp,fp
  80fba8:	dfc00117 	ldw	ra,4(sp)
  80fbac:	df000017 	ldw	fp,0(sp)
  80fbb0:	dec00204 	addi	sp,sp,8
  80fbb4:	f800283a 	ret

0080fbb8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80fbb8:	defff804 	addi	sp,sp,-32
  80fbbc:	dfc00715 	stw	ra,28(sp)
  80fbc0:	df000615 	stw	fp,24(sp)
  80fbc4:	df000604 	addi	fp,sp,24
  80fbc8:	e13ffe15 	stw	r4,-8(fp)
  80fbcc:	e17ffd15 	stw	r5,-12(fp)
  80fbd0:	e1bffc15 	stw	r6,-16(fp)
  80fbd4:	e1fffb15 	stw	r7,-20(fp)
  80fbd8:	e0bffb17 	ldw	r2,-20(fp)
  80fbdc:	e0bfff15 	stw	r2,-4(fp)
  if (! _alt_tick_rate)
  80fbe0:	d0a70d17 	ldw	r2,-25548(gp)
  80fbe4:	1000031e 	bne	r2,zero,80fbf4 <alt_avalon_timer_sc_init+0x3c>
    _alt_tick_rate = nticks;
  80fbe8:	e0bfff17 	ldw	r2,-4(fp)
  80fbec:	d0a70d15 	stw	r2,-25548(gp)
    return 0;
  80fbf0:	00000106 	br	80fbf8 <alt_avalon_timer_sc_init+0x40>
    return -1;
  80fbf4:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80fbf8:	e0bffe17 	ldw	r2,-8(fp)
  80fbfc:	10800104 	addi	r2,r2,4
  80fc00:	00c001c4 	movi	r3,7
  80fc04:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80fc08:	d8000015 	stw	zero,0(sp)
  80fc0c:	e1fffe17 	ldw	r7,-8(fp)
  80fc10:	01802074 	movhi	r6,129
  80fc14:	31becf04 	addi	r6,r6,-1220
  80fc18:	e17ffc17 	ldw	r5,-16(fp)
  80fc1c:	e13ffd17 	ldw	r4,-12(fp)
  80fc20:	080ff9c0 	call	80ff9c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80fc24:	0001883a 	nop
  80fc28:	e037883a 	mov	sp,fp
  80fc2c:	dfc00117 	ldw	ra,4(sp)
  80fc30:	df000017 	ldw	fp,0(sp)
  80fc34:	dec00204 	addi	sp,sp,8
  80fc38:	f800283a 	ret

0080fc3c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80fc3c:	defff504 	addi	sp,sp,-44
  80fc40:	df000a15 	stw	fp,40(sp)
  80fc44:	df000a04 	addi	fp,sp,40
  80fc48:	e13ff915 	stw	r4,-28(fp)
  80fc4c:	e17ff815 	stw	r5,-32(fp)
  80fc50:	e1bff715 	stw	r6,-36(fp)
  80fc54:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80fc58:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
  80fc5c:	d0a70d17 	ldw	r2,-25548(gp)
  
  if (alt_ticks_per_second ())
  80fc60:	10003e26 	beq	r2,zero,80fd5c <alt_alarm_start+0x120>
  {
    if (alarm)
  80fc64:	e0bff917 	ldw	r2,-28(fp)
  80fc68:	10003a26 	beq	r2,zero,80fd54 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
  80fc6c:	e0bff917 	ldw	r2,-28(fp)
  80fc70:	e0fff717 	ldw	r3,-36(fp)
  80fc74:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80fc78:	e0bff917 	ldw	r2,-28(fp)
  80fc7c:	e0fff617 	ldw	r3,-40(fp)
  80fc80:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  80fc84:	0005303a 	rdctl	r2,status
  80fc88:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fc8c:	e0fffd17 	ldw	r3,-12(fp)
  80fc90:	00bfff84 	movi	r2,-2
  80fc94:	1884703a 	and	r2,r3,r2
  80fc98:	1001703a 	wrctl	status,r2
  return context;
  80fc9c:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
  80fca0:	e0bffe15 	stw	r2,-8(fp)
  return _alt_nticks;
  80fca4:	d0a70e17 	ldw	r2,-25544(gp)
      
      current_nticks = alt_nticks();
  80fca8:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80fcac:	e0fff817 	ldw	r3,-32(fp)
  80fcb0:	e0bfff17 	ldw	r2,-4(fp)
  80fcb4:	1885883a 	add	r2,r3,r2
  80fcb8:	10c00044 	addi	r3,r2,1
  80fcbc:	e0bff917 	ldw	r2,-28(fp)
  80fcc0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80fcc4:	e0bff917 	ldw	r2,-28(fp)
  80fcc8:	10c00217 	ldw	r3,8(r2)
  80fccc:	e0bfff17 	ldw	r2,-4(fp)
  80fcd0:	1880042e 	bgeu	r3,r2,80fce4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80fcd4:	e0bff917 	ldw	r2,-28(fp)
  80fcd8:	00c00044 	movi	r3,1
  80fcdc:	10c00405 	stb	r3,16(r2)
  80fce0:	00000206 	br	80fcec <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80fce4:	e0bff917 	ldw	r2,-28(fp)
  80fce8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80fcec:	e0bff917 	ldw	r2,-28(fp)
  80fcf0:	d0e00c04 	addi	r3,gp,-32720
  80fcf4:	e0fffb15 	stw	r3,-20(fp)
  80fcf8:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80fcfc:	e0bffa17 	ldw	r2,-24(fp)
  80fd00:	e0fffb17 	ldw	r3,-20(fp)
  80fd04:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fd08:	e0bffb17 	ldw	r2,-20(fp)
  80fd0c:	10c00017 	ldw	r3,0(r2)
  80fd10:	e0bffa17 	ldw	r2,-24(fp)
  80fd14:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80fd18:	e0bffb17 	ldw	r2,-20(fp)
  80fd1c:	10800017 	ldw	r2,0(r2)
  80fd20:	e0fffa17 	ldw	r3,-24(fp)
  80fd24:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fd28:	e0bffb17 	ldw	r2,-20(fp)
  80fd2c:	e0fffa17 	ldw	r3,-24(fp)
  80fd30:	10c00015 	stw	r3,0(r2)
}
  80fd34:	0001883a 	nop
  80fd38:	e0bffe17 	ldw	r2,-8(fp)
  80fd3c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80fd40:	e0bffc17 	ldw	r2,-16(fp)
  80fd44:	1001703a 	wrctl	status,r2
}
  80fd48:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  80fd4c:	0005883a 	mov	r2,zero
  80fd50:	00000306 	br	80fd60 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
  80fd54:	00bffa84 	movi	r2,-22
  80fd58:	00000106 	br	80fd60 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
  80fd5c:	00bfde84 	movi	r2,-134
  }
}
  80fd60:	e037883a 	mov	sp,fp
  80fd64:	df000017 	ldw	fp,0(sp)
  80fd68:	dec00104 	addi	sp,sp,4
  80fd6c:	f800283a 	ret

0080fd70 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80fd70:	defffe04 	addi	sp,sp,-8
  80fd74:	df000115 	stw	fp,4(sp)
  80fd78:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fd7c:	e03fff15 	stw	zero,-4(fp)
  80fd80:	00000506 	br	80fd98 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80fd84:	e0bfff17 	ldw	r2,-4(fp)
  80fd88:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fd8c:	e0bfff17 	ldw	r2,-4(fp)
  80fd90:	10800804 	addi	r2,r2,32
  80fd94:	e0bfff15 	stw	r2,-4(fp)
  80fd98:	e0bfff17 	ldw	r2,-4(fp)
  80fd9c:	10820030 	cmpltui	r2,r2,2048
  80fda0:	103ff81e 	bne	r2,zero,80fd84 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80fda4:	0001883a 	nop
  80fda8:	0001883a 	nop
  80fdac:	e037883a 	mov	sp,fp
  80fdb0:	df000017 	ldw	fp,0(sp)
  80fdb4:	dec00104 	addi	sp,sp,4
  80fdb8:	f800283a 	ret

0080fdbc <alt_get_errno>:
{
  80fdbc:	defffe04 	addi	sp,sp,-8
  80fdc0:	dfc00115 	stw	ra,4(sp)
  80fdc4:	df000015 	stw	fp,0(sp)
  80fdc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fdcc:	d0a00917 	ldw	r2,-32732(gp)
  80fdd0:	10000326 	beq	r2,zero,80fde0 <alt_get_errno+0x24>
  80fdd4:	d0a00917 	ldw	r2,-32732(gp)
  80fdd8:	103ee83a 	callr	r2
  80fddc:	00000106 	br	80fde4 <alt_get_errno+0x28>
  80fde0:	d0a70704 	addi	r2,gp,-25572
}
  80fde4:	e037883a 	mov	sp,fp
  80fde8:	dfc00117 	ldw	ra,4(sp)
  80fdec:	df000017 	ldw	fp,0(sp)
  80fdf0:	dec00204 	addi	sp,sp,8
  80fdf4:	f800283a 	ret

0080fdf8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80fdf8:	defffa04 	addi	sp,sp,-24
  80fdfc:	dfc00515 	stw	ra,20(sp)
  80fe00:	df000415 	stw	fp,16(sp)
  80fe04:	df000404 	addi	fp,sp,16
  80fe08:	e13ffd15 	stw	r4,-12(fp)
  80fe0c:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80fe10:	e0bffd17 	ldw	r2,-12(fp)
  80fe14:	10000326 	beq	r2,zero,80fe24 <alt_dev_llist_insert+0x2c>
  80fe18:	e0bffd17 	ldw	r2,-12(fp)
  80fe1c:	10800217 	ldw	r2,8(r2)
  80fe20:	1000061e 	bne	r2,zero,80fe3c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80fe24:	080fdbc0 	call	80fdbc <alt_get_errno>
  80fe28:	1007883a 	mov	r3,r2
  80fe2c:	00800584 	movi	r2,22
  80fe30:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80fe34:	00bffa84 	movi	r2,-22
  80fe38:	00001406 	br	80fe8c <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80fe3c:	e0bffd17 	ldw	r2,-12(fp)
  80fe40:	e0fffc17 	ldw	r3,-16(fp)
  80fe44:	e0ffff15 	stw	r3,-4(fp)
  80fe48:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  80fe4c:	e0bffe17 	ldw	r2,-8(fp)
  80fe50:	e0ffff17 	ldw	r3,-4(fp)
  80fe54:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fe58:	e0bfff17 	ldw	r2,-4(fp)
  80fe5c:	10c00017 	ldw	r3,0(r2)
  80fe60:	e0bffe17 	ldw	r2,-8(fp)
  80fe64:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80fe68:	e0bfff17 	ldw	r2,-4(fp)
  80fe6c:	10800017 	ldw	r2,0(r2)
  80fe70:	e0fffe17 	ldw	r3,-8(fp)
  80fe74:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fe78:	e0bfff17 	ldw	r2,-4(fp)
  80fe7c:	e0fffe17 	ldw	r3,-8(fp)
  80fe80:	10c00015 	stw	r3,0(r2)
}
  80fe84:	0001883a 	nop

  return 0;  
  80fe88:	0005883a 	mov	r2,zero
}
  80fe8c:	e037883a 	mov	sp,fp
  80fe90:	dfc00117 	ldw	ra,4(sp)
  80fe94:	df000017 	ldw	fp,0(sp)
  80fe98:	dec00204 	addi	sp,sp,8
  80fe9c:	f800283a 	ret

0080fea0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80fea0:	defffd04 	addi	sp,sp,-12
  80fea4:	dfc00215 	stw	ra,8(sp)
  80fea8:	df000115 	stw	fp,4(sp)
  80feac:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80feb0:	00802074 	movhi	r2,129
  80feb4:	10836c04 	addi	r2,r2,3504
  80feb8:	e0bfff15 	stw	r2,-4(fp)
  80febc:	00000606 	br	80fed8 <_do_ctors+0x38>
        (*ctor) (); 
  80fec0:	e0bfff17 	ldw	r2,-4(fp)
  80fec4:	10800017 	ldw	r2,0(r2)
  80fec8:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80fecc:	e0bfff17 	ldw	r2,-4(fp)
  80fed0:	10bfff04 	addi	r2,r2,-4
  80fed4:	e0bfff15 	stw	r2,-4(fp)
  80fed8:	e0ffff17 	ldw	r3,-4(fp)
  80fedc:	00802074 	movhi	r2,129
  80fee0:	10836d04 	addi	r2,r2,3508
  80fee4:	18bff62e 	bgeu	r3,r2,80fec0 <_do_ctors+0x20>
}
  80fee8:	0001883a 	nop
  80feec:	0001883a 	nop
  80fef0:	e037883a 	mov	sp,fp
  80fef4:	dfc00117 	ldw	ra,4(sp)
  80fef8:	df000017 	ldw	fp,0(sp)
  80fefc:	dec00204 	addi	sp,sp,8
  80ff00:	f800283a 	ret

0080ff04 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80ff04:	defffd04 	addi	sp,sp,-12
  80ff08:	dfc00215 	stw	ra,8(sp)
  80ff0c:	df000115 	stw	fp,4(sp)
  80ff10:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ff14:	00802074 	movhi	r2,129
  80ff18:	10836c04 	addi	r2,r2,3504
  80ff1c:	e0bfff15 	stw	r2,-4(fp)
  80ff20:	00000606 	br	80ff3c <_do_dtors+0x38>
        (*dtor) (); 
  80ff24:	e0bfff17 	ldw	r2,-4(fp)
  80ff28:	10800017 	ldw	r2,0(r2)
  80ff2c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ff30:	e0bfff17 	ldw	r2,-4(fp)
  80ff34:	10bfff04 	addi	r2,r2,-4
  80ff38:	e0bfff15 	stw	r2,-4(fp)
  80ff3c:	e0ffff17 	ldw	r3,-4(fp)
  80ff40:	00802074 	movhi	r2,129
  80ff44:	10836d04 	addi	r2,r2,3508
  80ff48:	18bff62e 	bgeu	r3,r2,80ff24 <_do_dtors+0x20>
}
  80ff4c:	0001883a 	nop
  80ff50:	0001883a 	nop
  80ff54:	e037883a 	mov	sp,fp
  80ff58:	dfc00117 	ldw	ra,4(sp)
  80ff5c:	df000017 	ldw	fp,0(sp)
  80ff60:	dec00204 	addi	sp,sp,8
  80ff64:	f800283a 	ret

0080ff68 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80ff68:	defffe04 	addi	sp,sp,-8
  80ff6c:	dfc00115 	stw	ra,4(sp)
  80ff70:	df000015 	stw	fp,0(sp)
  80ff74:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ff78:	01420004 	movi	r5,2048
  80ff7c:	0009883a 	mov	r4,zero
  80ff80:	0810a1c0 	call	810a1c <alt_icache_flush>
#endif
}
  80ff84:	0001883a 	nop
  80ff88:	e037883a 	mov	sp,fp
  80ff8c:	dfc00117 	ldw	ra,4(sp)
  80ff90:	df000017 	ldw	fp,0(sp)
  80ff94:	dec00204 	addi	sp,sp,8
  80ff98:	f800283a 	ret

0080ff9c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ff9c:	defff904 	addi	sp,sp,-28
  80ffa0:	dfc00615 	stw	ra,24(sp)
  80ffa4:	df000515 	stw	fp,20(sp)
  80ffa8:	df000504 	addi	fp,sp,20
  80ffac:	e13fff15 	stw	r4,-4(fp)
  80ffb0:	e17ffe15 	stw	r5,-8(fp)
  80ffb4:	e1bffd15 	stw	r6,-12(fp)
  80ffb8:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80ffbc:	e0800217 	ldw	r2,8(fp)
  80ffc0:	d8800015 	stw	r2,0(sp)
  80ffc4:	e1fffc17 	ldw	r7,-16(fp)
  80ffc8:	e1bffd17 	ldw	r6,-12(fp)
  80ffcc:	e17ffe17 	ldw	r5,-8(fp)
  80ffd0:	e13fff17 	ldw	r4,-4(fp)
  80ffd4:	081014c0 	call	81014c <alt_iic_isr_register>
}  
  80ffd8:	e037883a 	mov	sp,fp
  80ffdc:	dfc00117 	ldw	ra,4(sp)
  80ffe0:	df000017 	ldw	fp,0(sp)
  80ffe4:	dec00204 	addi	sp,sp,8
  80ffe8:	f800283a 	ret

0080ffec <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80ffec:	defff904 	addi	sp,sp,-28
  80fff0:	df000615 	stw	fp,24(sp)
  80fff4:	df000604 	addi	fp,sp,24
  80fff8:	e13ffb15 	stw	r4,-20(fp)
  80fffc:	e17ffa15 	stw	r5,-24(fp)
  810000:	e0bffa17 	ldw	r2,-24(fp)
  810004:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  810008:	0005303a 	rdctl	r2,status
  81000c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810010:	e0fffe17 	ldw	r3,-8(fp)
  810014:	00bfff84 	movi	r2,-2
  810018:	1884703a 	and	r2,r3,r2
  81001c:	1001703a 	wrctl	status,r2
  return context;
  810020:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  810024:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  810028:	00c00044 	movi	r3,1
  81002c:	e0bfff17 	ldw	r2,-4(fp)
  810030:	1884983a 	sll	r2,r3,r2
  810034:	1007883a 	mov	r3,r2
  810038:	d0a70c17 	ldw	r2,-25552(gp)
  81003c:	1884b03a 	or	r2,r3,r2
  810040:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  810044:	d0a70c17 	ldw	r2,-25552(gp)
  810048:	100170fa 	wrctl	ienable,r2
  81004c:	e0bffd17 	ldw	r2,-12(fp)
  810050:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  810054:	e0bffc17 	ldw	r2,-16(fp)
  810058:	1001703a 	wrctl	status,r2
}
  81005c:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  810060:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  810064:	e037883a 	mov	sp,fp
  810068:	df000017 	ldw	fp,0(sp)
  81006c:	dec00104 	addi	sp,sp,4
  810070:	f800283a 	ret

00810074 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  810074:	defff904 	addi	sp,sp,-28
  810078:	df000615 	stw	fp,24(sp)
  81007c:	df000604 	addi	fp,sp,24
  810080:	e13ffb15 	stw	r4,-20(fp)
  810084:	e17ffa15 	stw	r5,-24(fp)
  810088:	e0bffa17 	ldw	r2,-24(fp)
  81008c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  810090:	0005303a 	rdctl	r2,status
  810094:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810098:	e0fffe17 	ldw	r3,-8(fp)
  81009c:	00bfff84 	movi	r2,-2
  8100a0:	1884703a 	and	r2,r3,r2
  8100a4:	1001703a 	wrctl	status,r2
  return context;
  8100a8:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
  8100ac:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
  8100b0:	00c00044 	movi	r3,1
  8100b4:	e0bfff17 	ldw	r2,-4(fp)
  8100b8:	1884983a 	sll	r2,r3,r2
  8100bc:	0084303a 	nor	r2,zero,r2
  8100c0:	1007883a 	mov	r3,r2
  8100c4:	d0a70c17 	ldw	r2,-25552(gp)
  8100c8:	1884703a 	and	r2,r3,r2
  8100cc:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8100d0:	d0a70c17 	ldw	r2,-25552(gp)
  8100d4:	100170fa 	wrctl	ienable,r2
  8100d8:	e0bffd17 	ldw	r2,-12(fp)
  8100dc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  8100e0:	e0bffc17 	ldw	r2,-16(fp)
  8100e4:	1001703a 	wrctl	status,r2
}
  8100e8:	0001883a 	nop
  return 0;
  8100ec:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  8100f0:	e037883a 	mov	sp,fp
  8100f4:	df000017 	ldw	fp,0(sp)
  8100f8:	dec00104 	addi	sp,sp,4
  8100fc:	f800283a 	ret

00810100 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  810100:	defffc04 	addi	sp,sp,-16
  810104:	df000315 	stw	fp,12(sp)
  810108:	df000304 	addi	fp,sp,12
  81010c:	e13ffe15 	stw	r4,-8(fp)
  810110:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  810114:	000530fa 	rdctl	r2,ienable
  810118:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  81011c:	00c00044 	movi	r3,1
  810120:	e0bffd17 	ldw	r2,-12(fp)
  810124:	1884983a 	sll	r2,r3,r2
  810128:	1007883a 	mov	r3,r2
  81012c:	e0bfff17 	ldw	r2,-4(fp)
  810130:	1884703a 	and	r2,r3,r2
  810134:	1004c03a 	cmpne	r2,r2,zero
  810138:	10803fcc 	andi	r2,r2,255
}
  81013c:	e037883a 	mov	sp,fp
  810140:	df000017 	ldw	fp,0(sp)
  810144:	dec00104 	addi	sp,sp,4
  810148:	f800283a 	ret

0081014c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  81014c:	defff504 	addi	sp,sp,-44
  810150:	dfc00a15 	stw	ra,40(sp)
  810154:	df000915 	stw	fp,36(sp)
  810158:	df000904 	addi	fp,sp,36
  81015c:	e13ffa15 	stw	r4,-24(fp)
  810160:	e17ff915 	stw	r5,-28(fp)
  810164:	e1bff815 	stw	r6,-32(fp)
  810168:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
  81016c:	00bffa84 	movi	r2,-22
  810170:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  810174:	e0bff917 	ldw	r2,-28(fp)
  810178:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  81017c:	e0bffe17 	ldw	r2,-8(fp)
  810180:	10800808 	cmpgei	r2,r2,32
  810184:	1000251e 	bne	r2,zero,81021c <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
  810188:	0005303a 	rdctl	r2,status
  81018c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810190:	e0fffc17 	ldw	r3,-16(fp)
  810194:	00bfff84 	movi	r2,-2
  810198:	1884703a 	and	r2,r3,r2
  81019c:	1001703a 	wrctl	status,r2
  return context;
  8101a0:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  8101a4:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
  8101a8:	e0bffe17 	ldw	r2,-8(fp)
  8101ac:	100890fa 	slli	r4,r2,3
  8101b0:	e0fff817 	ldw	r3,-32(fp)
  8101b4:	00802074 	movhi	r2,129
  8101b8:	2085883a 	add	r2,r4,r2
  8101bc:	10d30e15 	stw	r3,19512(r2)
    alt_irq[id].context = isr_context;
  8101c0:	e0bffe17 	ldw	r2,-8(fp)
  8101c4:	100890fa 	slli	r4,r2,3
  8101c8:	e0fff717 	ldw	r3,-36(fp)
  8101cc:	00802074 	movhi	r2,129
  8101d0:	2085883a 	add	r2,r4,r2
  8101d4:	10d30f15 	stw	r3,19516(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  8101d8:	e0bff817 	ldw	r2,-32(fp)
  8101dc:	10000526 	beq	r2,zero,8101f4 <alt_iic_isr_register+0xa8>
  8101e0:	e0bffe17 	ldw	r2,-8(fp)
  8101e4:	100b883a 	mov	r5,r2
  8101e8:	e13ffa17 	ldw	r4,-24(fp)
  8101ec:	080ffec0 	call	80ffec <alt_ic_irq_enable>
  8101f0:	00000406 	br	810204 <alt_iic_isr_register+0xb8>
  8101f4:	e0bffe17 	ldw	r2,-8(fp)
  8101f8:	100b883a 	mov	r5,r2
  8101fc:	e13ffa17 	ldw	r4,-24(fp)
  810200:	08100740 	call	810074 <alt_ic_irq_disable>
  810204:	e0bfff15 	stw	r2,-4(fp)
  810208:	e0bffd17 	ldw	r2,-12(fp)
  81020c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  810210:	e0bffb17 	ldw	r2,-20(fp)
  810214:	1001703a 	wrctl	status,r2
}
  810218:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
  81021c:	e0bfff17 	ldw	r2,-4(fp)
}
  810220:	e037883a 	mov	sp,fp
  810224:	dfc00117 	ldw	ra,4(sp)
  810228:	df000017 	ldw	fp,0(sp)
  81022c:	dec00204 	addi	sp,sp,8
  810230:	f800283a 	ret

00810234 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  810234:	defff904 	addi	sp,sp,-28
  810238:	dfc00615 	stw	ra,24(sp)
  81023c:	df000515 	stw	fp,20(sp)
  810240:	df000504 	addi	fp,sp,20
  810244:	e13ffe15 	stw	r4,-8(fp)
  810248:	e17ffd15 	stw	r5,-12(fp)
  81024c:	e1bffc15 	stw	r6,-16(fp)
  810250:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  810254:	e1bffb17 	ldw	r6,-20(fp)
  810258:	e17ffc17 	ldw	r5,-16(fp)
  81025c:	e13ffd17 	ldw	r4,-12(fp)
  810260:	081049c0 	call	81049c <open>
  810264:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  810268:	e0bfff17 	ldw	r2,-4(fp)
  81026c:	10002016 	blt	r2,zero,8102f0 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
  810270:	e0ffff17 	ldw	r3,-4(fp)
  810274:	1805883a 	mov	r2,r3
  810278:	1085883a 	add	r2,r2,r2
  81027c:	10c5883a 	add	r2,r2,r3
  810280:	100490ba 	slli	r2,r2,2
  810284:	00c02074 	movhi	r3,129
  810288:	10c7883a 	add	r3,r2,r3
  81028c:	18c77c17 	ldw	r3,7664(r3)
  810290:	e0bffe17 	ldw	r2,-8(fp)
  810294:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  810298:	e0ffff17 	ldw	r3,-4(fp)
  81029c:	1805883a 	mov	r2,r3
  8102a0:	1085883a 	add	r2,r2,r2
  8102a4:	10c5883a 	add	r2,r2,r3
  8102a8:	100490ba 	slli	r2,r2,2
  8102ac:	00c02074 	movhi	r3,129
  8102b0:	10c7883a 	add	r3,r2,r3
  8102b4:	18c77d17 	ldw	r3,7668(r3)
  8102b8:	e0bffe17 	ldw	r2,-8(fp)
  8102bc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  8102c0:	e0ffff17 	ldw	r3,-4(fp)
  8102c4:	1805883a 	mov	r2,r3
  8102c8:	1085883a 	add	r2,r2,r2
  8102cc:	10c5883a 	add	r2,r2,r3
  8102d0:	100490ba 	slli	r2,r2,2
  8102d4:	00c02074 	movhi	r3,129
  8102d8:	10c7883a 	add	r3,r2,r3
  8102dc:	18c77e17 	ldw	r3,7672(r3)
  8102e0:	e0bffe17 	ldw	r2,-8(fp)
  8102e4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  8102e8:	e13fff17 	ldw	r4,-4(fp)
  8102ec:	080ecd80 	call	80ecd8 <alt_release_fd>
  }
} 
  8102f0:	0001883a 	nop
  8102f4:	e037883a 	mov	sp,fp
  8102f8:	dfc00117 	ldw	ra,4(sp)
  8102fc:	df000017 	ldw	fp,0(sp)
  810300:	dec00204 	addi	sp,sp,8
  810304:	f800283a 	ret

00810308 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  810308:	defffb04 	addi	sp,sp,-20
  81030c:	dfc00415 	stw	ra,16(sp)
  810310:	df000315 	stw	fp,12(sp)
  810314:	df000304 	addi	fp,sp,12
  810318:	e13fff15 	stw	r4,-4(fp)
  81031c:	e17ffe15 	stw	r5,-8(fp)
  810320:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  810324:	01c07fc4 	movi	r7,511
  810328:	01800044 	movi	r6,1
  81032c:	e17fff17 	ldw	r5,-4(fp)
  810330:	01002074 	movhi	r4,129
  810334:	21077f04 	addi	r4,r4,7676
  810338:	08102340 	call	810234 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  81033c:	01c07fc4 	movi	r7,511
  810340:	000d883a 	mov	r6,zero
  810344:	e17ffe17 	ldw	r5,-8(fp)
  810348:	01002074 	movhi	r4,129
  81034c:	21077c04 	addi	r4,r4,7664
  810350:	08102340 	call	810234 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  810354:	01c07fc4 	movi	r7,511
  810358:	01800044 	movi	r6,1
  81035c:	e17ffd17 	ldw	r5,-12(fp)
  810360:	01002074 	movhi	r4,129
  810364:	21078204 	addi	r4,r4,7688
  810368:	08102340 	call	810234 <alt_open_fd>
}  
  81036c:	0001883a 	nop
  810370:	e037883a 	mov	sp,fp
  810374:	dfc00117 	ldw	ra,4(sp)
  810378:	df000017 	ldw	fp,0(sp)
  81037c:	dec00204 	addi	sp,sp,8
  810380:	f800283a 	ret

00810384 <alt_get_errno>:
{
  810384:	defffe04 	addi	sp,sp,-8
  810388:	dfc00115 	stw	ra,4(sp)
  81038c:	df000015 	stw	fp,0(sp)
  810390:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810394:	d0a00917 	ldw	r2,-32732(gp)
  810398:	10000326 	beq	r2,zero,8103a8 <alt_get_errno+0x24>
  81039c:	d0a00917 	ldw	r2,-32732(gp)
  8103a0:	103ee83a 	callr	r2
  8103a4:	00000106 	br	8103ac <alt_get_errno+0x28>
  8103a8:	d0a70704 	addi	r2,gp,-25572
}
  8103ac:	e037883a 	mov	sp,fp
  8103b0:	dfc00117 	ldw	ra,4(sp)
  8103b4:	df000017 	ldw	fp,0(sp)
  8103b8:	dec00204 	addi	sp,sp,8
  8103bc:	f800283a 	ret

008103c0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  8103c0:	defffd04 	addi	sp,sp,-12
  8103c4:	df000215 	stw	fp,8(sp)
  8103c8:	df000204 	addi	fp,sp,8
  8103cc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  8103d0:	e0bffe17 	ldw	r2,-8(fp)
  8103d4:	10800217 	ldw	r2,8(r2)
  8103d8:	10d00034 	orhi	r3,r2,16384
  8103dc:	e0bffe17 	ldw	r2,-8(fp)
  8103e0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8103e4:	e03fff15 	stw	zero,-4(fp)
  8103e8:	00002306 	br	810478 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8103ec:	e0ffff17 	ldw	r3,-4(fp)
  8103f0:	1805883a 	mov	r2,r3
  8103f4:	1085883a 	add	r2,r2,r2
  8103f8:	10c5883a 	add	r2,r2,r3
  8103fc:	100490ba 	slli	r2,r2,2
  810400:	00c02074 	movhi	r3,129
  810404:	10c7883a 	add	r3,r2,r3
  810408:	18c77c17 	ldw	r3,7664(r3)
  81040c:	e0bffe17 	ldw	r2,-8(fp)
  810410:	10800017 	ldw	r2,0(r2)
  810414:	1880151e 	bne	r3,r2,81046c <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  810418:	e0ffff17 	ldw	r3,-4(fp)
  81041c:	1805883a 	mov	r2,r3
  810420:	1085883a 	add	r2,r2,r2
  810424:	10c5883a 	add	r2,r2,r3
  810428:	100490ba 	slli	r2,r2,2
  81042c:	00c02074 	movhi	r3,129
  810430:	10c7883a 	add	r3,r2,r3
  810434:	18877e17 	ldw	r2,7672(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
  810438:	10000c0e 	bge	r2,zero,81046c <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
  81043c:	e0ffff17 	ldw	r3,-4(fp)
  810440:	1805883a 	mov	r2,r3
  810444:	1085883a 	add	r2,r2,r2
  810448:	10c5883a 	add	r2,r2,r3
  81044c:	100490ba 	slli	r2,r2,2
  810450:	00c02074 	movhi	r3,129
  810454:	18c77c04 	addi	r3,r3,7664
  810458:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  81045c:	e0fffe17 	ldw	r3,-8(fp)
  810460:	18800226 	beq	r3,r2,81046c <alt_file_locked+0xac>
    {
      return -EACCES;
  810464:	00bffcc4 	movi	r2,-13
  810468:	00000806 	br	81048c <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
  81046c:	e0bfff17 	ldw	r2,-4(fp)
  810470:	10800044 	addi	r2,r2,1
  810474:	e0bfff15 	stw	r2,-4(fp)
  810478:	d0a00817 	ldw	r2,-32736(gp)
  81047c:	1007883a 	mov	r3,r2
  810480:	e0bfff17 	ldw	r2,-4(fp)
  810484:	18bfd92e 	bgeu	r3,r2,8103ec <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  810488:	0005883a 	mov	r2,zero
}
  81048c:	e037883a 	mov	sp,fp
  810490:	df000017 	ldw	fp,0(sp)
  810494:	dec00104 	addi	sp,sp,4
  810498:	f800283a 	ret

0081049c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  81049c:	defff604 	addi	sp,sp,-40
  8104a0:	dfc00915 	stw	ra,36(sp)
  8104a4:	df000815 	stw	fp,32(sp)
  8104a8:	df000804 	addi	fp,sp,32
  8104ac:	e13ffa15 	stw	r4,-24(fp)
  8104b0:	e17ff915 	stw	r5,-28(fp)
  8104b4:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  8104b8:	00bfffc4 	movi	r2,-1
  8104bc:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  8104c0:	00bffb44 	movi	r2,-19
  8104c4:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  8104c8:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8104cc:	d1600604 	addi	r5,gp,-32744
  8104d0:	e13ffa17 	ldw	r4,-24(fp)
  8104d4:	08107cc0 	call	8107cc <alt_find_dev>
  8104d8:	e0bfff15 	stw	r2,-4(fp)
  8104dc:	e0bfff17 	ldw	r2,-4(fp)
  8104e0:	1000051e 	bne	r2,zero,8104f8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  8104e4:	e13ffa17 	ldw	r4,-24(fp)
  8104e8:	081085c0 	call	81085c <alt_find_file>
  8104ec:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  8104f0:	00800044 	movi	r2,1
  8104f4:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  8104f8:	e0bfff17 	ldw	r2,-4(fp)
  8104fc:	10002c26 	beq	r2,zero,8105b0 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  810500:	e13fff17 	ldw	r4,-4(fp)
  810504:	08109640 	call	810964 <alt_get_fd>
  810508:	e0bffe15 	stw	r2,-8(fp)
  81050c:	e0bffe17 	ldw	r2,-8(fp)
  810510:	1000030e 	bge	r2,zero,810520 <open+0x84>
    {
      status = index;
  810514:	e0bffe17 	ldw	r2,-8(fp)
  810518:	e0bffd15 	stw	r2,-12(fp)
  81051c:	00002606 	br	8105b8 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  810520:	e0fffe17 	ldw	r3,-8(fp)
  810524:	1805883a 	mov	r2,r3
  810528:	1085883a 	add	r2,r2,r2
  81052c:	10c5883a 	add	r2,r2,r3
  810530:	100490ba 	slli	r2,r2,2
  810534:	00c02074 	movhi	r3,129
  810538:	18c77c04 	addi	r3,r3,7664
  81053c:	10c5883a 	add	r2,r2,r3
  810540:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  810544:	e0fff917 	ldw	r3,-28(fp)
  810548:	00900034 	movhi	r2,16384
  81054c:	10bfffc4 	addi	r2,r2,-1
  810550:	1886703a 	and	r3,r3,r2
  810554:	e0bffb17 	ldw	r2,-20(fp)
  810558:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  81055c:	e0bffc17 	ldw	r2,-16(fp)
  810560:	1000051e 	bne	r2,zero,810578 <open+0xdc>
  810564:	e13ffb17 	ldw	r4,-20(fp)
  810568:	08103c00 	call	8103c0 <alt_file_locked>
  81056c:	e0bffd15 	stw	r2,-12(fp)
  810570:	e0bffd17 	ldw	r2,-12(fp)
  810574:	10001016 	blt	r2,zero,8105b8 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  810578:	e0bfff17 	ldw	r2,-4(fp)
  81057c:	10800317 	ldw	r2,12(r2)
  810580:	10000826 	beq	r2,zero,8105a4 <open+0x108>
  810584:	e0bfff17 	ldw	r2,-4(fp)
  810588:	10800317 	ldw	r2,12(r2)
  81058c:	e1fff817 	ldw	r7,-32(fp)
  810590:	e1bff917 	ldw	r6,-28(fp)
  810594:	e17ffa17 	ldw	r5,-24(fp)
  810598:	e13ffb17 	ldw	r4,-20(fp)
  81059c:	103ee83a 	callr	r2
  8105a0:	00000106 	br	8105a8 <open+0x10c>
  8105a4:	0005883a 	mov	r2,zero
  8105a8:	e0bffd15 	stw	r2,-12(fp)
  8105ac:	00000206 	br	8105b8 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  8105b0:	00bffb44 	movi	r2,-19
  8105b4:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  8105b8:	e0bffd17 	ldw	r2,-12(fp)
  8105bc:	1000090e 	bge	r2,zero,8105e4 <open+0x148>
  {
    alt_release_fd (index);  
  8105c0:	e13ffe17 	ldw	r4,-8(fp)
  8105c4:	080ecd80 	call	80ecd8 <alt_release_fd>
    ALT_ERRNO = -status;
  8105c8:	08103840 	call	810384 <alt_get_errno>
  8105cc:	1007883a 	mov	r3,r2
  8105d0:	e0bffd17 	ldw	r2,-12(fp)
  8105d4:	0085c83a 	sub	r2,zero,r2
  8105d8:	18800015 	stw	r2,0(r3)
    return -1;
  8105dc:	00bfffc4 	movi	r2,-1
  8105e0:	00000106 	br	8105e8 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  8105e4:	e0bffe17 	ldw	r2,-8(fp)
}
  8105e8:	e037883a 	mov	sp,fp
  8105ec:	dfc00117 	ldw	ra,4(sp)
  8105f0:	df000017 	ldw	fp,0(sp)
  8105f4:	dec00204 	addi	sp,sp,8
  8105f8:	f800283a 	ret

008105fc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8105fc:	defffa04 	addi	sp,sp,-24
  810600:	df000515 	stw	fp,20(sp)
  810604:	df000504 	addi	fp,sp,20
  810608:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  81060c:	0005303a 	rdctl	r2,status
  810610:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810614:	e0fffc17 	ldw	r3,-16(fp)
  810618:	00bfff84 	movi	r2,-2
  81061c:	1884703a 	and	r2,r3,r2
  810620:	1001703a 	wrctl	status,r2
  return context;
  810624:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  810628:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  81062c:	e0bffb17 	ldw	r2,-20(fp)
  810630:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  810634:	e0bffd17 	ldw	r2,-12(fp)
  810638:	10800017 	ldw	r2,0(r2)
  81063c:	e0fffd17 	ldw	r3,-12(fp)
  810640:	18c00117 	ldw	r3,4(r3)
  810644:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  810648:	e0bffd17 	ldw	r2,-12(fp)
  81064c:	10800117 	ldw	r2,4(r2)
  810650:	e0fffd17 	ldw	r3,-12(fp)
  810654:	18c00017 	ldw	r3,0(r3)
  810658:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  81065c:	e0bffd17 	ldw	r2,-12(fp)
  810660:	e0fffd17 	ldw	r3,-12(fp)
  810664:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  810668:	e0bffd17 	ldw	r2,-12(fp)
  81066c:	e0fffd17 	ldw	r3,-12(fp)
  810670:	10c00015 	stw	r3,0(r2)
} 
  810674:	0001883a 	nop
  810678:	e0bfff17 	ldw	r2,-4(fp)
  81067c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  810680:	e0bffe17 	ldw	r2,-8(fp)
  810684:	1001703a 	wrctl	status,r2
}
  810688:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  81068c:	0001883a 	nop
  810690:	e037883a 	mov	sp,fp
  810694:	df000017 	ldw	fp,0(sp)
  810698:	dec00104 	addi	sp,sp,4
  81069c:	f800283a 	ret

008106a0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  8106a0:	defffb04 	addi	sp,sp,-20
  8106a4:	dfc00415 	stw	ra,16(sp)
  8106a8:	df000315 	stw	fp,12(sp)
  8106ac:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  8106b0:	d0a00c17 	ldw	r2,-32720(gp)
  8106b4:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  8106b8:	d0a70e17 	ldw	r2,-25544(gp)
  8106bc:	10800044 	addi	r2,r2,1
  8106c0:	d0a70e15 	stw	r2,-25544(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  8106c4:	00002e06 	br	810780 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  8106c8:	e0bfff17 	ldw	r2,-4(fp)
  8106cc:	10800017 	ldw	r2,0(r2)
  8106d0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  8106d4:	e0bfff17 	ldw	r2,-4(fp)
  8106d8:	10800403 	ldbu	r2,16(r2)
  8106dc:	10803fcc 	andi	r2,r2,255
  8106e0:	10000426 	beq	r2,zero,8106f4 <alt_tick+0x54>
  8106e4:	d0a70e17 	ldw	r2,-25544(gp)
  8106e8:	1000021e 	bne	r2,zero,8106f4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  8106ec:	e0bfff17 	ldw	r2,-4(fp)
  8106f0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  8106f4:	e0bfff17 	ldw	r2,-4(fp)
  8106f8:	10800217 	ldw	r2,8(r2)
  8106fc:	d0e70e17 	ldw	r3,-25544(gp)
  810700:	18801d36 	bltu	r3,r2,810778 <alt_tick+0xd8>
  810704:	e0bfff17 	ldw	r2,-4(fp)
  810708:	10800403 	ldbu	r2,16(r2)
  81070c:	10803fcc 	andi	r2,r2,255
  810710:	1000191e 	bne	r2,zero,810778 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  810714:	e0bfff17 	ldw	r2,-4(fp)
  810718:	10800317 	ldw	r2,12(r2)
  81071c:	e0ffff17 	ldw	r3,-4(fp)
  810720:	18c00517 	ldw	r3,20(r3)
  810724:	1809883a 	mov	r4,r3
  810728:	103ee83a 	callr	r2
  81072c:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  810730:	e0bffd17 	ldw	r2,-12(fp)
  810734:	1000031e 	bne	r2,zero,810744 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  810738:	e13fff17 	ldw	r4,-4(fp)
  81073c:	08105fc0 	call	8105fc <alt_alarm_stop>
  810740:	00000d06 	br	810778 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  810744:	e0bfff17 	ldw	r2,-4(fp)
  810748:	10c00217 	ldw	r3,8(r2)
  81074c:	e0bffd17 	ldw	r2,-12(fp)
  810750:	1887883a 	add	r3,r3,r2
  810754:	e0bfff17 	ldw	r2,-4(fp)
  810758:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  81075c:	e0bfff17 	ldw	r2,-4(fp)
  810760:	10c00217 	ldw	r3,8(r2)
  810764:	d0a70e17 	ldw	r2,-25544(gp)
  810768:	1880032e 	bgeu	r3,r2,810778 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  81076c:	e0bfff17 	ldw	r2,-4(fp)
  810770:	00c00044 	movi	r3,1
  810774:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  810778:	e0bffe17 	ldw	r2,-8(fp)
  81077c:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  810780:	e0ffff17 	ldw	r3,-4(fp)
  810784:	d0a00c04 	addi	r2,gp,-32720
  810788:	18bfcf1e 	bne	r3,r2,8106c8 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  81078c:	0001883a 	nop
}
  810790:	0001883a 	nop
  810794:	e037883a 	mov	sp,fp
  810798:	dfc00117 	ldw	ra,4(sp)
  81079c:	df000017 	ldw	fp,0(sp)
  8107a0:	dec00204 	addi	sp,sp,8
  8107a4:	f800283a 	ret

008107a8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  8107a8:	deffff04 	addi	sp,sp,-4
  8107ac:	df000015 	stw	fp,0(sp)
  8107b0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  8107b4:	000170fa 	wrctl	ienable,zero
}
  8107b8:	0001883a 	nop
  8107bc:	e037883a 	mov	sp,fp
  8107c0:	df000017 	ldw	fp,0(sp)
  8107c4:	dec00104 	addi	sp,sp,4
  8107c8:	f800283a 	ret

008107cc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  8107cc:	defffa04 	addi	sp,sp,-24
  8107d0:	dfc00515 	stw	ra,20(sp)
  8107d4:	df000415 	stw	fp,16(sp)
  8107d8:	df000404 	addi	fp,sp,16
  8107dc:	e13ffd15 	stw	r4,-12(fp)
  8107e0:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  8107e4:	e0bffc17 	ldw	r2,-16(fp)
  8107e8:	10800017 	ldw	r2,0(r2)
  8107ec:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  8107f0:	e13ffd17 	ldw	r4,-12(fp)
  8107f4:	080138c0 	call	80138c <strlen>
  8107f8:	10800044 	addi	r2,r2,1
  8107fc:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  810800:	00000d06 	br	810838 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  810804:	e0bfff17 	ldw	r2,-4(fp)
  810808:	10800217 	ldw	r2,8(r2)
  81080c:	e0fffe17 	ldw	r3,-8(fp)
  810810:	180d883a 	mov	r6,r3
  810814:	e17ffd17 	ldw	r5,-12(fp)
  810818:	1009883a 	mov	r4,r2
  81081c:	0810b8c0 	call	810b8c <memcmp>
  810820:	1000021e 	bne	r2,zero,81082c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  810824:	e0bfff17 	ldw	r2,-4(fp)
  810828:	00000706 	br	810848 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  81082c:	e0bfff17 	ldw	r2,-4(fp)
  810830:	10800017 	ldw	r2,0(r2)
  810834:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  810838:	e0ffff17 	ldw	r3,-4(fp)
  81083c:	e0bffc17 	ldw	r2,-16(fp)
  810840:	18bff01e 	bne	r3,r2,810804 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  810844:	0005883a 	mov	r2,zero
}
  810848:	e037883a 	mov	sp,fp
  81084c:	dfc00117 	ldw	ra,4(sp)
  810850:	df000017 	ldw	fp,0(sp)
  810854:	dec00204 	addi	sp,sp,8
  810858:	f800283a 	ret

0081085c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  81085c:	defffb04 	addi	sp,sp,-20
  810860:	dfc00415 	stw	ra,16(sp)
  810864:	df000315 	stw	fp,12(sp)
  810868:	df000304 	addi	fp,sp,12
  81086c:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  810870:	d0a00417 	ldw	r2,-32752(gp)
  810874:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  810878:	00003106 	br	810940 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  81087c:	e0bfff17 	ldw	r2,-4(fp)
  810880:	10800217 	ldw	r2,8(r2)
  810884:	1009883a 	mov	r4,r2
  810888:	080138c0 	call	80138c <strlen>
  81088c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  810890:	e0bfff17 	ldw	r2,-4(fp)
  810894:	10c00217 	ldw	r3,8(r2)
  810898:	e0bffe17 	ldw	r2,-8(fp)
  81089c:	10bfffc4 	addi	r2,r2,-1
  8108a0:	1885883a 	add	r2,r3,r2
  8108a4:	10800003 	ldbu	r2,0(r2)
  8108a8:	10803fcc 	andi	r2,r2,255
  8108ac:	1080201c 	xori	r2,r2,128
  8108b0:	10bfe004 	addi	r2,r2,-128
  8108b4:	10800bd8 	cmpnei	r2,r2,47
  8108b8:	1000031e 	bne	r2,zero,8108c8 <alt_find_file+0x6c>
    {
      len -= 1;
  8108bc:	e0bffe17 	ldw	r2,-8(fp)
  8108c0:	10bfffc4 	addi	r2,r2,-1
  8108c4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  8108c8:	e0bffe17 	ldw	r2,-8(fp)
  8108cc:	e0fffd17 	ldw	r3,-12(fp)
  8108d0:	1885883a 	add	r2,r3,r2
  8108d4:	10800003 	ldbu	r2,0(r2)
  8108d8:	10803fcc 	andi	r2,r2,255
  8108dc:	1080201c 	xori	r2,r2,128
  8108e0:	10bfe004 	addi	r2,r2,-128
  8108e4:	10800be0 	cmpeqi	r2,r2,47
  8108e8:	1000081e 	bne	r2,zero,81090c <alt_find_file+0xb0>
  8108ec:	e0bffe17 	ldw	r2,-8(fp)
  8108f0:	e0fffd17 	ldw	r3,-12(fp)
  8108f4:	1885883a 	add	r2,r3,r2
  8108f8:	10800003 	ldbu	r2,0(r2)
  8108fc:	10803fcc 	andi	r2,r2,255
  810900:	1080201c 	xori	r2,r2,128
  810904:	10bfe004 	addi	r2,r2,-128
  810908:	10000a1e 	bne	r2,zero,810934 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  81090c:	e0bfff17 	ldw	r2,-4(fp)
  810910:	10800217 	ldw	r2,8(r2)
  810914:	e0fffe17 	ldw	r3,-8(fp)
  810918:	180d883a 	mov	r6,r3
  81091c:	e17ffd17 	ldw	r5,-12(fp)
  810920:	1009883a 	mov	r4,r2
  810924:	0810b8c0 	call	810b8c <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  810928:	1000021e 	bne	r2,zero,810934 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  81092c:	e0bfff17 	ldw	r2,-4(fp)
  810930:	00000706 	br	810950 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  810934:	e0bfff17 	ldw	r2,-4(fp)
  810938:	10800017 	ldw	r2,0(r2)
  81093c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  810940:	e0ffff17 	ldw	r3,-4(fp)
  810944:	d0a00404 	addi	r2,gp,-32752
  810948:	18bfcc1e 	bne	r3,r2,81087c <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  81094c:	0005883a 	mov	r2,zero
}
  810950:	e037883a 	mov	sp,fp
  810954:	dfc00117 	ldw	ra,4(sp)
  810958:	df000017 	ldw	fp,0(sp)
  81095c:	dec00204 	addi	sp,sp,8
  810960:	f800283a 	ret

00810964 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  810964:	defffc04 	addi	sp,sp,-16
  810968:	df000315 	stw	fp,12(sp)
  81096c:	df000304 	addi	fp,sp,12
  810970:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  810974:	00bffa04 	movi	r2,-24
  810978:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81097c:	e03fff15 	stw	zero,-4(fp)
  810980:	00001d06 	br	8109f8 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  810984:	e0ffff17 	ldw	r3,-4(fp)
  810988:	1805883a 	mov	r2,r3
  81098c:	1085883a 	add	r2,r2,r2
  810990:	10c5883a 	add	r2,r2,r3
  810994:	100490ba 	slli	r2,r2,2
  810998:	00c02074 	movhi	r3,129
  81099c:	10c7883a 	add	r3,r2,r3
  8109a0:	18877c17 	ldw	r2,7664(r3)
  8109a4:	1000111e 	bne	r2,zero,8109ec <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  8109a8:	e0ffff17 	ldw	r3,-4(fp)
  8109ac:	1805883a 	mov	r2,r3
  8109b0:	1085883a 	add	r2,r2,r2
  8109b4:	10c5883a 	add	r2,r2,r3
  8109b8:	100490ba 	slli	r2,r2,2
  8109bc:	e13ffd17 	ldw	r4,-12(fp)
  8109c0:	00c02074 	movhi	r3,129
  8109c4:	10c7883a 	add	r3,r2,r3
  8109c8:	19077c15 	stw	r4,7664(r3)
      if (i > alt_max_fd)
  8109cc:	d0e00817 	ldw	r3,-32736(gp)
  8109d0:	e0bfff17 	ldw	r2,-4(fp)
  8109d4:	1880020e 	bge	r3,r2,8109e0 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  8109d8:	e0bfff17 	ldw	r2,-4(fp)
  8109dc:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
  8109e0:	e0bfff17 	ldw	r2,-4(fp)
  8109e4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  8109e8:	00000706 	br	810a08 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
  8109ec:	e0bfff17 	ldw	r2,-4(fp)
  8109f0:	10800044 	addi	r2,r2,1
  8109f4:	e0bfff15 	stw	r2,-4(fp)
  8109f8:	e0bfff17 	ldw	r2,-4(fp)
  8109fc:	10800810 	cmplti	r2,r2,32
  810a00:	103fe01e 	bne	r2,zero,810984 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  810a04:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  810a08:	e0bffe17 	ldw	r2,-8(fp)
}
  810a0c:	e037883a 	mov	sp,fp
  810a10:	df000017 	ldw	fp,0(sp)
  810a14:	dec00104 	addi	sp,sp,4
  810a18:	f800283a 	ret

00810a1c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  810a1c:	defffb04 	addi	sp,sp,-20
  810a20:	df000415 	stw	fp,16(sp)
  810a24:	df000404 	addi	fp,sp,16
  810a28:	e13ffd15 	stw	r4,-12(fp)
  810a2c:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  810a30:	e0bffc17 	ldw	r2,-16(fp)
  810a34:	10820070 	cmpltui	r2,r2,2049
  810a38:	1000021e 	bne	r2,zero,810a44 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  810a3c:	00820004 	movi	r2,2048
  810a40:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
  810a44:	e0fffd17 	ldw	r3,-12(fp)
  810a48:	e0bffc17 	ldw	r2,-16(fp)
  810a4c:	1885883a 	add	r2,r3,r2
  810a50:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810a54:	e0bffd17 	ldw	r2,-12(fp)
  810a58:	e0bfff15 	stw	r2,-4(fp)
  810a5c:	00000506 	br	810a74 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  810a60:	e0bfff17 	ldw	r2,-4(fp)
  810a64:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810a68:	e0bfff17 	ldw	r2,-4(fp)
  810a6c:	10800804 	addi	r2,r2,32
  810a70:	e0bfff15 	stw	r2,-4(fp)
  810a74:	e0ffff17 	ldw	r3,-4(fp)
  810a78:	e0bffe17 	ldw	r2,-8(fp)
  810a7c:	18bff836 	bltu	r3,r2,810a60 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  810a80:	e0bffd17 	ldw	r2,-12(fp)
  810a84:	108007cc 	andi	r2,r2,31
  810a88:	10000226 	beq	r2,zero,810a94 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  810a8c:	e0bfff17 	ldw	r2,-4(fp)
  810a90:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  810a94:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  810a98:	0001883a 	nop
  810a9c:	e037883a 	mov	sp,fp
  810aa0:	df000017 	ldw	fp,0(sp)
  810aa4:	dec00104 	addi	sp,sp,4
  810aa8:	f800283a 	ret

00810aac <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  810aac:	defffe04 	addi	sp,sp,-8
  810ab0:	df000115 	stw	fp,4(sp)
  810ab4:	df000104 	addi	fp,sp,4
  810ab8:	e13fff15 	stw	r4,-4(fp)
  810abc:	e0bfff17 	ldw	r2,-4(fp)
  810ac0:	10bffe84 	addi	r2,r2,-6
  810ac4:	10c00428 	cmpgeui	r3,r2,16
  810ac8:	1800191e 	bne	r3,zero,810b30 <alt_exception_cause_generated_bad_addr+0x84>
  810acc:	100690ba 	slli	r3,r2,2
  810ad0:	00802074 	movhi	r2,129
  810ad4:	1885883a 	add	r2,r3,r2
  810ad8:	1082b817 	ldw	r2,2784(r2)
  810adc:	1000683a 	jmp	r2
  810ae0:	00810b20 	cmpeqi	r2,zero,1068
  810ae4:	00810b20 	cmpeqi	r2,zero,1068
  810ae8:	00810b30 	cmpltui	r2,zero,1068
  810aec:	00810b30 	cmpltui	r2,zero,1068
  810af0:	00810b30 	cmpltui	r2,zero,1068
  810af4:	00810b20 	cmpeqi	r2,zero,1068
  810af8:	00810b28 	cmpgeui	r2,zero,1068
  810afc:	00810b30 	cmpltui	r2,zero,1068
  810b00:	00810b20 	cmpeqi	r2,zero,1068
  810b04:	00810b20 	cmpeqi	r2,zero,1068
  810b08:	00810b30 	cmpltui	r2,zero,1068
  810b0c:	00810b20 	cmpeqi	r2,zero,1068
  810b10:	00810b28 	cmpgeui	r2,zero,1068
  810b14:	00810b30 	cmpltui	r2,zero,1068
  810b18:	00810b30 	cmpltui	r2,zero,1068
  810b1c:	00810b20 	cmpeqi	r2,zero,1068
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  810b20:	00800044 	movi	r2,1
  810b24:	00000306 	br	810b34 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  810b28:	0005883a 	mov	r2,zero
  810b2c:	00000106 	br	810b34 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  810b30:	0005883a 	mov	r2,zero
  }
}
  810b34:	e037883a 	mov	sp,fp
  810b38:	df000017 	ldw	fp,0(sp)
  810b3c:	dec00104 	addi	sp,sp,4
  810b40:	f800283a 	ret

00810b44 <atexit>:
  810b44:	200b883a 	mov	r5,r4
  810b48:	000f883a 	mov	r7,zero
  810b4c:	000d883a 	mov	r6,zero
  810b50:	0009883a 	mov	r4,zero
  810b54:	0810c041 	jmpi	810c04 <__register_exitproc>

00810b58 <exit>:
  810b58:	defffe04 	addi	sp,sp,-8
  810b5c:	000b883a 	mov	r5,zero
  810b60:	dc000015 	stw	r16,0(sp)
  810b64:	dfc00115 	stw	ra,4(sp)
  810b68:	2021883a 	mov	r16,r4
  810b6c:	0810c940 	call	810c94 <__call_exitprocs>
  810b70:	00802074 	movhi	r2,129
  810b74:	110bf417 	ldw	r4,12240(r2)
  810b78:	20800f17 	ldw	r2,60(r4)
  810b7c:	10000126 	beq	r2,zero,810b84 <exit+0x2c>
  810b80:	103ee83a 	callr	r2
  810b84:	8009883a 	mov	r4,r16
  810b88:	080e5240 	call	80e524 <_exit>

00810b8c <memcmp>:
  810b8c:	30800130 	cmpltui	r2,r6,4
  810b90:	10000b1e 	bne	r2,zero,810bc0 <memcmp+0x34>
  810b94:	2144b03a 	or	r2,r4,r5
  810b98:	108000cc 	andi	r2,r2,3
  810b9c:	1000171e 	bne	r2,zero,810bfc <memcmp+0x70>
  810ba0:	20c00017 	ldw	r3,0(r4)
  810ba4:	28800017 	ldw	r2,0(r5)
  810ba8:	1880141e 	bne	r3,r2,810bfc <memcmp+0x70>
  810bac:	31bfff04 	addi	r6,r6,-4
  810bb0:	30800128 	cmpgeui	r2,r6,4
  810bb4:	21000104 	addi	r4,r4,4
  810bb8:	29400104 	addi	r5,r5,4
  810bbc:	103ff81e 	bne	r2,zero,810ba0 <memcmp+0x14>
  810bc0:	30bfffc4 	addi	r2,r6,-1
  810bc4:	30000b26 	beq	r6,zero,810bf4 <memcmp+0x68>
  810bc8:	11800044 	addi	r6,r2,1
  810bcc:	218d883a 	add	r6,r4,r6
  810bd0:	00000106 	br	810bd8 <memcmp+0x4c>
  810bd4:	21800726 	beq	r4,r6,810bf4 <memcmp+0x68>
  810bd8:	20800003 	ldbu	r2,0(r4)
  810bdc:	28c00003 	ldbu	r3,0(r5)
  810be0:	21000044 	addi	r4,r4,1
  810be4:	29400044 	addi	r5,r5,1
  810be8:	10fffa26 	beq	r2,r3,810bd4 <memcmp+0x48>
  810bec:	10c5c83a 	sub	r2,r2,r3
  810bf0:	f800283a 	ret
  810bf4:	0005883a 	mov	r2,zero
  810bf8:	f800283a 	ret
  810bfc:	30bfffc4 	addi	r2,r6,-1
  810c00:	003ff106 	br	810bc8 <memcmp+0x3c>

00810c04 <__register_exitproc>:
  810c04:	00802074 	movhi	r2,129
  810c08:	10cbf417 	ldw	r3,12240(r2)
  810c0c:	18805217 	ldw	r2,328(r3)
  810c10:	10001726 	beq	r2,zero,810c70 <__register_exitproc+0x6c>
  810c14:	10c00117 	ldw	r3,4(r2)
  810c18:	1a000808 	cmpgei	r8,r3,32
  810c1c:	40001b1e 	bne	r8,zero,810c8c <__register_exitproc+0x88>
  810c20:	20000b26 	beq	r4,zero,810c50 <__register_exitproc+0x4c>
  810c24:	181090ba 	slli	r8,r3,2
  810c28:	02400044 	movi	r9,1
  810c2c:	48d2983a 	sll	r9,r9,r3
  810c30:	1211883a 	add	r8,r2,r8
  810c34:	41802215 	stw	r6,136(r8)
  810c38:	11806217 	ldw	r6,392(r2)
  810c3c:	21000098 	cmpnei	r4,r4,2
  810c40:	324cb03a 	or	r6,r6,r9
  810c44:	11806215 	stw	r6,392(r2)
  810c48:	41c04215 	stw	r7,264(r8)
  810c4c:	20000b26 	beq	r4,zero,810c7c <__register_exitproc+0x78>
  810c50:	19000084 	addi	r4,r3,2
  810c54:	200890ba 	slli	r4,r4,2
  810c58:	18c00044 	addi	r3,r3,1
  810c5c:	10c00115 	stw	r3,4(r2)
  810c60:	1105883a 	add	r2,r2,r4
  810c64:	11400015 	stw	r5,0(r2)
  810c68:	0005883a 	mov	r2,zero
  810c6c:	f800283a 	ret
  810c70:	18805304 	addi	r2,r3,332
  810c74:	18805215 	stw	r2,328(r3)
  810c78:	003fe606 	br	810c14 <__register_exitproc+0x10>
  810c7c:	11006317 	ldw	r4,396(r2)
  810c80:	2252b03a 	or	r9,r4,r9
  810c84:	12406315 	stw	r9,396(r2)
  810c88:	003ff106 	br	810c50 <__register_exitproc+0x4c>
  810c8c:	00bfffc4 	movi	r2,-1
  810c90:	f800283a 	ret

00810c94 <__call_exitprocs>:
  810c94:	defff704 	addi	sp,sp,-36
  810c98:	00802074 	movhi	r2,129
  810c9c:	dcc00315 	stw	r19,12(sp)
  810ca0:	14cbf417 	ldw	r19,12240(r2)
  810ca4:	dc800215 	stw	r18,8(sp)
  810ca8:	dfc00815 	stw	ra,32(sp)
  810cac:	9c805217 	ldw	r18,328(r19)
  810cb0:	ddc00715 	stw	r23,28(sp)
  810cb4:	dd800615 	stw	r22,24(sp)
  810cb8:	dd400515 	stw	r21,20(sp)
  810cbc:	dd000415 	stw	r20,16(sp)
  810cc0:	dc400115 	stw	r17,4(sp)
  810cc4:	dc000015 	stw	r16,0(sp)
  810cc8:	90001026 	beq	r18,zero,810d0c <__call_exitprocs+0x78>
  810ccc:	202b883a 	mov	r21,r4
  810cd0:	282d883a 	mov	r22,r5
  810cd4:	05000044 	movi	r20,1
  810cd8:	94000117 	ldw	r16,4(r18)
  810cdc:	847fffc4 	addi	r17,r16,-1
  810ce0:	88000a16 	blt	r17,zero,810d0c <__call_exitprocs+0x78>
  810ce4:	84000044 	addi	r16,r16,1
  810ce8:	802090ba 	slli	r16,r16,2
  810cec:	9421883a 	add	r16,r18,r16
  810cf0:	b0001126 	beq	r22,zero,810d38 <__call_exitprocs+0xa4>
  810cf4:	80804017 	ldw	r2,256(r16)
  810cf8:	15800f26 	beq	r2,r22,810d38 <__call_exitprocs+0xa4>
  810cfc:	8c7fffc4 	addi	r17,r17,-1
  810d00:	88bfffd8 	cmpnei	r2,r17,-1
  810d04:	843fff04 	addi	r16,r16,-4
  810d08:	103ff91e 	bne	r2,zero,810cf0 <__call_exitprocs+0x5c>
  810d0c:	dfc00817 	ldw	ra,32(sp)
  810d10:	ddc00717 	ldw	r23,28(sp)
  810d14:	dd800617 	ldw	r22,24(sp)
  810d18:	dd400517 	ldw	r21,20(sp)
  810d1c:	dd000417 	ldw	r20,16(sp)
  810d20:	dcc00317 	ldw	r19,12(sp)
  810d24:	dc800217 	ldw	r18,8(sp)
  810d28:	dc400117 	ldw	r17,4(sp)
  810d2c:	dc000017 	ldw	r16,0(sp)
  810d30:	dec00904 	addi	sp,sp,36
  810d34:	f800283a 	ret
  810d38:	90800117 	ldw	r2,4(r18)
  810d3c:	81800017 	ldw	r6,0(r16)
  810d40:	10bfffc4 	addi	r2,r2,-1
  810d44:	14401726 	beq	r2,r17,810da4 <__call_exitprocs+0x110>
  810d48:	80000015 	stw	zero,0(r16)
  810d4c:	303feb26 	beq	r6,zero,810cfc <__call_exitprocs+0x68>
  810d50:	a446983a 	sll	r3,r20,r17
  810d54:	90806217 	ldw	r2,392(r18)
  810d58:	95c00117 	ldw	r23,4(r18)
  810d5c:	1884703a 	and	r2,r3,r2
  810d60:	1000081e 	bne	r2,zero,810d84 <__call_exitprocs+0xf0>
  810d64:	303ee83a 	callr	r6
  810d68:	90c00117 	ldw	r3,4(r18)
  810d6c:	98805217 	ldw	r2,328(r19)
  810d70:	1dc0011e 	bne	r3,r23,810d78 <__call_exitprocs+0xe4>
  810d74:	90bfe126 	beq	r18,r2,810cfc <__call_exitprocs+0x68>
  810d78:	103fe426 	beq	r2,zero,810d0c <__call_exitprocs+0x78>
  810d7c:	1025883a 	mov	r18,r2
  810d80:	003fd506 	br	810cd8 <__call_exitprocs+0x44>
  810d84:	90806317 	ldw	r2,396(r18)
  810d88:	81002017 	ldw	r4,128(r16)
  810d8c:	1886703a 	and	r3,r3,r2
  810d90:	1800061e 	bne	r3,zero,810dac <__call_exitprocs+0x118>
  810d94:	200b883a 	mov	r5,r4
  810d98:	a809883a 	mov	r4,r21
  810d9c:	303ee83a 	callr	r6
  810da0:	003ff106 	br	810d68 <__call_exitprocs+0xd4>
  810da4:	94400115 	stw	r17,4(r18)
  810da8:	003fe806 	br	810d4c <__call_exitprocs+0xb8>
  810dac:	303ee83a 	callr	r6
  810db0:	003fed06 	br	810d68 <__call_exitprocs+0xd4>
